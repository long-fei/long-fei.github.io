<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>陈龙飞</title>
  
  <subtitle>Android Dev</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.chenlongfei.cn/"/>
  <updated>2018-10-28T08:16:39.572Z</updated>
  <id>http://www.chenlongfei.cn/</id>
  
  <author>
    <name>Troy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>印象♥台湾</title>
    <link href="http://www.chenlongfei.cn/2018/10/14/hello-taiwan/"/>
    <id>http://www.chenlongfei.cn/2018/10/14/hello-taiwan/</id>
    <published>2018-10-14T06:14:19.000Z</published>
    <updated>2018-10-28T08:16:39.572Z</updated>
    
    <content type="html"><![CDATA[<p> 承诺带家人去旅行的计划，这次总算得以实现。考虑到饮食习俗和语言文化，参考了多个目的地，最终选定了台湾。这次行程我再次选择了国泰航空，家人从上海出发经香港中转与我汇合后一同飞往台北。从台北沿东海岸线一路向南，主要游玩路线：台北–花莲–垦丁–高雄–台北。</p><a id="more"></a><h3 id="出发前"><a href="#出发前" class="headerlink" title="出发前"></a>出发前</h3><h4 id="证件篇："><a href="#证件篇：" class="headerlink" title="证件篇："></a>证件篇：</h4><ul><li>台湾通行证</li><li>入台证</li></ul><h4 id="装备篇："><a href="#装备篇：" class="headerlink" title="装备篇："></a>装备篇：</h4><ul><li>相机：索尼A6300</li><li>镜头：适马 FE30mm F1.4、索尼 FE16-35mm F4</li><li>运动相机：GoPro HERO 5 Black</li><li>稳定器：飞宇G5</li><li>三角架：思锐T025X</li></ul><h3 id="DAY1"><a href="#DAY1" class="headerlink" title="DAY1"></a>DAY1</h3><p>第一天由于延误，到达桃园机场已是晚上十点多。几个航班几百号人同时排队入境，出机场前前后后花了一个多小时，负责接机的小哥一直催促。不过值得称赞的是，司机小哥的服务还算到位，主动帮忙搬行李。由于桃园机场距离台北市区四十五公里，入住酒店时已是深夜，深感疲惫。</p><h3 id="DAY2"><a href="#DAY2" class="headerlink" title="DAY2"></a>DAY2</h3><p>第二天安排的行程比较紧，早早便起床了。为期两天的台北游，我们选择公车+捷运的方式出行。在酒店楼下FamilyMart购买了交通卡，步行前往我们行程的第一个景点。</p><p>工作日，整洁干净的街道上一排排停放整齐的机车。在台湾，机车不仅仅是机车更像是一种文化。</p><p><img src="http://pic.luochenxun.com//18-10-20/24176120.jpg" alt=""></p><p>路过早餐摊，要了鸡蛋饼，味道不错，美好的一天当然是从早餐开始。</p><p><img src="http://pic.luochenxun.com//18-10-21/69333590.jpg" alt=""></p><p>西门町步行街，白天人迹稀少，许多店铺还未营业，只有夜幕降临后才能体会到它的热闹。</p><p><img src="http://pic.luochenxun.com//18-10-21/37011984.jpg" alt=""></p><p>紧邻西门町的西门红楼，建于1908年，曾经又破又旧，以专门放小电影而闻名，如今已变为剧场。</p><p><img src="http://pic.luochenxun.com//18-10-21/89467378.jpg" alt=""></p><p>台北的公交站，没有大大广告牌。</p><p><img src="http://pic.luochenxun.com//18-10-21/8781985.jpg" alt=""></p><p>龙山寺，台北第一名刹，精巧的设计，美妙绝伦，往来的香客也是络绎不绝。</p><p><img src="http://pic.luochenxun.com//18-10-21/89734053.jpg" alt=""></p><p><img src="http://pic.luochenxun.com//18-10-21/45247225.jpg" alt=""></p><p>台北总统府，每月第一个周六为总统府大范围开放日。这次时间上完美错过，只能隔个马路在外面拍照，门口正在搭台子庆祝双十节(台湾的国庆节)。</p><p><img src="http://pic.luochenxun.com//18-10-21/72612589.jpg" alt=""></p><p>看到学校，有没有联想到台湾的青春电影？</p><p><img src="http://pic.luochenxun.com//18-10-21/44961048.jpg" alt=""></p><p>中正纪念堂，为纪念蒋介石而建造的纪念堂，每个整点驻守的仪仗队交接仪式很值得一看。</p><p><img src="http://pic.luochenxun.com//18-10-21/84191108.jpg" alt=""></p><p>交接仪式开始了，整个交接过程大概持续十几分钟，左右两边卫兵纹丝不动，差点以为是雕塑。</p><p><img src="http://pic.luochenxun.com//18-10-21/5290272.jpg" alt=""></p><p>午饭吃到了正宗的卤肉饭，卤肉入口即化，肥而不腻。也不知道是不是太饿的原因，之后也再未遇到这么好吃的卤肉饭。(推荐中正纪念堂附近的“金峰鲁肉饭”)</p><p><img src="http://pic.luochenxun.com//18-10-21/77139055.jpg" alt=""></p><p>整整一个上午游玩下来，家人觉得有点累，送完他们回酒店休息，一个人背着相机，扛着三角架，在街头乱逛。</p><p><img src="http://pic.luochenxun.com//18-10-21/54728972.jpg" alt=""></p><p>国父纪念馆，为纪念孙中山而建造。同样有仪仗队交接仪式，中正纪念堂已经看过了，没有兴趣再重复看了。</p><p><img src="http://pic.luochenxun.com//18-10-21/78590884.jpg" alt=""></p><p>逛完国父纪念馆，随后前往拍摄101高楼的绝佳地点–象山。象山虽然不高，但是带着相机和三角架，爬得也很吃力。为了拍到完美的夜景，好歹爬到摄手平台。</p><p><img src="http://pic.luochenxun.com//18-10-21/86696819.jpg" alt=""></p><p>在摄手平台占到一个C位，也就拍了一个小时吧。</p><p><img src="http://pic.luochenxun.com//18-10-21/10526078.jpg" alt=""></p><p>从象山下来便去了宁夏夜市。背着沉重的装备，挤在人山人海的夜市中，此时天空忽然下起了小雨，疲惫的一天，连照片都懒得拍了。望着长长的夜市，实在走不动了，打包了几份小吃，匆忙打车回了酒店。</p><h3 id="DAY3"><a href="#DAY3" class="headerlink" title="DAY3"></a>DAY3</h3><p>前一天的行程过于紧凑，暴走的一天导致腿脚酸痛。睡了个懒觉，来到西门町，吃到了超级好吃的“阿宗面线”。没错，我是站着把面吃完的！</p><p><img src="http://pic.luochenxun.com//18-10-21/60258937.jpg" alt=""></p><p>奔向故宫博物馆的路上，空荡荡的公交车像是被我们包车了。(台北公车前后都能刷卡，非优惠卡在下车时刷卡既可)</p><p><img src="http://pic.luochenxun.com//18-10-21/75622611.jpg" alt=""></p><p>故宫博物馆，这是我在台北见过的游客最多的景点。众所周知，由于某些政治原因，近几年赴台旅游的大陆游客骤降，爽了我们这些游客，但是也苦了当地的旅游业。   </p><p>(博物馆禁止带水和食物，双肩包也必须存管，排队存包会浪费掉大量时间。)</p><p><img src="http://pic.luochenxun.com//18-10-21/2997299.jpg" alt=""></p><p>镇店之宝，肉形石、大白菜。馆内藏品数量达65万5千多件，每次展出的数量有限，展件也会定期更换。这次虽然租了讲解器，但馆内人实在太多，根本没机会细细听完，最后也是走马观花匆匆逛完。</p><p><img src="http://pic.luochenxun.com//18-10-21/4669405.jpg" alt=""></p><p><img src="http://pic.luochenxun.com//18-10-21/58337807.jpg" alt=""></p><p>佛系的一天，虽然没走多少路，但逛完博物馆感觉已经迈不动脚步。决定回去吃晚饭，准确点来说应该是吃中饭。</p><p>西门町夜景，“康是美”麻烦给我付广告费。</p><p><img src="http://pic.luochenxun.com//18-10-21/88117338.jpg" alt=""></p><p>台湾三大夜市之一，士林夜市。真的可以走一路，吃一路，玩一路。</p><p><img src="http://pic.luochenxun.com//18-10-21/15971770.jpg" alt=""></p><p>超级好吃的蚵仔煎（忠诚号蚵仔煎），酱料应该是秘制的。</p><p><img src="http://pic.luochenxun.com//18-10-21/38401336.jpg" alt=""></p><h3 id="DAY4"><a href="#DAY4" class="headerlink" title="DAY4"></a>DAY4</h3><p>台湾的便利店真的很方便，前一天晚上在FamilyMart打印好预订的台铁票，清晨便直奔台北车站坐台铁前往花莲。</p><p><img src="http://pic.luochenxun.com//18-10-21/57114868.jpg" alt=""></p><p>月台等车，开启拍照模式，Hello Kitty彩绘的太鲁阁号有点萌。</p><p><img src="http://pic.luochenxun.com//18-10-21/89511800.jpg" alt=""></p><p><img src="http://pic.luochenxun.com//18-10-21/35843098.jpg" alt=""></p><p>(早起毁一天，从上台铁的那一刻，一直睡觉，错过了沿途的海岸风光。作为普列，台铁整体体验接近于国内动车)</p><p>受台风影响沿途飘起了小雨，没想到到达花莲后，天空放晴了。   </p><p>(花莲县位于台湾东部，夹在高山与大海之间，主要以自然景观为主，公共交通无法直达景区，因此只能包车或者骑摩托车游玩)</p><p><img src="http://pic.luochenxun.com//18-10-21/90192271.jpg" alt=""></p><p>七星潭，不是潭，而是海湾，海滩没有沙子只有鹅卵石，迎面就是太平洋。经历了两天的城市游，在看到大海的那一刻，竟然莫名的兴奋。</p><p><img src="http://pic.luochenxun.com//18-10-21/84032256.jpg" alt=""></p><p><img src="http://pic.luochenxun.com//18-10-21/77575311.jpg" alt=""></p><p>太平洋的波涛汹涌之极，我深深的感受到了。</p><p><img src="http://pic.luochenxun.com//18-10-21/86576738.jpg" alt=""></p><p>面对太平洋比心，吹吹海风，听听海浪，感觉自己快要被晒成咸鱼了。</p><p><img src="http://pic.luochenxun.com//18-10-21/21054622.jpg" alt=""></p><p>七星潭往里走便是太鲁阁国家森林公园，公园的面积很大，峡谷、瀑布无处不见，人工开凿横贯台湾东西的山路弯曲在其中，一面是山另一面便是峡谷，行驶在其中也是小心翼翼。</p><p><img src="http://pic.luochenxun.com//18-10-21/9029432.jpg" alt=""></p><p><img src="http://pic.luochenxun.com//18-10-21/26307858.jpg" alt=""></p><p>清水断崖，苏花公路上最美的地方。一边是悬崖峭壁，一边是茫茫大海。</p><p><img src="http://pic.luochenxun.com//18-10-21/27829224.jpg" alt=""></p><p>29个集装箱堆叠的星巴克，非常有设计感，适合打卡拍照。</p><p><img src="http://pic.luochenxun.com//18-10-21/74048938.jpg" alt=""></p><p>花莲东大门夜市。</p><p><img src="http://pic.luochenxun.com//18-10-21/20020661.jpg" alt=""></p><p>棺材板，好吃且特色的小吃，吐司挖空，放上不同的食材，再盖上盖子。</p><p><img src="http://pic.luochenxun.com//18-10-21/33285623.jpg" alt=""></p><h3 id="DAY5"><a href="#DAY5" class="headerlink" title="DAY5"></a>DAY5</h3><p>今天的行程我们将继续包车前往垦丁，花莲-垦丁有“纵谷线”和“海岸线”可以选择。我们选择了“纵谷线”，全程三百公里左右，由于没有高速公路，沿着11号公路和9号公路行驶，早上8点多出发，包含中途游玩时间，直至下午6点多才到达垦丁。</p><p>花莲糖厂,日治时期由日本经营，现主要为观光用途，日式木构造建筑群，保留得非常完好。</p><p><img src="http://pic.luochenxun.com//18-10-27/1075023.jpg" alt=""></p><p>瑞穗牧场，牧场商店的牛扎糖超好吃。</p><p><img src="http://pic.luochenxun.com//18-10-27/13121517.jpg" alt=""></p><p>瑞穗北回归线纪念碑，亚热带与热带的分界点。</p><p><img src="http://pic.luochenxun.com//18-10-27/48304816.jpg" alt=""></p><p>池上便当总铺，很有特色的快餐店，类似于铁路便当。</p><p><img src="http://pic.luochenxun.com//18-10-27/20817685.jpg" alt=""></p><p>伯朗大道，金城武拍摄的“伯朗咖啡”广告而走红的小路，道路两旁翠绿的稻田，一望无际，非常惊艳。</p><p><img src="http://pic.luochenxun.com//18-10-27/6004069.jpg" alt=""></p><p><img src="http://pic.luochenxun.com//18-10-28/40213442.jpg" alt=""></p><p>路上拍到的日落。</p><p><img src="http://pic.luochenxun.com//18-10-27/25486186.jpg" alt=""></p><p>这一路的行程，短暂但又令人惊叹。台湾的东部主要以农业为主，行驶在两山之间的峡谷道路上，两旁的农作物极为丰富，有水稻、玉米、凤梨、火龙果、甘蔗、槟榔、芭蕉等等。</p><h3 id="DAY6"><a href="#DAY6" class="headerlink" title="DAY6"></a>DAY6</h3><p>原本计划这一天租机车游玩垦丁，了解到没有国际驾照的情况下只能租电动车，并且不可载人，不得不放弃这个方案，改为包车游。幸运的是，我们遇到了一个很好的司导，不仅给我们准备了冰水，送我们纪念品，还悄悄的给我们买了凤梨，最后在超时的情况下送我们去后壁湖吃海鲜，还毅然等我们吃完再我们送回民宿。</p><p>船帆石，耸立在海面的巨大珊瑚石，从外海看，形似船帆。</p><p><img src="http://pic.luochenxun.com//18-10-27/61056407.jpg" alt=""></p><p><img src="http://pic.luochenxun.com//18-10-27/3694306.jpg" alt=""></p><p>鹅銮鼻公园，全世界唯一的武装灯塔，南部海域多珊瑚礁石，灯塔是这片海域的指引明灯。</p><p><img src="http://pic.luochenxun.com//18-10-27/55926536.jpg" alt=""></p><p>台湾最南点碑，国境之南。</p><p><img src="http://pic.luochenxun.com//18-10-27/70501346.jpg" alt=""></p><p>龙磐公园，站在崩崖上，眺望远处的海岸，眼前广阔的海景尺收眼底。这里光染污极少，晚上也是看星空的好地方。</p><p><img src="http://pic.luochenxun.com//18-10-28/93691346.jpg" alt=""></p><p>风吹沙，冬天东北季风盛行时，沙沿崖坡吹送至崖顶。</p><p><img src="http://pic.luochenxun.com//18-10-27/63435536.jpg" alt=""></p><p>恒春出火，</p><p><img src="http://pic.luochenxun.com//18-10-27/86796153.jpg" alt=""></p><p>海角七号取景地，阿嘉的家。</p><p><img src="http://pic.luochenxun.com//18-10-27/80209446.jpg" alt=""></p><p>白沙湾，少年派的奇幻漂流“Pi”经过七个月的海上历险，最后登陆上岸<br>的海滩。</p><p><img src="http://pic.luochenxun.com//18-10-27/30971740.jpg" alt=""></p><p><img src="http://pic.luochenxun.com//18-10-27/16356272.jpg" alt=""></p><p>关山，位于恒春半岛西南，由于地势高，山顶上视野广阔，是观赏夕照及远眺恒春半岛各区的最佳地点。</p><p><img src="http://pic.luochenxun.com//18-10-27/52542832.jpg" alt=""></p><p>后壁湖，邱家生鱼片</p><p><img src="http://pic.luochenxun.com//18-10-23/71037627.jpg" alt=""></p><h3 id="DAY7"><a href="#DAY7" class="headerlink" title="DAY7"></a>DAY7</h3><p>垦丁返回台北，为了安全和节省时间，选择了高铁，距离垦丁最近的高铁站就是高雄左营车站，垦丁到高雄最快的方式就是包车。我们的这段包车行程，体验非常差，先是上车时司机要跟我们确认订单，并告知我预订的明明是三个人。而后在车内又提醒我们在车上吃东西不要掉在车上（我们压根就没吃），全程也是一脸冷漠。</p><p>到达左营车站后，想着距离发车时间还很充足，我们决定去看看号称世界最美地铁站之一的美丽岛捷运站。看，果然很美！</p><p><img src="http://pic.luochenxun.com//18-10-21/84301545.jpg" alt=""></p><p>高雄到台北三百多公里的路程，高铁只需两个小时不到。这一路与在台铁上看到风景大为不同，台湾西部以平原为主，集中了众多工业，城市也相比东部城市更为发达。</p><p>回到台北已是下午，闲不住去逛了下松山文创园区，顺路排队去买了网红凤梨酥，晚上又陪着两个女人药妆店买买买，各自收获满满的一天。</p><p><img src="http://pic.luochenxun.com//18-10-21/27243884.jpg" alt=""></p><p><img src="http://pic.luochenxun.com//18-10-21/47738035.jpg" alt=""></p><p><img src="http://pic.luochenxun.com//18-10-21/20131788.jpg" alt=""></p><h3 id="DAY8"><a href="#DAY8" class="headerlink" title="DAY8"></a>DAY8</h3><p>早上收拾好行李，忍不住又跑去西门町，吃了一次“阿宗面线”。八天的行程很仓促，台湾是一个适合深度游玩的地方，下次又会和谁一同重游呢？不知道又会是怎样的心情。我带着憧憬和回忆踏上了返程之路。</p><p><img src="http://pic.luochenxun.com//18-10-21/79171464.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 承诺带家人去旅行的计划，这次总算得以实现。考虑到饮食习俗和语言文化，参考了多个目的地，最终选定了台湾。这次行程我再次选择了国泰航空，家人从上海出发经香港中转与我汇合后一同飞往台北。从台北沿东海岸线一路向南，主要游玩路线：台北–花莲–垦丁–高雄–台北。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>加油宝APP组件化改造流程</title>
    <link href="http://www.chenlongfei.cn/2018/07/05/app-component/"/>
    <id>http://www.chenlongfei.cn/2018/07/05/app-component/</id>
    <published>2018-07-05T07:47:55.000Z</published>
    <updated>2018-10-15T10:31:22.401Z</updated>
    
    <content type="html"><![CDATA[<p><strong>什么是组件化：</strong><br>将APP按业务及功能拆分为多个模块，每个模块为一个单独的组件(Module)，各组件之间相互隔离并行开发，组件可以单独编译独立运行。<br><a id="more"></a></p><p><strong>加油宝组件化改造背景：</strong></p><ol><li>APP不断跌代，业务逐渐壮大，业务之间耦合严重。</li><li>不合理的设计，项目维护与迭代变得困难。</li><li>单Module项目，编译速度下降，影响开发与调试效率。</li></ol><p><strong>加油宝组件化改造目标：</strong></p><ol><li>代码结构清晰化</li><li>业务解耦合，业务组件可以单独调试</li><li>易于维护与测试</li></ol><h3 id="组件化基本结构"><a href="#组件化基本结构" class="headerlink" title="组件化基本结构"></a>组件化基本结构</h3><ul><li>上层Main App相当于运行的容器，集成所有业务组件形成一个完整功能的APP。</li><li>中间层Module，是功能完整的独立业务组件，组件之间不可以相互依赖。</li><li>底层基础库Library，提供基础功能，被业务组件依赖。</li></ul><p><img src="http://pic.luochenxun.com/18-7-7/89085392.jpg" alt=""></p><h3 id="组件化改造大流程"><a href="#组件化改造大流程" class="headerlink" title="组件化改造大流程"></a>组件化改造大流程</h3><p>本次改造总共分为五个阶段，由简入繁，采用渐近式改造项目。</p><p><img src="http://pic.luochenxun.com/18-7-7/948670.jpg" alt=""></p><h4 id="基础资源"><a href="#基础资源" class="headerlink" title="基础资源"></a>基础资源</h4><p>将基础通用资源拆分出来，独立为一个BaseRes Module。方便被业务组件引用。</p><p><img src="http://pic.luochenxun.com/18-7-7/27560011.jpg" alt=""></p><h4 id="基础库"><a href="#基础库" class="headerlink" title="基础库"></a>基础库</h4><p>将基础功能从项目中拆分出来，独立为一个BaseLib Module。方便被业务组件依赖。</p><p><img src="http://pic.luochenxun.com/18-7-7/77665250.jpg" alt=""></p><h4 id="组件拆分"><a href="#组件拆分" class="headerlink" title="组件拆分"></a>组件拆分</h4><ul><li>按业务功能将组件进行划分</li><li>组件可在Application与Library间切换</li><li>组件生命周期，加载、卸载、降维</li><li>组件间代码隔离</li></ul><p><img src="http://pic.luochenxun.com/18-7-7/12641897.jpg" alt=""></p><h4 id="组件通信"><a href="#组件通信" class="headerlink" title="组件通信"></a>组件通信</h4><ul><li>路由通信，处理各组件间页面跳转。</li><li>事件通信，处理各组件间动作传递。</li><li>数据通信，处理各组件间数据传递。</li></ul><p><img src="http://pic.luochenxun.com/18-7-7/3133828.jpg" alt=""></p><h4 id="业务重构"><a href="#业务重构" class="headerlink" title="业务重构"></a>业务重构</h4><p>各业务组件可按需选择合适的架构设计。</p><p><img src="http://pic.luochenxun.com/18-7-7/51566907.jpg" alt=""></p><h3 id="改造难点"><a href="#改造难点" class="headerlink" title="改造难点"></a>改造难点</h3><ul><li>需要熟悉原有代码逻辑，并深入理解业务，划分代码边界。</li><li>组件化改造可能影响迭代进度。</li></ul><h3 id="业内成熟方案"><a href="#业内成熟方案" class="headerlink" title="业内成熟方案"></a>业内成熟方案</h3><ol><li><a href="https://github.com/luckybilly/CC" target="_blank" rel="noopener">CC</a></li><li><a href="https://github.com/mqzhangw/JIMU" target="_blank" rel="noopener">JIMU</a></li></ol><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="https://www.jianshu.com/p/1b1d77f58e84" target="_blank" rel="noopener">Android彻底组件化方案实践</a></li><li><a href="http://blog.spinytech.com/2016/12/28/android_modularization/" target="_blank" rel="noopener">Android架构思考(模块化、多进程)</a></li><li><a href="https://juejin.im/post/5a4b4425518825128654eef4" target="_blank" rel="noopener">聚美组件化实践之路</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;什么是组件化：&lt;/strong&gt;&lt;br&gt;将APP按业务及功能拆分为多个模块，每个模块为一个单独的组件(Module)，各组件之间相互隔离并行开发，组件可以单独编译独立运行。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>日本关西八日游</title>
    <link href="http://www.chenlongfei.cn/2018/05/12/kansai-travels/"/>
    <id>http://www.chenlongfei.cn/2018/05/12/kansai-travels/</id>
    <published>2018-05-12T06:22:19.000Z</published>
    <updated>2018-10-15T10:31:22.339Z</updated>
    
    <content type="html"><![CDATA[<p>三月初蒙生去日本游玩的想法，从查机票确认出行时间，准备材料签证，订机票，订酒店，做攻略，经历漫长的一个多月，于4月29这天我们出发啦。<br><a id="more"></a><br>本文采用流水帐式叙述，多图杀猫，主要记录自己的看法与见闻。</p><h3 id="DAY1"><a href="#DAY1" class="headerlink" title="DAY1"></a>DAY1</h3><ul><li><p>从深圳湾口岸过关去香港机场，大清早人可真少，同行的小伙伴表示兴奋得一晚上没睡好。而我为了今天能保持良好的精神状态，头天晚上就早早入睡了。<br><img src="http://pic.luochenxun.com/18-5-12/13916283.jpg" alt=""></p></li><li><p>提前两小时到达机场，托运了行李箱，先来环亚机场贵宾候机室吃个早饭。<br><img src="http://pic.luochenxun.com/18-5-12/78725538.jpg" alt=""></p></li><li><p>准点起飞，平稳飞行后，空姐开始派发飞机餐，国泰航空的飞机餐很丰富。<br><img src="http://pic.luochenxun.com/18-5-12/24145553.jpg" alt=""></p></li><li><p>乘坐的飞机，机龄虽然比较老，但好在机上影音娱乐系统还不错。看看片，小眯一会儿，历经三个多小时的飞行，已经开始准备降落了。看，下面就是大阪！<br><img src="http://pic.luochenxun.com/18-5-12/64387603.jpg" alt=""></p></li><li><p>过海关入境，人并不多，大家都有秩序的在排队。一旁也有讲中文的工作人员引导入境。<br><img src="http://pic.luochenxun.com/18-5-12/49721449.jpg" alt=""></p></li><li><p>机场取ICOCA交通卡，为了节省时间，坐JR去京都。<br><img src="http://pic.luochenxun.com/18-5-12/50394707.jpg" alt=""></p></li><li><p>先研究下路线，坐哪个车呢？有点懵！<br><img src="http://pic.luochenxun.com/18-5-12/33509316.jpg" alt=""></p></li><li><p>来不及解释了，先上车。这车头远没有咱高铁霸气！<br><img src="http://pic.luochenxun.com/18-5-12/16979726.jpg" alt=""></p></li><li><p>到达京都站，眼前就是京都塔，转公交去民宿。等等坐哪路车来着？<br><img src="http://pic.luochenxun.com/18-5-12/6348809.jpg" alt=""></p></li><li><p>看，有电车！好想坐。<br><img src="http://pic.luochenxun.com/18-5-12/50217996.jpg" alt=""></p></li><li><p>入住民宿，已是晚上九点。未来三天睡塌塌米，看着很不错。奔波一天，此刻只想睡觉。<br><img src="http://pic.luochenxun.com/18-5-12/73168143.jpg" alt=""></p></li><li><p>房东家客厅，房子不大，三室一厅，家电都是本土品牌。好奇他们晚餐吃什么。。。<br><img src="http://pic.luochenxun.com/18-5-12/99778660.jpg" alt=""></p></li></ul><p>总结:<br>到达关西机场，入境时会有讲中文的工作人员指引排队入境。整个入境过程非常轻松，工作人员态度也极好。大阪转JR去京都，千万要注意别坐错车，同一站台会停不同类型的列车。另外Google Map定位并不是很精准，导致在京都站坐公交，一直没找到站台。日本人大多很热情，在京都站找公交时，竟然有人主动上来询问我们是否需要帮助。日本是一个垃圾分类非常严格的国家，街上垃圾桶非常少，出行记得一定要带上垃圾袋。</p><h3 id="DAY2"><a href="#DAY2" class="headerlink" title="DAY2"></a>DAY2</h3><ul><li><p>清晨，安静祥和的居民区和毫无违和感的电线。猜猜我们住在哪幢？<br><img src="http://pic.luochenxun.com/18-5-12/48892502.jpg" alt=""></p></li><li><p>电车！“滴”刷卡上车。<br><img src="http://pic.luochenxun.com/18-5-12/33867738.jpg" alt=""></p></li><li><p>景区入门的小吃摊，没尝过，不知道好吃不好吃。<br><img src="http://pic.luochenxun.com/18-5-12/46924961.jpg" alt=""></p></li><li><p>伏见稻荷大社，供奉农业之神稻荷。据说日本大神非常之多，令人发指。<br><img src="http://pic.luochenxun.com/18-5-12/7164566.jpg" alt=""></p></li><li><p>真好看啊，侧面再来一张。<br><img src="http://pic.luochenxun.com/18-5-12/41419336.jpg" alt=""></p></li><li><p>千本鸟居，《艺妓回忆录》既视感。<br><img src="http://pic.luochenxun.com/18-5-12/29519409.jpg" alt=""></p></li><li><p>京都就在脚下。<br><img src="http://pic.luochenxun.com/18-5-12/81975264.jpg" alt=""></p></li><li><p>存放着1001尊千手千眼观音像和二十八部众立像的三十三间堂。<br><img src="http://pic.luochenxun.com/18-5-12/84023201.jpg" alt=""></p></li><li><p>巴士站<br><img src="http://pic.luochenxun.com/18-5-12/97484722.jpg" alt=""></p></li><li><p>猜猜为什么公交车是倾斜的？<br><img src="http://pic.luochenxun.com/18-5-12/6306572.jpg" alt=""></p></li><li><p>八坂神社<br><img src="http://pic.luochenxun.com/18-5-12/36179280.jpg" alt=""></p></li><li><p>逛饿了，吃快餐。<br><img src="http://pic.luochenxun.com/18-5-12/60947590.jpg" alt=""></p></li><li><p>偷拍穿和服的日本小姐姐。<br><img src="http://pic.luochenxun.com/18-5-12/54203398.jpg" alt=""></p></li><li><p>整洁的街道和杂乱的电线。<br><img src="http://pic.luochenxun.com/18-5-12/22969739.jpg" alt=""></p></li><li><p>传说有艺妓出没的”祗园角”，然而并没遇见。<br><img src="http://pic.luochenxun.com/18-5-12/72898306.jpg" alt=""></p></li><li><p>花间小路，非常古风的街道。<br><img src="http://pic.luochenxun.com/18-5-12/87206609.jpg" alt=""></p></li><li><p>二年坂<br><img src="http://pic.luochenxun.com/18-5-12/62615484.jpg" alt=""></p></li><li><p>古色古香风格的星巴克，内部也是榻榻米式。<br><img src="http://pic.luochenxun.com/18-5-12/21463310.jpg" alt=""></p></li><li><p>清水寺，最好看的主殿在维修。<br><img src="http://pic.luochenxun.com/18-5-12/50007593.jpg" alt=""></p></li></ul><p>总结:<br>塌塌米虽然睡着很舒服，但是隔音效果很差，早上很容易就被开关门的声音吵醒。纸糊窗户遮光效果也不好，导致早上七点就醒了。乘坐电车在站台刷卡，全凭自觉。京都的公交，停车时车门的那侧会下降，方便乘客上下车，司机会跟每个下车的人说ありがとうござい（谢谢）。公交站会有公交车到达时间，并且基本准确。日本都是直饮水，公园、神社、寺庙随处可见直饮设备。街头烟、饮料、冰淇淋自动贩售机也非常多。</p><h3 id="DAY3"><a href="#DAY3" class="headerlink" title="DAY3"></a>DAY3</h3><ul><li><p>太热了，抹茶甜筒来一个。<br><img src="http://pic.luochenxun.com/18-5-12/50878827.jpg" alt=""></p></li><li><p>岚山公园，郊游的好去处。<br><img src="http://pic.luochenxun.com/18-5-12/20668109.jpg" alt=""></p></li><li><p>发现艺妓，一路跟拍。<br><img src="http://pic.luochenxun.com/18-5-12/42261789.jpg" alt=""></p></li><li><p>豆腐料理，含泪吃完了所有的豆腐。<br><img src="http://pic.luochenxun.com/18-5-12/36619570.jpg" alt=""></p></li><li><p>金阁寺，下雪天应该更好看。<br><img src="http://pic.luochenxun.com/18-5-12/106420.jpg" alt=""></p></li><li><p>夜食网红”一兰拉面”，温泉蛋太好吃了。<br><img src="http://pic.luochenxun.com/18-5-12/39060223.jpg" alt=""></p></li></ul><p>总结:<br>抹茶甜筒一定要吃，好吃并且不贵。京都景点随处可以见米其林餐厅及百年老店，想吃的一定要提前网上预订，不然不接待。网红餐厅大都需要排队，吃饭最好准备现金，有些餐厅是不接受刷卡的。</p><h3 id="DAY4"><a href="#DAY4" class="headerlink" title="DAY4"></a>DAY4</h3><ul><li><p>二条城，德川家康所建，第十五代将军德川庆喜，在二条城举行“大政奉还”仪式，将政权归还给了天皇。行走在二之丸殿地板上会发出黄莺鸣叫的响声，据说是为了防刺客。<br><img src="http://pic.luochenxun.com/18-5-12/87017404.jpg" alt=""></p></li><li><p>西本愿寺，没啥好看，迅速逛完。<br><img src="http://pic.luochenxun.com/18-5-12/96614515.jpg" alt=""></p></li><li><p>再见北白川，下一站大阪。<br><img src="http://pic.luochenxun.com/18-5-12/5310076.jpg" alt=""></p></li><li><p>大阪烧<br><img src="http://pic.luochenxun.com/18-5-12/37924622.jpg" alt=""></p></li></ul><p>总结:<br>千年古城的京都，算是一座生活节奏缓慢的城市，生活便利，交通发达，非常适合居住。房子以独门独户为主，自带车库。出行以公交为主，电车为辅，地铁较少。</p><h3 id="DAY5"><a href="#DAY5" class="headerlink" title="DAY5"></a>DAY5</h3><ul><li><p>大阪城天守阁，丰臣秀吉家族在这里被德川家康所灭。<br><img src="http://pic.luochenxun.com/18-5-12/28724119.jpg" alt=""></p></li><li><p>大阪历史博物馆<br><img src="http://pic.luochenxun.com/18-5-12/75665236.jpg" alt=""></p></li><li><p>黑门市场，主营海鲜水产。<br><img src="http://pic.luochenxun.com/18-5-12/58532924.jpg" alt=""></p></li><li><p>我就看看，不乱买。<br><img src="http://pic.luochenxun.com/18-5-12/22017207.jpg" alt=""></p></li><li><p>梅田大厦，看大阪夜景。<br><img src="http://pic.luochenxun.com/18-5-12/53859868.jpg" alt=""></p></li></ul><h3 id="DAY6"><a href="#DAY6" class="headerlink" title="DAY6"></a>DAY6</h3><ul><li><p>全日本第一家星巴克<br><img src="http://pic.luochenxun.com/18-5-12/4776657.jpg" alt=""></p></li><li><p>北野异人馆街，明治时代外国人居住的地方。<br><img src="http://pic.luochenxun.com/18-5-12/73617187.jpg" alt=""></p></li><li><p>南京町，猜猜他们都在排队买什么？<br><img src="http://pic.luochenxun.com/18-5-12/46398263.jpg" alt=""></p></li><li><p>大丸百货，买买买的地方，每层都中文翻译，无障碍沟通。<br><img src="http://pic.luochenxun.com/18-5-12/1319737.jpg" alt=""></p></li></ul><h3 id="DAY7"><a href="#DAY7" class="headerlink" title="DAY7"></a>DAY7</h3><ul><li><p>奈良公园，随处可见的鹿群。<br><img src="http://pic.luochenxun.com/18-5-12/88213318.jpg" alt=""></p></li><li><p>东大寺，距今1200历史的木造建筑是怎么被保留下来的？<br><img src="http://pic.luochenxun.com/18-5-12/29065585.jpg" alt=""></p></li><li><p>还是东大寺<br><img src="http://pic.luochenxun.com/18-5-12/81019595.jpg" alt=""></p></li><li><p>春日大社<br><img src="http://pic.luochenxun.com/18-5-12/48412258.jpg" alt=""></p></li><li><p>排队两个小时，才吃到的午饭。<br><img src="http://pic.luochenxun.com/18-5-12/28138699.jpg" alt=""></p></li><li><p>心斋桥<br><img src="http://pic.luochenxun.com/18-5-12/96449738.jpg" alt=""></p></li><li><p>道顿掘，大阪最繁华的地方。<br><img src="http://pic.luochenxun.com/18-5-12/59391448.jpg" alt=""></p></li></ul><h3 id="DAY8"><a href="#DAY8" class="headerlink" title="DAY8"></a>DAY8</h3><ul><li>我胡汉三返程了<br><img src="http://pic.luochenxun.com/18-5-12/38250097.jpg" alt=""></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;三月初蒙生去日本游玩的想法，从查机票确认出行时间，准备材料签证，订机票，订酒店，做攻略，经历漫长的一个多月，于4月29这天我们出发啦。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android源码编译</title>
    <link href="http://www.chenlongfei.cn/2017/04/11/android-aosp/"/>
    <id>http://www.chenlongfei.cn/2017/04/11/android-aosp/</id>
    <published>2017-04-11T08:28:30.000Z</published>
    <updated>2017-04-11T12:52:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>作为一名Android开发者，你可能对Android源码充满了好奇，或者想尝试自己动手编译ROM。受限于网络环境及硬件配置，只能望而兴叹。本文将介绍一种以极低的成本实现这一目标的方法（共计花费半天时间和1美刀）。出发吧少年！</p><a id="more"></a><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>在<a href="http://www.vultr.com/?ref=7142750" target="_blank" rel="noopener">Vultr</a>注册帐号（Vultr相关优惠码请自行Google），充值并购买VPS主机，尽量选择高配置机器，不要被月付的费用吓倒，实际使用中是按小时计费。</p><h3 id="编译环境"><a href="#编译环境" class="headerlink" title="编译环境"></a>编译环境</h3><ul><li>Ubuntu 16.04 64-bit</li><li>CPU:6 vCore RAM:16384 MB</li><li>200 GB SSD</li></ul><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p><strong>安装依赖</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo apt-get update &amp;&amp; sudo apt-get install git ccache automake lzop bison gperf build-essential zip unzip curl zlib1g-dev zlib1g-dev:i386 g++-multilib python-networkx libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven bc pngquant imagemagick yasm</span><br></pre></td></tr></table></figure></p><p><strong>安装JDK</strong><br>Android Open Source Project（AOSP）的master分支需要Java 8。在Ubuntu下可以使用OpenJDK。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo apt-get update</span><br><span class="line"><span class="meta">$</span> sudo apt-get install openjdk-8-jdk</span><br></pre></td></tr></table></figure></p><h3 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h3><p>本文以MoKee源码为例（MoKee Open Source是基于Google AOSP开发的一个Android分支，并适配了多个机型）。</p><p><strong>配置Git</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git config --global user.name "Your Name"</span><br><span class="line"><span class="meta">$</span> git config --global user.email "you@example.com"</span><br></pre></td></tr></table></figure></p><p><strong>安装Repo</strong><br>Repo是一个方便在Android中使用Git的工具<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> mkdir -p ~/bin</span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> curl http://commondatastorage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo</span><br><span class="line"><span class="meta">$</span> chmod a+x ~/bin/repo</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> echo "export PATH=~/bin:$PATH" &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure><p><strong>初始化Repo客户端</strong><br>新建一个目录用来存放源码文件<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> mkdir -p ~/mokee</span><br></pre></td></tr></table></figure></p><p><strong>同步源码</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> cd ~/mokee</span><br><span class="line"><span class="meta">$</span> repo init -u https://github.com/MoKee/android -b mkn-mr1</span><br><span class="line"><span class="meta">$</span> repo sync -j4 -f --no-clone-bundle</span><br></pre></td></tr></table></figure></p><p><strong>同步结束，查看源码目录</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@AndroidDev:~/mokee# ls</span><br><span class="line">Android.bp  bootstrap.bash  doc              out               system</span><br><span class="line">Makefile    build           external         packages          toolchain</span><br><span class="line">abi         colors          frameworks       pdk               tools</span><br><span class="line">android     cts             hardware         platform_testing  vendor</span><br><span class="line">art         dalvik          kernel           plugin</span><br><span class="line">autoload    developers      libcore          prebuilts</span><br><span class="line">bionic      development     libnativehelper  sdk</span><br><span class="line">bootable    device          ndk              syntax</span><br></pre></td></tr></table></figure></p><p><strong>使用ccache编译缓存，让 C 和 C++ 更快的构建</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> echo "export USE_CCACHE=1" &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="meta">$</span> ~/mokee/prebuilts/misc/linux-x86/ccache/ccache -M 25G</span><br></pre></td></tr></table></figure></p><h3 id="编译源码"><a href="#编译源码" class="headerlink" title="编译源码"></a>编译源码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> cd ~/mokee</span><br></pre></td></tr></table></figure><p><strong>初始化环境</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> source ./build/envsetup.sh</span><br></pre></td></tr></table></figure></p><p><strong>选择编译目标</strong>（这里作了省略未列出全部编译目标）。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> lunch</span><br><span class="line">You're building on Linux</span><br><span class="line"></span><br><span class="line">Lunch menu... pick a combo:</span><br><span class="line"> 1. m_e_arm-userdebug  72. mk_kltechn-userdebug</span><br><span class="line"> 2. mini_emulator_arm64-userdebug  73. mk_kltechnduo-userdebug</span><br><span class="line"> 3. mini_emulator_x86-userdebug  74. mk_klteduos-userdebug</span><br><span class="line"> 4. mini_emulator_x86_64-userdebug  75. mk_kltedv-userdebug</span><br><span class="line"> 5. mk_a6000-userdebug  76. mk_kltekdi-userdebug</span><br><span class="line"> 6. mk_a6020-userdebug  77. mk_kltekor-userdebug</span><br><span class="line"> 7. mk_angler-userdebug  78. mk_kltespr-userdebug</span><br><span class="line"> 8. mk_armani-userdebug  79. mk_klteusc-userdebug</span><br><span class="line"> 9. mk_athene-userdebug  80. mk_lentislte-userdebug</span><br><span class="line"> 10. mk_axon7-userdebug  81. mk_leo-userdebug</span><br><span class="line"> 11. mk_bacon-userdebug  82. mk_lettuce-userdebug</span><br><span class="line"> 12. mk_bullhead-userdebug  83. mk_libra-userdebug</span><br><span class="line"> 13. mk_cancro-userdebug  84. mk_ls990-userdebug</span><br><span class="line"> 14. mk_capricorn-userdebug  85. mk_lux-userdebug</span><br><span class="line"> 15. mk_che10-userdebug  86. mk_m7-userdebug</span><br><span class="line"> 16. mk_cherry-userdebug  87. mk_m7vzw-userdebug</span><br><span class="line"> 17. mk_clark-userdebug  88. mk_m8-userdebug</span><br><span class="line"> 18. mk_condor-userdebug  89. mk_m8d-userdebug</span><br><span class="line"> 19. mk_d2att-userdebug  90. mk_mako-userdebug</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">Which would you like? [aosp_arm-eng]</span><br></pre></td></tr></table></figure></p><p><strong>选择Nexus4</strong><br>可在<a href="https://download.mokeedev.com/?type=unofficial" target="_blank" rel="noopener">mokee</a>查找自己所需的设备代码，如Nexus4对应设备代码为<strong>mako</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> lunch mk_mako-userdebug</span><br><span class="line"><span class="meta">$</span> mka bacon</span><br></pre></td></tr></table></figure></p><p><strong>编译成功</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>### make completed successfully (38:05 (mm:ss)) ####</span><br></pre></td></tr></table></figure></p><p><strong>编译结果</strong><br><strong>MK71.1-mako-201704110629-UNOFFICIAL.zip</strong>为刷机包<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@AndroidDev:~/mokee/out/target/product/mako# ls</span><br><span class="line">MK71.1-mako-201704110629-UNOFFICIAL.zip         obj</span><br><span class="line">MK71.1-mako-201704110629-UNOFFICIAL.zip.md5sum  ota_script_path</span><br><span class="line">android-info.txt                                previous_build_config.mk</span><br><span class="line">boot.img                                        ramdisk-recovery.cpio</span><br><span class="line">build_fingerprint.txt                           ramdisk-recovery.img</span><br><span class="line">cache                                           ramdisk.img</span><br><span class="line">cache.img                                       recovery</span><br><span class="line">clean_steps.mk                                  recovery.id</span><br><span class="line">data                                            recovery.img</span><br><span class="line">fake_packages                                   root</span><br><span class="line">gen                                             symbols</span><br><span class="line">install                                         system</span><br><span class="line">installed-files.txt                             system.img</span><br><span class="line">kernel                                          userdata.img</span><br><span class="line">mk_mako-ota-cfcce54acd.zip</span><br></pre></td></tr></table></figure></p><p><strong>下载ROM</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> scp root@your server ip:/root/mokee/out/target/product/mako/MK71.1-mako-201704110629-UNOFFICIAL.zip /Users/Downloads/rom</span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MK71.1-mako-201704110629-UNOFFICIAL.zip       100%  335MB  79.7KB/s 1:11:39</span><br></pre></td></tr></table></figure><h3 id="The-End"><a href="#The-End" class="headerlink" title="The End"></a>The End</h3><p>Tips：在Vultr中给当前机器添加一个Snapshots(快照)，Vultr提供了免费保存Snapshots的服务，至此VPS可以暂且Destroy了，下次需要时直接使用Snapshots布署。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="http://wiki.mokeedev.com/Main_Page" target="_blank" rel="noopener">Mokee wiki</a><br><a href="https://source.android.com" target="_blank" rel="noopener">Source Android</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为一名Android开发者，你可能对Android源码充满了好奇，或者想尝试自己动手编译ROM。受限于网络环境及硬件配置，只能望而兴叹。本文将介绍一种以极低的成本实现这一目标的方法（共计花费半天时间和1美刀）。出发吧少年！&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>App耗电量分析与优化</title>
    <link href="http://www.chenlongfei.cn/2017/03/15/app-battery-stats/"/>
    <id>http://www.chenlongfei.cn/2017/03/15/app-battery-stats/</id>
    <published>2017-03-15T02:57:41.000Z</published>
    <updated>2018-10-15T10:31:22.401Z</updated>
    
    <content type="html"><![CDATA[<p>对用户而言，一个APP的耗电量直接影响着用户的使用体验。从开发者角度来说，一款优秀的应用，应该兼具一流的用户体验与可靠的产品质量。<br>手机作为一个便携的移动设备，受限于电池容量及硬件性能的限制，使得应用的性能优化变得格外重要，而耗电量优化却是常常容易被忽略的。本文将着重总结应用的耗电量分析工具与优化方法。<br><a id="more"></a></p><h3 id="影响因素"><a href="#影响因素" class="headerlink" title="影响因素"></a>影响因素</h3><p><strong>硬件模块</strong><br>如GPS模块、WIFI模块、屏幕、基带芯片等。处于待机状态时，各模块耗电量极少。一旦唤醒屏幕，各模块便开始继续工作。</p><p><strong>移动数据</strong><br>典型的 3G 无线电网络有三种能量状态：</p><ol><li><strong>Full power</strong>：当无线连接被激活的时候，允许设备以最大的传输速率进行操作。</li><li><strong>Low power</strong>：一种中间状态，对电量的消耗差不多是 Full power 状态下的50%。</li><li><strong>Standby</strong>：最小的能量状态，没有被激活或者需求的网络连接。<br>每次创建一个新的网络连接，无线电波就切换到 full power 状态。在上面典型的 3G 无线电波状态机情况下，无线电波会在传输数据时保持在 full power 的状态（加上一个附加的5秒拖尾时间），再之后会经过12秒的 low power 能量状态。因此对于典型的 3G 设备，每一次数据传输的会话都会导致无线电波消耗大概20秒时间来提取电能。<br>频繁的网络导致无线电波迟迟无法进入休眠状态，导致电量消耗快速增长。</li></ol><p><strong>WakeLock</strong><br>在Android系统中，为了节省电量资源，系统会通过休眠，关闭硬件等操作来降低功耗。例如在锁屏时，CPU会进入睡眠状态，后台任务停止运行，网络请求被中止。很多应用为了继续工作，使用PowerManager.WakeLock保持CPU运行，使CPU一直处于运行状态，大大增加了耗电量。</p><h3 id="分析工具"><a href="#分析工具" class="headerlink" title="分析工具"></a>分析工具</h3><p><strong>Battery Historian</strong><br>Battery Historian是Google提供的开源的电量分析工具，目前仅支持Android 5.0及以上的设备。</p><p>安装步骤参见官方文档：<a href="https://github.com/google/battery-historian" target="_blank" rel="noopener">Battery Historian</a></p><p>在获取手机电量统计数据之前需清空历史数据并开启详细日志：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell dumpsys batterystats --reset</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell dumpsys batterystats --<span class="built_in">enable</span> full-wake-history</span><br></pre></td></tr></table></figure><p>获取电量统计数据，注意Android7.0及以上版本获取方式有所不同<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Android7.0+</span></span><br><span class="line">adb bugreport bugreport.zip</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Android6.0-</span></span><br><span class="line">adb bugreport &gt; bugreport.txt</span><br></pre></td></tr></table></figure><p>上传数据并分析，需要注意的是Battery Historian需要科学上网才能提交分析。<br><img src="http://pic.luochenxun.com/images/2017-03-15-083622.jpg" alt=""></p><p>横坐标代表时间范围，纵坐标参数说明请参考<a href="http://blog.csdn.net/itfootball/article/details/44084159" target="_blank" rel="noopener">Android性能专项测试之battery-historian</a>。<br>由下图可知，CPU一直处于运行状态，消耗了大量电量。移动数据请求频繁，无线电波持续工作，导致电量一直被消耗。<br><img src="http://pic.luochenxun.com/images/2017-03-15-091139.jpg" alt=""><br>在App Selection中选择要分析的应用，在App Stats中<strong>Device estimated power use</strong>可得知APP耗电量为<strong>8.14%</strong>。<br><img src="http://pic.luochenxun.com/images/2017-03-15-091304.jpg" alt=""></p><h3 id="优化过程"><a href="#优化过程" class="headerlink" title="优化过程"></a>优化过程</h3><p>经过排查，最终定位在日志上报及注册设备ID的请求过于频繁，并做以下优化。</p><ul><li>降低网络请求频率，集中处理网络请求，可通过Job Scheduler来实现调度。</li><li>检查WakeLock唤醒锁，避免不必要唤醒操作。</li><li>将数据上报等非重要性工作，在WIFI下或接入电源时执行。</li></ul><h3 id="优化成果"><a href="#优化成果" class="headerlink" title="优化成果"></a>优化成果</h3><p>在同一时间范围，对比可得可见CPU运行不再频繁，App耗电量下降至<strong>2.62%</strong>。<br><img src="http://pic.luochenxun.com/images/2017-03-15-092044.jpg" alt=""></p><p><img src="http://pic.luochenxun.com/images/2017-03-15-092140.jpg" alt=""></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="http://hukai.me/android-performance-battery/" target="_blank" rel="noopener">Android性能优化之电量篇</a><br><a href="https://hujiaweibujidao.github.io/blog/2017/01/24/how-to-know-your-applications-battery-stats/" target="_blank" rel="noopener">How to know your application’s battery stats</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对用户而言，一个APP的耗电量直接影响着用户的使用体验。从开发者角度来说，一款优秀的应用，应该兼具一流的用户体验与可靠的产品质量。&lt;br&gt;手机作为一个便携的移动设备，受限于电池容量及硬件性能的限制，使得应用的性能优化变得格外重要，而耗电量优化却是常常容易被忽略的。本文将着重总结应用的耗电量分析工具与优化方法。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Bye 2016</title>
    <link href="http://www.chenlongfei.cn/2017/01/01/bye-2016/"/>
    <id>http://www.chenlongfei.cn/2017/01/01/bye-2016/</id>
    <published>2016-12-31T16:00:00.000Z</published>
    <updated>2017-02-03T15:18:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>2016悄然过去，按照惯例又到了一年里做总结的时候，这也是自己第一次做年末总结。回首2016，时间匆匆且平平淡淡，没什么特别难忘的事，也没什么特别的变化。在深圳这个地方，你仿佛感觉不到四季的变化，以为还在过夏天，悄然已过去一年。<br><a id="more"></a></p><h3 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h3><p>去年的这个时候和一帮同事在海上世界跨年，挥别了2015，迎来了2016，一起抢新年红包。各自默默许下新年的愿望，又相继消失在人海里。也许是狂欢过后的落寞，依稀记得地铁上还给某人打了一个电话。</p><p>曾经热爱的骑行运动在这一年里也逐渐荒废。年初约了两好友骑过一次车，去了一些没有去过的地方，聊了一些没有聊过的话题，喜欢这种在路上的感觉，走走停停，去探索去发现，总能让人觉得身心愉悦。本打算趁国庆长假去环一次青海湖，重温环湖岁月，和好友再三商量之后还是决定放弃，不适合的天气加上没有充分作好准备迫使我们只能推迟计划。</p><p>春节回了趟老家，走亲访友，不亦乐乎。众多亲戚欢聚一堂，其乐融融。约上三五好友，扯天扯地，相聚甚欢，同窗的时光仿佛是在昨天。也只有在那座城市，我才会感觉到自由、感觉到亲切，温暖与幸福。童年、青春、爱情，一一层叠起来，堆彻成回忆的高度。<br>这年的除夕是在武汉亲戚家过的，两家子人，守在一起看春晚，热闹非凡，这样的场景还是第一次。在武汉约见了一些初中同学，感慨良多。时光匆匆，物是人非，各自的生活已是千差万别，对彼此的记忆也只停留在年少之时。</p><p>作为一个不怎么喝酒的人，这一年里喝过的酒远大于过去的总和。第一次喝醉酒，是公司两周年的庆典活动上，很难受又很兴奋。作为一个不怎么喝酒的人，2017我将继续保持不喝酒。</p><p>逐渐开始意识到健康的重要些，长期缺乏运动，身体质素大不如以前。大南山拓展，超越了自己体力的极限，背着登山包，翻山越岭，徒步几十公里，累到极点，回来后休息一周才恢复。年中的时候，下定决心办了一张健身卡。坚持了半年，体能提高了不少，当然也长了一点肌肉。</p><p>身边的朋友在这一年一一脱单，还见证了一个朋友求婚。喜欢过的人都相继结婚，唯有祝愿。</p><h3 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h3><p>一年来同时间段入职的同事都相继离职，让人深感惋惜。不断加入的新同事，也增添了许多新面孔。我所在的客户端团队虽少，工作上大家都彼此默契地配合，工作之余也能一起愉快地玩耍。月复一月的迭代着版本，看似重复的工作，却每次都有不同的挑战。值得骄傲的是，在空闲之时，也做了许多提升工作效率的事。</p><ul><li>格式化的Log的日志输出，提高接口联调效率。</li><li>重构了网络架构，提高了稳定性和可靠性，大大简化了之前复杂的流程，降低了使用成本。</li><li>搭建了Jenkins持续集成，使Android的打包流程自动化，规范了各版本打包流程，提高了发版效率。</li><li>接入了Tinker热修复，使应用具备快速修复线上版本缺陷的能力。</li></ul><h3 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h3><p>不再盲目的追求新技术，开始关注应用的架构。努力提高代码可读性、可维护性。逐步深入去研究感兴趣的技术以及开源项目。</p><ul><li>了解了一些热修复原理，并接入到实际项目中。</li><li>RxJava使异步操作变得简洁，与Retrofit结合简化网络操作的复杂性，RxJava与Retrofit已是首选的网络架构。</li><li>为了更好的理解Gradle脚本编写，Grooxy语言是必知必会。</li><li>尝试使用React Native，体验多平台开发。</li></ul><h3 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h3><ul><li>希望去更多更远的地方走一走，看一看。</li><li>提高自己的软技能，写作、沟通。</li><li>技术上持续提高，保持进步。</li><li>多思考，多读书。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2016悄然过去，按照惯例又到了一年里做总结的时候，这也是自己第一次做年末总结。回首2016，时间匆匆且平平淡淡，没什么特别难忘的事，也没什么特别的变化。在深圳这个地方，你仿佛感觉不到四季的变化，以为还在过夏天，悄然已过去一年。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android App炫酷引导页</title>
    <link href="http://www.chenlongfei.cn/2016/11/27/android-guide-page/"/>
    <id>http://www.chenlongfei.cn/2016/11/27/android-guide-page/</id>
    <published>2016-11-27T13:37:29.000Z</published>
    <updated>2018-10-15T10:31:22.401Z</updated>
    
    <content type="html"><![CDATA[<p>在我们初次使用App或升级后首次使用App会有一个引导页，通常用来介绍新版本特性。大多数引导页以图文为主，而那些配以动画或视频的引导页总是让人眼前一亮。而作为开发者的我们，在弄明白原理后，总是迫切的想要去实现。本文将从实践出发，讲解具体的实现过程，最终实现一个完整的包含视频的引导页。<br><a id="more"></a></p><h3 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h3><p>在Android中常用<strong>VideoView</strong>实现简单的视频播放功能，另一种方法是使用<strong>MediaPlayer</strong> + <strong>SurfaceView</strong>来实现，本质上<strong>VideoView</strong>对它俩进行了封装，使开发者不用关心其细节，降低开发难度。</p><p>写到这里，相信大家心里已经有了实现思路，想要实现带视频播放功能的引导页无非就是在ViewPager中每个页面添加VideoView，滑动到相应页面播放则对应的视频。</p><p>那么教程到此就可以结束了！！！</p><p>但是这么做会有一个问题，每次打开引导页播放在视频前会先黑屏一下，并且ViewPager滑动时两个页面之间会有明显的黑缝隙。作为一个有追求的开发者这显然是不能接受的。</p><h3 id="TextureView"><a href="#TextureView" class="headerlink" title="TextureView"></a>TextureView</h3><p>TextureView又是个什么东东的呢？<strong><em>我们知道SurfaceView为了提高工作效率，它的工作方式是创建一个置于应用窗口之后的新窗口，SurfaceView的内容不在应用窗口上，所以不能使用变换（平移、缩放、旋转等）。也难以放在ListView或者ScrollView中，不能使用UI控件的一些特性比如View.setAlpha()。</em></strong><br>作为SurfaceView的兄弟，TextureView终于在Android 4.0来救场了。<br>TextureView并没有创建新的窗口，可以像使用普通View一样执行变换操作，使用TextureView务必<strong>开启硬件加速</strong>。</p><h3 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h3><blockquote><p>科学证明使用MediaPlayer与TextureView能确保达到最佳效果。</p></blockquote><p><strong>视频文件</strong><br>视频文件来源于闲鱼App<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//将视频文件放至在assets/guide目录中</span><br><span class="line">├── guide</span><br><span class="line">│   ├── guide_four.mp4</span><br><span class="line">│   ├── guide_one.mp4</span><br><span class="line">│   ├── guide_three.mp4</span><br><span class="line">│   └── guide_two.mp4</span><br></pre></td></tr></table></figure></p><p><strong>GuideActivity</strong><br>MediaPlayer的setOnPreparedListener()方法可以设置一个监听器，在视频预处理完成之后产生回调，这里我们可以将视频默认设置到第一帧，从而避免黑屏。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GuideActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> ViewPager viewPager = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> List&lt;ImageView&gt; indicators = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">private</span> List&lt;View&gt; views = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">private</span> List&lt;MediaPlayer&gt; mediaPlayers = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextureView textureViewOne;</span><br><span class="line">    <span class="keyword">private</span> TextureView textureViewTwo;</span><br><span class="line">    <span class="keyword">private</span> TextureView textureViewThree;</span><br><span class="line">    <span class="keyword">private</span> TextureView textureViewFour;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MediaPlayer mediaPlayerOne;</span><br><span class="line">    <span class="keyword">private</span> MediaPlayer mediaPlayerTwo;</span><br><span class="line">    <span class="keyword">private</span> MediaPlayer mediaPlayerThree;</span><br><span class="line">    <span class="keyword">private</span> MediaPlayer mediaPlayerFour;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.guide);</span><br><span class="line">        <span class="keyword">int</span> flag = WindowManager.LayoutParams.FLAG_FULLSCREEN;</span><br><span class="line">        Window w = getWindow();</span><br><span class="line">        w.setFlags(flag, flag);</span><br><span class="line"></span><br><span class="line">        initVideos();</span><br><span class="line">        initViews();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initVideos</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            mediaPlayerOne = createMediaPlayer(<span class="string">"guide/guide_one.mp4"</span>);</span><br><span class="line">            mediaPlayerTwo = createMediaPlayer(<span class="string">"guide/guide_two.mp4"</span>);</span><br><span class="line">            mediaPlayerThree = createMediaPlayer(<span class="string">"guide/guide_three.mp4"</span>);</span><br><span class="line">            mediaPlayerFour = createMediaPlayer(<span class="string">"guide/guide_four.mp4"</span>);</span><br><span class="line"></span><br><span class="line">            mediaPlayers.add(mediaPlayerOne);</span><br><span class="line">            mediaPlayers.add(mediaPlayerTwo);</span><br><span class="line">            mediaPlayers.add(mediaPlayerThree);</span><br><span class="line">            mediaPlayers.add(mediaPlayerFour);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            finish();</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> MediaPlayer <span class="title">createMediaPlayer</span><span class="params">(String filePath)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        MediaPlayer mediaPlayer = <span class="keyword">new</span> MediaPlayer();</span><br><span class="line">        mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);</span><br><span class="line">        AssetFileDescriptor fileDescriptor = getAssets().openFd(filePath);</span><br><span class="line">        mediaPlayer.setDataSource(fileDescriptor.getFileDescriptor(),</span><br><span class="line">                fileDescriptor.getStartOffset(), fileDescriptor.getLength());</span><br><span class="line">        <span class="keyword">return</span> mediaPlayer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> ViewPager.OnPageChangeListener changeListener = <span class="keyword">new</span> ViewPager.OnPageChangeListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageSelected</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mediaPlayers.size(); i++) &#123;</span><br><span class="line">                MediaPlayer mediaPlayer = mediaPlayers.get(i);</span><br><span class="line">                ImageView indicate = indicators.get(i);</span><br><span class="line">            </span><br><span class="line">                <span class="keyword">if</span> (i == index) &#123;</span><br><span class="line">                    mediaPlayer.start();</span><br><span class="line">                    indicate.setBackgroundResource(R.drawable.page_now);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">              </span><br><span class="line">                <span class="keyword">if</span> (mediaPlayer.isPlaying()) &#123;</span><br><span class="line">                    mediaPlayer.pause();</span><br><span class="line">                    mediaPlayer.seekTo(<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                indicate.setBackgroundResource(R.drawable.page);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageScrolled</span><span class="params">(<span class="keyword">int</span> pos, <span class="keyword">float</span> positionOffset, <span class="keyword">int</span> pix)</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageScrollStateChanged</span><span class="params">(<span class="keyword">int</span> arg0)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> PagerAdapter adapter = <span class="keyword">new</span> PagerAdapter() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> views.size();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isViewFromObject</span><span class="params">(View view, Object object)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> view == object;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroyItem</span><span class="params">(ViewGroup container, <span class="keyword">int</span> position, Object object)</span> </span>&#123;</span><br><span class="line">            container.removeView(views.get(position));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Object <span class="title">instantiateItem</span><span class="params">(ViewGroup container, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">            View view = views.get(position);</span><br><span class="line">            container.addView(view);</span><br><span class="line">            <span class="keyword">return</span> view;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        LayoutInflater inflater = LayoutInflater.from(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">//指示器</span></span><br><span class="line">        ImageView p1 = (ImageView) <span class="keyword">this</span>.findViewById(R.id.p1);</span><br><span class="line">        ImageView p2 = (ImageView) <span class="keyword">this</span>.findViewById(R.id.p2);</span><br><span class="line">        ImageView p3 = (ImageView) <span class="keyword">this</span>.findViewById(R.id.p3);</span><br><span class="line">        ImageView p4 = (ImageView) <span class="keyword">this</span>.findViewById(R.id.p4);</span><br><span class="line">        indicators.add(p1);</span><br><span class="line">        indicators.add(p2);</span><br><span class="line">        indicators.add(p3);</span><br><span class="line">        indicators.add(p4);</span><br><span class="line"></span><br><span class="line">        View viewOne = inflater.inflate(R.layout.guide_one, <span class="keyword">null</span>);</span><br><span class="line">        View viewTwo = inflater.inflate(R.layout.guide_two, <span class="keyword">null</span>);</span><br><span class="line">        View viewThree = inflater.inflate(R.layout.guide_three, <span class="keyword">null</span>);</span><br><span class="line">        View viewFour = inflater.inflate(R.layout.guide_four, <span class="keyword">null</span>);</span><br><span class="line">        views.add(viewOne);</span><br><span class="line">        views.add(viewTwo);</span><br><span class="line">        views.add(viewThree);</span><br><span class="line">        views.add(viewFour);</span><br><span class="line"></span><br><span class="line">        textureViewOne = (TextureView) viewOne.findViewById(R.id.texture_view);</span><br><span class="line">        textureViewTwo = (TextureView) viewTwo.findViewById(R.id.texture_view);</span><br><span class="line">        textureViewThree = (TextureView) viewThree.findViewById(R.id.texture_view);</span><br><span class="line">        textureViewFour = (TextureView) viewFour.findViewById(R.id.texture_view);</span><br><span class="line"></span><br><span class="line">        textureViewOne.setSurfaceTextureListener(<span class="keyword">new</span> TextureListener(mediaPlayerOne, <span class="number">1</span>));</span><br><span class="line">        textureViewTwo.setSurfaceTextureListener(<span class="keyword">new</span> TextureListener(mediaPlayerTwo, <span class="number">2</span>));</span><br><span class="line">        textureViewThree.setSurfaceTextureListener(<span class="keyword">new</span> TextureListener(mediaPlayerThree, <span class="number">3</span>));</span><br><span class="line">        textureViewFour.setSurfaceTextureListener(<span class="keyword">new</span> TextureListener(mediaPlayerFour, <span class="number">4</span>));</span><br><span class="line"></span><br><span class="line">        viewPager = (ViewPager) <span class="keyword">this</span>.findViewById(R.id.view_pager);</span><br><span class="line">        viewPager.setAdapter(adapter);</span><br><span class="line">        viewPager.setOffscreenPageLimit(views.size());</span><br><span class="line">        viewPager.addOnPageChangeListener(changeListener);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">TextureListener</span> <span class="keyword">implements</span> <span class="title">TextureView</span>.<span class="title">SurfaceTextureListener</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> MediaPlayer mediaPlayer;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> index;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">TextureListener</span><span class="params">(MediaPlayer mediaPlayer, <span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.mediaPlayer = mediaPlayer;</span><br><span class="line">            <span class="keyword">this</span>.index = index;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSurfaceTextureAvailable</span><span class="params">(SurfaceTexture surfaceTexture, <span class="keyword">int</span> width,</span></span></span><br><span class="line"><span class="function"><span class="params">                <span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">            Surface surface = <span class="keyword">new</span> Surface(surfaceTexture);</span><br><span class="line">            mediaPlayer.setSurface(surface);</span><br><span class="line">            mediaPlayer.prepareAsync();</span><br><span class="line">            mediaPlayer.setOnPreparedListener(<span class="keyword">new</span> MediaPlayer.OnPreparedListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPrepared</span><span class="params">(MediaPlayer mp)</span> </span>&#123;</span><br><span class="line">                    <span class="comment">//第一个页面视频加载完后自动播放</span></span><br><span class="line">                    <span class="keyword">if</span> (index == <span class="number">1</span>) &#123;</span><br><span class="line">                        mp.start();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="comment">//默认显示第一帧，避免黑屏</span></span><br><span class="line">                        mp.seekTo(<span class="number">0</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSurfaceTextureSizeChanged</span><span class="params">(SurfaceTexture surface, <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onSurfaceTextureDestroyed</span><span class="params">(SurfaceTexture surface)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (mediaPlayer != <span class="keyword">null</span>) &#123;</span><br><span class="line">                mediaPlayer.stop();</span><br><span class="line">                mediaPlayer.release();</span><br><span class="line">                mediaPlayer = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSurfaceTextureUpdated</span><span class="params">(SurfaceTexture surface)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>guide.xml</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">android.support.v4.view.ViewPager</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/view_pager"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">android.support.v4.view.ViewPager</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/indicate_layout"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_centerHorizontal</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_marginBottom</span>=<span class="string">"@dimen/guide_indicate_mar_bottom"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_marginTop</span>=<span class="string">"@dimen/guide_indicate_mar_top"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/p1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/page_now"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:contentDescription</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/p2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/page"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:contentDescription</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/p3"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/page"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:contentDescription</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/p4"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/page"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:contentDescription</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>guide_one.xml、guide_two.xml、guide_three.xml、guide_four.xml</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">TextureView</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:id</span>=<span class="string">"@+id/texture_view"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>page.xml</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">"oval"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">size</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:height</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:width</span>=<span class="string">"8dp"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">stroke</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:color</span>=<span class="string">"#c9c9c9"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:width</span>=<span class="string">"2px"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>page_now.xml</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">"oval"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">size</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:height</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:width</span>=<span class="string">"8dp"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#ff6600"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>dimens.xml</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"guide_big_font_size"</span>&gt;</span>25.7dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"guide_normal_font_size"</span>&gt;</span>17.9dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"guide_indicate_mar_top"</span>&gt;</span>22dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"guide_indicate_mar_bottom"</span>&gt;</span>50dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"guide_indicate_text_bottom"</span>&gt;</span>180dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h3><p><strong>本教程效果</strong><br><img src="http://pic.luochenxun.com/image/2016-11-27-221020.gif" alt="闲鱼"><br><strong>闲鱼App效果</strong><br><img src="http://pic.luochenxun.com/image/2016-11-28-120110.gif" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在我们初次使用App或升级后首次使用App会有一个引导页，通常用来介绍新版本特性。大多数引导页以图文为主，而那些配以动画或视频的引导页总是让人眼前一亮。而作为开发者的我们，在弄明白原理后，总是迫切的想要去实现。本文将从实践出发，讲解具体的实现过程，最终实现一个完整的包含视频的引导页。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Gradle使用指南</title>
    <link href="http://www.chenlongfei.cn/2016/10/29/gradle-user-guide/"/>
    <id>http://www.chenlongfei.cn/2016/10/29/gradle-user-guide/</id>
    <published>2016-10-29T04:13:51.000Z</published>
    <updated>2016-11-27T09:07:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>在Java的世界里Ant，Maven，Gradle为三大常用的构建利器。在Gradle诞生之前构建工具一直都是Ant，之后进化到Maven。Ant、Maven主要使用XML配置编译规则，对程序员而言最方便的当然是以编程的方式来配置规则。而Gradle就这样被历史选中了，集Anit、Maven优点于一身，同时具备脚本语言的特性，相信你在使用之后一定会拍手惊呼道“太方便，太方便”。<br><a id="more"></a></p><h3 id="Groovy"><a href="#Groovy" class="headerlink" title="Groovy"></a>Groovy</h3><p>Groovy是一门动态语言，同Java一样运行在JVM上，Groovy的语法与Java很相似，两者可以混合编程，而同样的任务使用相比Java所需的代码更少。Gradle选择Groovy来作为构建语言，是因为它给Java开发人员提供了迄今为止最大的透明度。   </p><h5 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h5><p>详细的语法介绍参见<a href="http://www.groovy-lang.org/documentation.html" target="_blank" rel="noopener">官方文档</a>，本文只作简单介绍。</p><ul><li>注释同java相同，分单行注释、多行注释、文档注释。</li><li>Groovy中变量及类默认public。</li><li><p>Groovy支持动态类型，使用def定义变量，当然也可省略def，语句结尾的分号也能省略。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义变量</span></span><br><span class="line"><span class="keyword">int</span> var=<span class="number">1</span></span><br><span class="line"><span class="keyword">def</span> var=<span class="string">'Hello World'</span></span><br><span class="line"><span class="keyword">def</span> <span class="keyword">int</span> var=<span class="number">2</span></span><br><span class="line"><span class="comment">//定义方法，可以不声明返回值类型，最后一行代码为方法返回值</span></span><br><span class="line"><span class="keyword">def</span> function()&#123;</span><br><span class="line">  string</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//参数类型可以不指定</span></span><br><span class="line"><span class="keyword">def</span> function(arg1,arg2)&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//指定返回值类型</span></span><br><span class="line">String function()&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'string'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>String字符串</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单引号</span></span><br><span class="line"><span class="keyword">def</span> value=<span class="string">'a single quoted string'</span></span><br><span class="line"><span class="keyword">def</span> name=<span class="string">'Troy'</span></span><br><span class="line"><span class="comment">//双引号会对$进行求值 </span></span><br><span class="line"><span class="keyword">def</span> greeting=<span class="string">"Hello $&#123;name&#125;"</span><span class="comment">//输出Hello Troy</span></span><br><span class="line"><span class="comment">//三引号,表示字符串换行</span></span><br><span class="line"><span class="keyword">def</span> multiline=<span class="string">'''</span></span><br><span class="line"><span class="string">line one</span></span><br><span class="line"><span class="string">line two</span></span><br><span class="line"><span class="string">line three</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure></li><li><p>集合</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Lists</span></span><br><span class="line"><span class="keyword">def</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="comment">//List中可以存放任意类型</span></span><br><span class="line"><span class="keyword">def</span> heterogeneous = [<span class="number">1</span>, <span class="string">"a"</span>, <span class="literal">true</span>] </span><br><span class="line"><span class="comment">//添加元素</span></span><br><span class="line">numbers.add(<span class="number">4</span>)</span><br><span class="line">numbers &lt;&lt; <span class="number">5</span></span><br><span class="line">numbers[<span class="number">1</span>] = <span class="number">3</span></span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line">println numbers[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//Maps</span></span><br><span class="line"><span class="comment">//map使用key value方式声明</span></span><br><span class="line"><span class="keyword">def</span> colors = [<span class="string">red:</span> <span class="string">'#FF0000'</span>, <span class="string">green:</span> <span class="string">'#00FF00'</span>, <span class="string">blue:</span> <span class="string">'#0000FF'</span>]</span><br><span class="line"><span class="comment">//添加元素</span></span><br><span class="line">colors.put(<span class="string">yellow:</span><span class="string">'#FFFF00'</span>)</span><br><span class="line">colors &lt;&lt; [<span class="string">yellow:</span><span class="string">'#FFFF00'</span>]</span><br><span class="line"><span class="comment">//输出red颜色</span></span><br><span class="line">println colors[<span class="string">'red'</span>]</span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line">println colors.green</span><br></pre></td></tr></table></figure></li><li><p>闭包，闭包是一段可以执行的代码</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//闭包语法格式</span></span><br><span class="line">&#123; [closureParameters -&gt; ] statements &#125;</span><br><span class="line"><span class="comment">//使用花括号把代码括起来</span></span><br><span class="line">&#123; item++ &#125;</span><br><span class="line"><span class="comment">//-&gt;前面为参数默认为it,相当于java中this，-&gt;后面为代码</span></span><br><span class="line">&#123; -&gt; item++ &#125;</span><br><span class="line">&#123; it -&gt; println it &#125;</span><br><span class="line">&#123; String x, <span class="keyword">int</span> y -&gt;                                </span><br><span class="line">  println <span class="string">"hey $&#123;x&#125; the value is $&#123;y&#125;"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用闭包作为数据类型</span></span><br><span class="line"><span class="keyword">def</span> listener = &#123; e -&gt; println <span class="string">"Clicked on $e.source"</span> &#125;</span><br><span class="line"><span class="comment">//调用闭包</span></span><br><span class="line">listener.call(<span class="string">'call'</span>)</span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line">listener(<span class="string">'call'</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="Gradle"><a href="#Gradle" class="headerlink" title="Gradle"></a>Gradle</h3><p>Gradle可以说是一个框架，定义了流程和规则，而且具体的编译工作则由插件来完成。比如常见的Java插件、Android插件。每个插件中又定义了各种task。</p><h5 id="Gradle基本概念"><a href="#Gradle基本概念" class="headerlink" title="Gradle基本概念"></a>Gradle基本概念</h5><p><strong>projects (项目) </strong></p><p>我们的Android Application、Android Library、Java Library都是单个的Project，可以说每个待编译的工程都是一个Project。<br>以某项目为例，该项目总共有几个Project呢？答案是3个！<br>分别是<strong>app</strong>、<strong>scrollanimationlibrary</strong>、<strong>social_sdk_library_project</strong>。从目录结构我们可以看出每个Project对应一个build.gradle文件，该文件定义了Project的编译规则。根目录下build.gradle用于配置子Project，settings.gradle文件声明包括多少个子Project，整体上这就是一个MultiProject。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">├── app</span><br><span class="line">│   ├── build.gradle</span><br><span class="line">│   ├── libs</span><br><span class="line">│   ├── proguard-rules.pro</span><br><span class="line">│   ├── settings.gradle</span><br><span class="line">│   └── src</span><br><span class="line">├── build.gradle</span><br><span class="line">├── gradle</span><br><span class="line">│   └── wrapper</span><br><span class="line">├── gradle.properties</span><br><span class="line">├── gradlew</span><br><span class="line">├── gradlew.bat</span><br><span class="line">├── scrollanimationlibrary</span><br><span class="line">│   ├── build.gradle</span><br><span class="line">│   └── src</span><br><span class="line">├── settings.gradle</span><br><span class="line">└── social_sdk_library_project</span><br><span class="line">    ├── AndroidManifest.xml</span><br><span class="line">    ├── build.gradle</span><br><span class="line">    ├── gradle</span><br><span class="line">    ├── libs</span><br><span class="line">    ├── proguard-project.txt</span><br><span class="line">    ├── project.properties</span><br><span class="line">    └── res</span><br></pre></td></tr></table></figure></p><p>使用<code>projects</code>命令查看project<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">------------------------------------------------------------</span><br><span class="line">Root project</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Root project &apos;Coding-Android&apos;</span><br><span class="line">+--- Project &apos;:app&apos;</span><br><span class="line">+--- Project &apos;:scrollanimationlibrary&apos;</span><br><span class="line">\--- Project &apos;:social_sdk_library_project&apos;</span><br></pre></td></tr></table></figure></p><p><strong>task (任务）</strong></p><p>一个task代表更细化的构建，可能是编译一些 classes, 创建一个 JAR, 生成 javadoc, 或者生成某个目录的压缩文件。<br>查看Project包含的任务可以使用<code>task</code>命令，查看具体某个Project的任务使用<code>project-name:task</code>命令，如<code>app:task</code>，执行某个task使用<code>task-name</code>，如<code>assemble</code>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Parallel execution with configuration on demand is an incubating feature.</span><br><span class="line">Incremental java compilation is an incubating feature.</span><br><span class="line">:app:tasks</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------</span><br><span class="line">All tasks runnable from project :app</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Android tasks</span><br><span class="line">-------------</span><br><span class="line">androidDependencies - Displays the Android dependencies of the project.</span><br><span class="line">signingReport - Displays the signing info for each variant.</span><br><span class="line">sourceSets - Prints out all the source sets defined in this project.</span><br><span class="line"></span><br><span class="line">Build tasks</span><br><span class="line">-----------</span><br><span class="line">assemble - Assembles all variants of all applications and secondary packages.</span><br><span class="line">assembleAndroidTest - Assembles all the Test applications.</span><br><span class="line">assembleDebug - Assembles all Debug builds.</span><br><span class="line">assembleRelease - Assembles all Release builds.</span><br><span class="line">build - Assembles and tests this project.</span><br><span class="line">buildDependents - Assembles and tests this project and all projects that depend on it.</span><br><span class="line">buildNeeded - Assembles and tests this project and all projects it depends on.</span><br><span class="line">clean - Deletes the build directory.</span><br><span class="line">compileDebugAndroidTestSources</span><br><span class="line">compileDebugSources</span><br><span class="line">compileDebugUnitTestSources</span><br><span class="line">compileReleaseSources</span><br><span class="line">compileReleaseUnitTestSources</span><br><span class="line">mockableAndroidJar - Creates a version of android.jar that's suitable for unit tests.</span><br><span class="line">..............</span><br></pre></td></tr></table></figure><p>创建任务<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//普通写法</span></span><br><span class="line"><span class="keyword">task</span> hello &#123;</span><br><span class="line">  <span class="keyword">doLast</span>&#123;</span><br><span class="line">    <span class="comment">//运行阶段执行</span></span><br><span class="line">    <span class="keyword">println</span> <span class="string">'Hello world!'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更简洁的写法</span></span><br><span class="line"><span class="keyword">task</span> hello &lt;&lt;&#123;</span><br><span class="line">  <span class="comment">//运行阶段执行</span></span><br><span class="line">  <span class="keyword">println</span> <span class="string">'Hello world!'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//另一个种写法</span></span><br><span class="line"><span class="keyword">task</span> hello &#123;</span><br><span class="line"><span class="comment">//配置阶段执行</span></span><br><span class="line">  <span class="keyword">println</span> <span class="string">'Hello world!'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h5 id="Gradle生命周期"><a href="#Gradle生命周期" class="headerlink" title="Gradle生命周期"></a>Gradle生命周期</h5><ul><li>初始化阶段，读取settings.gradle，决定了本次构建过程包含的子Project。</li><li>配置阶段，解析子Project的中build.gradle，创建所需的task。</li><li>运行阶段，执行相关task。</li></ul><h5 id="Gradle配置讲解"><a href="#Gradle配置讲解" class="headerlink" title="Gradle配置讲解"></a>Gradle配置讲解</h5><p>从API的角度来理解，Gradle有三种对象，每种对象对应不同的脚本文件。</p><ul><li>Gradle对象，对应着Gradle。如我们执行的某个命令<code>./gradlew task</code>。</li><li>Project对象，对应build.gradle。</li><li>Settings对象，对应settings.gradle。</li></ul><p><strong>settings.gradle</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指定包含的子project</span></span><br><span class="line">include <span class="string">':app'</span>, <span class="string">':social_sdk_library_project'</span>, <span class="string">':scrollanimationlibrary'</span></span><br></pre></td></tr></table></figure></p><p><strong>MultiProject build.gradle</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//全局配置</span></span><br><span class="line">buildscript &#123; <span class="comment">//Script Block</span></span><br><span class="line">    repositories &#123; <span class="comment">//Script Block</span></span><br><span class="line">        <span class="comment">//依赖的仓库</span></span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123; <span class="comment">//Script Block</span></span><br><span class="line">        <span class="comment">//依赖的插件对应的class path</span></span><br><span class="line">        classpath <span class="string">'com.android.tools.build:gradle:2.2.2'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置所有子project</span></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">        <span class="comment">//私有库地址</span></span><br><span class="line">        maven &#123; url <span class="string">"http://172.16.1.19:8081/repository/maven-releases/"</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Project build.gradle</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Android 插件</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'com.android.application'</span></span><br><span class="line"><span class="comment">//Android Plugin DSL Reference</span></span><br><span class="line"><span class="comment">//http://google.github.io/android-gradle-dsl/current/</span></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">21</span></span><br><span class="line">    buildToolsVersion <span class="string">"23.0.2"</span></span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"net.coding.program"</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="literal">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//依赖相关</span></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compile fileTree(<span class="string">dir:</span> <span class="string">'libs'</span>, <span class="string">include:</span> [<span class="string">'*.jar'</span>])</span><br><span class="line">    compile <span class="string">'com.android.support:support-v4:21.0.+'</span></span><br><span class="line">    compile <span class="string">'com.android.support:appcompat-v7:21.0.+'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>指定.so库</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">android&#123;</span><br><span class="line">  sourceSets &#123;</span><br><span class="line">        main &#123;</span><br><span class="line">            jniLibs.srcDirs = [&apos;libs&apos;]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>配置apk签名</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">android&#123;</span><br><span class="line">  signingConfigs &#123;</span><br><span class="line">        debug &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        release &#123;</span><br><span class="line">            storeFile file(&quot;../demo.keystore&quot;)</span><br><span class="line">            storePassword &quot;123456&quot;</span><br><span class="line">            keyAlias &quot;demo&quot;</span><br><span class="line">            keyPassword &quot;123456&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>构建不同类型的版本</strong><br>通过添加<code>applicationIdSuffix &quot;.debug&quot;</code>修改包名，可以使内测版与正式版同时安装在手机上。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        debug &#123;</span><br><span class="line">            minifyEnabled false</span><br><span class="line">            zipAlignEnabled false</span><br><span class="line">            shrinkResources false</span><br><span class="line">            signingConfig signingConfigs.debug</span><br><span class="line">            //修改包名，添加.debug后缀</span><br><span class="line">            applicationIdSuffix &quot;.debug&quot;</span><br><span class="line">            debuggable true</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled true</span><br><span class="line">            zipAlignEnabled true</span><br><span class="line">            shrinkResources false</span><br><span class="line">            debuggable false</span><br><span class="line">            signingConfig signingConfigs.release</span><br><span class="line">            proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>多渠道打包</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在AndroidManifest.xml里配置PlaceHolder</span></span><br><span class="line">&lt;meta-data</span><br><span class="line"><span class="symbol">    android:</span>name=<span class="string">"UMENG_CHANNEL"</span></span><br><span class="line"><span class="symbol">    android:</span>value=<span class="string">"channel_value"</span> /&gt;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 多渠道打包配置</span></span><br><span class="line">  productFlavors &#123;</span><br><span class="line">      yingyongbao &#123;</span><br><span class="line">          manifestPlaceholders = [<span class="string">channel_value:</span> <span class="string">"yingyongbao"</span>]</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="string">"360"</span> &#123;</span><br><span class="line">          manifestPlaceholders = [<span class="string">channel_value:</span> <span class="string">"360"</span>]</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">//打包命令</span></span><br><span class="line">.<span class="regexp">/gradlew assembleYingyongbao /</span>/应用包渠道</span><br><span class="line">.<span class="regexp">/gradlew assembleRelease /</span>/全部渠道</span><br></pre></td></tr></table></figure></p><p><strong>引用其它gradle配置</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apply <span class="string">from:</span> <span class="string">'../tinker-patch.gradle'</span></span><br></pre></td></tr></table></figure></p><p><strong>扩展属性</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//root project build.gradle配置ext属性</span></span><br><span class="line">ext &#123;</span><br><span class="line">    compileSdkVersion = <span class="number">21</span></span><br><span class="line">    buildToolsVersion = <span class="string">"23.0.2"</span></span><br><span class="line">    minSdkVersion = <span class="number">21</span></span><br><span class="line">    targetSdkVersion = <span class="number">21</span></span><br><span class="line">    versionCode = <span class="number">100</span></span><br><span class="line">    versionName = <span class="string">"1.0.0"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子project build.gradle使用ext属性</span></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion rootProject.ext.compileSdkVersion</span><br><span class="line">    buildToolsVersion rootProject.ext.buildToolsVersion</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>BuildConfig</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//gradle 中定义BuildConfig字段</span></span><br><span class="line">android &#123;</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">      buildConfigField(<span class="string">"String"</span>, <span class="string">"PATCH_VERSION"</span>, <span class="string">"\"1\""</span>)</span><br><span class="line">      buildConfigField(<span class="string">"boolean"</span>, <span class="string">"DEBUG"</span>, <span class="string">"true"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在程序中获取</span></span><br><span class="line">String patchVersion=BuildConfig.PATCH_VERSION;</span><br><span class="line"><span class="keyword">boolean</span> debug=BuildConfig.DEBUG;</span><br></pre></td></tr></table></figure></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="http://blog.csdn.net/innost/article/details/48228651" target="_blank" rel="noopener">深入理解Android之Gradle</a></li><li><a href="https://docs.gradle.org/current/userguide/userguide.html" target="_blank" rel="noopener">Gradle User Guide</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在Java的世界里Ant，Maven，Gradle为三大常用的构建利器。在Gradle诞生之前构建工具一直都是Ant，之后进化到Maven。Ant、Maven主要使用XML配置编译规则，对程序员而言最方便的当然是以编程的方式来配置规则。而Gradle就这样被历史选中了，集Anit、Maven优点于一身，同时具备脚本语言的特性，相信你在使用之后一定会拍手惊呼道“太方便，太方便”。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android Wear表盘开发</title>
    <link href="http://www.chenlongfei.cn/2016/10/22/watch-faces/"/>
    <id>http://www.chenlongfei.cn/2016/10/22/watch-faces/</id>
    <published>2016-10-22T12:27:37.000Z</published>
    <updated>2018-10-15T10:31:22.401Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Android Wear是Android操作系统的一个分支版本，专为智能手表等可穿戴式电脑设备所设计，由Google主导开发。</p></blockquote><h4 id="瞎扯扯"><a href="#瞎扯扯" class="headerlink" title="瞎扯扯"></a>瞎扯扯</h4><p>我们身处一个最好的时代，也是最坏的时代，智能硬件的普及，极大改善了人们的生活体验，以前只有在科幻电影中才可能出现的场景，也逐渐变为现实进入人类的生活。<br>在MOTO 360刚推出之时，刷新了我对手表的认识，Android Wear使得手表有了更多的可实现的功能，使得手表成为手机功能的延伸，某些功能的操作甚至不再需要手机，比如消息的阅读与回复，查看天气，导航、打车等等。</p><a id="more"></a><h4 id="开发前准备"><a href="#开发前准备" class="headerlink" title="开发前准备"></a>开发前准备</h4><ul><li>Android Studio</li><li>Android Wear手表或Android Wear模拟器</li></ul><h4 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h4><p>Android Wear项目同时包含mobile、wear两部分，这里同时需要勾选Phone and Tablet、Wear，Minimum SDK这里都选API21。</p><p><img src="http://pic.luochenxun.com/images/2016-10-15-22%3A44%3A23.jpg" alt=""></p><p>wear部分默认选Add No Activity</p><p><img src="http://pic.luochenxun.com/images/2016-10-15-23%3A04%3A19.jpg" alt=""></p><p>由于我的Android Wear手表为圆形，这里就以圆形表盘为例</p><p><img src="http://pic.luochenxun.com/images/2016-10-15-22%3A53%3A36.jpg" alt=""></p><h4 id="权限声明"><a href="#权限声明" class="headerlink" title="权限声明"></a>权限声明</h4><p>表盘需要<code>WAKE_LOCK</code>权限，在<strong>mobile</strong>和<strong>wear Module</strong>的manifest文件中声明权限。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"android.permission.WAKE_LOCK"</span> /&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="继承CanvasWatchFaceService类并实现相关方法"><a href="#继承CanvasWatchFaceService类并实现相关方法" class="headerlink" title="继承CanvasWatchFaceService类并实现相关方法"></a>继承CanvasWatchFaceService类并实现相关方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWatchFaceService</span> <span class="keyword">extends</span> <span class="title">CanvasWatchFaceService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> CanvasWatchFaceService.<span class="function">Engine <span class="title">onCreateEngine</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Engine();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Engine</span> <span class="keyword">extends</span> <span class="title">CanvasWatchFaceService</span>.<span class="title">Engine</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(SurfaceHolder holder)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onCreate(holder);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPropertiesChanged</span><span class="params">(Bundle properties)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onPropertiesChanged(properties);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTimeTick</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onTimeTick();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAmbientModeChanged</span><span class="params">(<span class="keyword">boolean</span> inAmbientMode)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onAmbientModeChanged(inAmbientMode);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//绘制表盘</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas, Rect bounds)</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onVisibilityChanged</span><span class="params">(<span class="keyword">boolean</span> visible)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onVisibilityChanged(visible);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注册service"><a href="#注册service" class="headerlink" title="注册service"></a>注册service</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">".MyWatchFaceService"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:label</span>=<span class="string">"@string/my_watch_faces"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:permission</span>=<span class="string">"android.permission.BIND_WALLPAPER"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:name</span>=<span class="string">"android.service.wallpaper"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:resource</span>=<span class="string">"@xml/watch_face"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:name</span>=<span class="string">"com.google.android.wearable.watchface.preview"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:resource</span>=<span class="string">"@drawable/preview_smartisan"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:name</span>=<span class="string">"com.google.android.clockwork.home.preview_circular"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:resource</span>=<span class="string">"@drawable/preview_smartisan"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:name</span>=<span class="string">"com.google.android.wearable.watchface.companionConfigurationAction"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:value</span>=<span class="string">"com.example.android.wearable.watchface.CONFIG_ANALOG"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.service.wallpaper.WallpaperService"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"com.google.android.wearable.watchface.category.WATCH_FACE"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="实战-模仿锤子时钟"><a href="#实战-模仿锤子时钟" class="headerlink" title="实战-模仿锤子时钟"></a>实战-模仿锤子时钟</h4><p>详细代码见<a href="https://github.com/long-fei/smartisan_watchface" target="_blank" rel="noopener">smartisan_watchface</a></p><p><img src="http://pic.luochenxun.com/images/2016-10-22-1441606670894.jpg" alt=""></p><h4 id="调试表盘"><a href="#调试表盘" class="headerlink" title="调试表盘"></a>调试表盘</h4><ul><li>使用<code>assembleDebug</code>命令生成debug包</li><li>用<code>adb connect</code>命令连接手表进行调试</li><li>使用<code>adb instll</code>命令将表盘安装至手表</li></ul><h4 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h4><ul><li>使用<code>assembleRelease</code>命令生成release包</li><li>使用<code>adb instll</code>命令将表盘安装至手表</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Android Wear是Android操作系统的一个分支版本，专为智能手表等可穿戴式电脑设备所设计，由Google主导开发。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;瞎扯扯&quot;&gt;&lt;a href=&quot;#瞎扯扯&quot; class=&quot;headerlink&quot; title=&quot;瞎扯扯&quot;&gt;&lt;/a&gt;瞎扯扯&lt;/h4&gt;&lt;p&gt;我们身处一个最好的时代，也是最坏的时代，智能硬件的普及，极大改善了人们的生活体验，以前只有在科幻电影中才可能出现的场景，也逐渐变为现实进入人类的生活。&lt;br&gt;在MOTO 360刚推出之时，刷新了我对手表的认识，Android Wear使得手表有了更多的可实现的功能，使得手表成为手机功能的延伸，某些功能的操作甚至不再需要手机，比如消息的阅读与回复，查看天气，导航、打车等等。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Maven私有仓库搭建</title>
    <link href="http://www.chenlongfei.cn/2016/08/06/maven-private-repository/"/>
    <id>http://www.chenlongfei.cn/2016/08/06/maven-private-repository/</id>
    <published>2016-08-06T04:41:51.000Z</published>
    <updated>2018-10-15T10:31:22.401Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>在Android开发的世界中，依赖管理是每个开发人员不得不面对的问题，无论是外部的开源类库依赖，还是项目内部的模块间的依赖，都需要有效的管理。在Android中不仅可以依赖<code>module</code>、<code>so</code>、<code>jar</code>还可以依赖<code>aar</code>。既可引用远程仓库<code>jcenter()</code>、<code>mavenCentral()</code>、也可以引用私有仓库、本地仓库。使用Maven可以有效地解决依赖管理。<br><a id="more"></a></p><h4 id="Maven包"><a href="#Maven包" class="headerlink" title="Maven包"></a>Maven包</h4><ul><li><p>使用方式   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">  compile &apos;cn.sharesdk.onekeyshare:onekeyshare:1.0.0&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>包结构</p><p><img src="http://pic.luochenxun.com/images/2016-08-12_16:22:28.jpg" alt=""></p></li><li><p>POM文件，包含maven包的相关信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.sharesdk.onekeyshare<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>onekeyshare<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>aar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Onekeyshare Aar Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">licenses</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">license</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>The Apache Software License, Version 2.0<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.apache.org/licenses/LICENSE-2.0.txt<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">distribution</span>&gt;</span>repo<span class="tag">&lt;/<span class="name">distribution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">license</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">developers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">developer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>troy<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>troy<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">developer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="Maven-仓库"><a href="#Maven-仓库" class="headerlink" title="Maven 仓库"></a>Maven 仓库</h4><p>Maven仓库用于存放Maven包，可以是本地的，远程的、私有的、公开的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">        maven &#123; url &quot;https://jitpack.io&quot; &#125;</span><br><span class="line">        //私有maven仓库</span><br><span class="line">        maven &#123; url &quot;http://172.16.1.19:8081/repository/maven-releases/&quot; &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h4 id="使用Nexus搭建私有仓库"><a href="#使用Nexus搭建私有仓库" class="headerlink" title="使用Nexus搭建私有仓库"></a>使用Nexus搭建私有仓库</h4><ul><li><p>下载<a href="http://www.sonatype.com/download-oss-sonatype" target="_blank" rel="noopener">nexus</a>，选择<code>nexus-3.0.1-01-mac.tgz</code></p></li><li><p>解压文件，进入<code>nexus-3.0.1-01/bin</code>目录，输入<code>./nexus start</code>运行服务，nexus默认监听端口8081。</p></li><li><p>浏览器中访问<code>http://your ip:8081</code></p></li><li><p>nexus管理员主界面，默认帐号<code>admin</code>，密码<code>admin123</code></p><p><img src="http://pic.luochenxun.com/images/2016-08-12_16:45:57.jpg" alt=""></p></li><li><p>仓库类型<br>hosted，本地仓库，通常我们会部署自己的构件到这一类型的仓库。比如公司的第二方库。<br>proxy，代理仓库，它们被用来代理远程的公共仓库，如maven中央仓库。<br>group，仓库组，用来合并多个hosted/proxy仓库，当你的项目希望在多个repository使用资源时就不需要多次引用了，只需要引用一个group即可。</p></li></ul><h4 id="发布包到私有仓库"><a href="#发布包到私有仓库" class="headerlink" title="发布包到私有仓库"></a>发布包到私有仓库</h4><ul><li><p>使用方法参考<a href="https://github.com/chrisbanes/gradle-mvn-push" target="_blank" rel="noopener">chrisbanes/gradle-mvn-push </a>插件</p></li><li><p>在项目根目录新建<code>gradle.properties</code>文件</p></li><li><p>使用如下配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># 项目名称</span><br><span class="line">PROJ_NAME=onekeyshare</span><br><span class="line">PROJ_ARTIFACTID=onekeyshare</span><br><span class="line">PROJ_POM_NAME=Onekeyshare Aar Repository</span><br><span class="line">POM_PACKAGING=aar</span><br><span class="line"></span><br><span class="line"># the following can move to ~/.gradle/gradle.properties</span><br><span class="line">NEXUS_USERNAME=admin</span><br><span class="line">NEXUS_PASSWORD=admin123</span><br><span class="line">RELEASE_REPOSITORY_URL=http://172.16.1.19:8081/repository/maven-releases/</span><br><span class="line">SNAPSHOT_REPOSITORY_URL=http://172.16.1.19:8081/repository/maven-snapshots/</span><br><span class="line"></span><br><span class="line"># 包信息</span><br><span class="line">PROJ_GROUP=cn.sharesdk.onekeyshare</span><br><span class="line">PROJ_VERSION=1.0.0</span><br><span class="line"></span><br><span class="line"># 项目的描述</span><br><span class="line">#PROJ_WEBSITEURL=</span><br><span class="line">#PROJ_ISSUETRACKERURL=</span><br><span class="line">#PROJ_VCSURL=</span><br><span class="line">#PROJ_DESCRIPTION=Simple and effective bug &amp; crash reporting tool for Android apps</span><br><span class="line"></span><br><span class="line"># Licence信息</span><br><span class="line">PROJ_LICENCE_NAME=The Apache Software License, Version 2.0</span><br><span class="line">PROJ_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt</span><br><span class="line">PROJ_LICENCE_DEST=repo</span><br><span class="line"></span><br><span class="line"># Developer 信息</span><br><span class="line">DEVELOPER_ID=troy</span><br><span class="line">DEVELOPER_NAME=troy</span><br><span class="line">DEVELOPER_EMAIL=chenlongfeiceo@gmail.com</span><br></pre></td></tr></table></figure></li><li><p>根目录下新建<code>gradle-mvn-push.gradle</code>文件</p></li><li><p>使用如下配置</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">apply <span class="string">plugin:</span> <span class="string">'maven'</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'signing'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> isReleaseBuild() &#123;</span><br><span class="line">  <span class="keyword">return</span> PROJ_VERSION.contains(<span class="string">"SNAPSHOT"</span>) == <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> getReleaseRepositoryUrl() &#123;</span><br><span class="line">  <span class="keyword">return</span> hasProperty(<span class="string">'RELEASE_REPOSITORY_URL'</span>) ? RELEASE_REPOSITORY_URL</span><br><span class="line">          : <span class="string">"https://oss.sonatype.org/service/local/staging/deploy/maven2/"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> getSnapshotRepositoryUrl() &#123;</span><br><span class="line">  <span class="keyword">return</span> hasProperty(<span class="string">'SNAPSHOT_REPOSITORY_URL'</span>) ? SNAPSHOT_REPOSITORY_URL</span><br><span class="line">          : <span class="string">"https://oss.sonatype.org/content/repositories/snapshots/"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> getRepositoryUsername() &#123;</span><br><span class="line">  <span class="keyword">return</span> hasProperty(<span class="string">'NEXUS_USERNAME'</span>) ? NEXUS_USERNAME</span><br><span class="line">          : <span class="string">""</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> getRepositoryPassword() &#123;</span><br><span class="line">  <span class="keyword">return</span> hasProperty(<span class="string">'NEXUS_PASSWORD'</span>) ? NEXUS_PASSWORD</span><br><span class="line">          : <span class="string">""</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">afterEvaluate &#123; project -&gt;</span><br><span class="line">  uploadArchives &#123;</span><br><span class="line">      repositories &#123;</span><br><span class="line">          mavenDeployer &#123;</span><br><span class="line">              beforeDeployment &#123; MavenDeployment deployment -&gt; signing.signPom(deployment) &#125;</span><br><span class="line"></span><br><span class="line">              pom.groupId = PROJ_GROUP</span><br><span class="line">              pom.artifactId = PROJ_ARTIFACTID</span><br><span class="line">              pom.version = PROJ_VERSION</span><br><span class="line"></span><br><span class="line">              repository(<span class="string">url:</span> getReleaseRepositoryUrl()) &#123;</span><br><span class="line">                  authentication(<span class="string">userName:</span> getRepositoryUsername(), <span class="string">password:</span> getRepositoryPassword())</span><br><span class="line">              &#125;</span><br><span class="line">              snapshotRepository(<span class="string">url:</span> getSnapshotRepositoryUrl()) &#123;</span><br><span class="line">                  authentication(<span class="string">userName:</span> getRepositoryUsername(), <span class="string">password:</span> getRepositoryPassword())</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              pom.project &#123;</span><br><span class="line">                  name PROJ_POM_NAME</span><br><span class="line">                  packaging POM_PACKAGING</span><br><span class="line"><span class="comment">//                    description PROJ_DESCRIPTION</span></span><br><span class="line"><span class="comment">//                    url PROJ_WEBSITEURL</span></span><br><span class="line"></span><br><span class="line">                  scm &#123;</span><br><span class="line"><span class="comment">//                        url PROJ_VCSURL</span></span><br><span class="line">                      connection DEVELOPER_EMAIL</span><br><span class="line">                      developerConnection DEVELOPER_EMAIL</span><br><span class="line">                  &#125;</span><br><span class="line"></span><br><span class="line">                  licenses &#123;</span><br><span class="line">                      license &#123;</span><br><span class="line">                          name PROJ_LICENCE_NAME</span><br><span class="line">                          url PROJ_LICENCE_URL</span><br><span class="line">                          distribution PROJ_LICENCE_DEST</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125;</span><br><span class="line"></span><br><span class="line">                  developers &#123;</span><br><span class="line">                      developer &#123;</span><br><span class="line">                          id DEVELOPER_ID</span><br><span class="line">                          name DEVELOPER_NAME</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  signing &#123;</span><br><span class="line">      required &#123; isReleaseBuild() &amp;&amp; gradle.taskGraph.hasTask(<span class="string">"uploadArchives"</span>) &#125;</span><br><span class="line">      sign configurations.archives</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  task androidJavadocs(<span class="string">type:</span> Javadoc) &#123;</span><br><span class="line">      source = android.sourceSets.main.java.srcDirs</span><br><span class="line">      classpath += project.files(android.getBootClasspath().join(File.pathSeparator))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  task androidJavadocsJar(<span class="string">type:</span> Jar, <span class="string">dependsOn:</span> androidJavadocs) &#123;</span><br><span class="line">      classifier = <span class="string">'javadoc'</span></span><br><span class="line">      from androidJavadocs.destinationDir</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  task androidSourcesJar(<span class="string">type:</span> Jar) &#123;</span><br><span class="line">      classifier = <span class="string">'sources'</span></span><br><span class="line">      from android.sourceSets.main.java.sourceFiles</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  artifacts &#123;</span><br><span class="line">      archives androidSourcesJar</span><br><span class="line">      archives androidJavadocsJar</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在<code>build.gradle</code>中使用插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apply from: &apos;../gradle-mvn-push.gradle&apos;</span><br></pre></td></tr></table></figure></li><li><p>执行gradle task进行上传操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./gradlew clean build uploadArchives</span><br></pre></td></tr></table></figure></li></ul><h4 id="查看已上传的maven包"><a href="#查看已上传的maven包" class="headerlink" title="查看已上传的maven包"></a>查看已上传的maven包</h4><p><img src="http://pic.luochenxun.com/images/2016-08-12_17:29:15.jpg" alt=""></p><h4 id="使用maven包"><a href="#使用maven包" class="headerlink" title="使用maven包"></a>使用maven包</h4><ul><li><p>声明私有仓库地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">maven &#123; url &quot;http://172.16.1.19:8081/repository/maven-releases/&quot; &#125;</span><br></pre></td></tr></table></figure></li><li><p>使用maven包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> dependencies &#123;</span><br><span class="line">  compile &apos;cn.sharesdk.onekeyshare:onekeyshare:1.0.0&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;在Android开发的世界中，依赖管理是每个开发人员不得不面对的问题，无论是外部的开源类库依赖，还是项目内部的模块间的依赖，都需要有效的管理。在Android中不仅可以依赖&lt;code&gt;module&lt;/code&gt;、&lt;code&gt;so&lt;/code&gt;、&lt;code&gt;jar&lt;/code&gt;还可以依赖&lt;code&gt;aar&lt;/code&gt;。既可引用远程仓库&lt;code&gt;jcenter()&lt;/code&gt;、&lt;code&gt;mavenCentral()&lt;/code&gt;、也可以引用私有仓库、本地仓库。使用Maven可以有效地解决依赖管理。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>我的利器</title>
    <link href="http://www.chenlongfei.cn/2016/07/29/liqi/"/>
    <id>http://www.chenlongfei.cn/2016/07/29/liqi/</id>
    <published>2016-07-29T13:55:08.000Z</published>
    <updated>2016-07-30T07:59:47.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="介绍一下你自己和所做的工作。"><a href="#介绍一下你自己和所做的工作。" class="headerlink" title="介绍一下你自己和所做的工作。"></a>介绍一下你自己和所做的工作。</h4><p>我叫<a href="http://www.chenlongfei.cn">陈龙飞</a>，是一名Android开发者。喜欢骑行，梦想着有机会骑行川藏，环一次青海湖和海南岛。业余健身爱好者，用崔健的话说“一周跑步三次加一次游泳”。酷爱美剧，《权力的游戏》《行尸走肉》期待更新中。<br><a id="more"></a></p><h4 id="你都在使用哪些硬件？"><a href="#你都在使用哪些硬件？" class="headerlink" title="你都在使用哪些硬件？"></a>你都在使用哪些硬件？</h4><ul><li><strong>MacBook Pro  13-inch</strong><br>漂亮的外观，精美的系统，持久的续航，方便携带，不用关机开盖即用。目前买过的最值的硬件，大大提高了工作和学习效率。</li><li><strong>Nexus4</strong><br>用来体验Android原生系统。</li><li><strong>小米4</strong><br>目前使用的测试机，MIUI系统前两年做得还是挺美的。</li><li><strong>iPhone 6</strong><br>当前正在使用的手机，无法忍受Android系统的各种卡顿。</li><li><strong>iPad</strong><br>平时用来阅读PDF，看看小说，偶尔被当作电脑的第二屏使用。</li><li><strong>Magic Mouse</strong><br>单纯的喜欢Magic Mouse设计。</li><li><strong>TicWatch</strong><br>出门问问众筹的一款Android手表，内置的手表系统是目前国内做得最出色的。</li></ul><h4 id="软件呢？"><a href="#软件呢？" class="headerlink" title="软件呢？"></a>软件呢？</h4><ul><li><strong>Android Studio</strong><br>从Eclipse切换到Android Studio是件幸福的事。</li><li><strong>iTerm</strong><br>iTerm+oh my zsh完美搭配。</li><li><strong>有道词典</strong><br>阅读文档时方便查单词</li><li><strong>Alfred</strong><br>效率神器</li><li><strong>Atom</strong><br>丰富的插件，更现代的编辑器，用来阅读代码，写博客。</li><li><strong>Dash</strong><br>离线文档管理，必备。</li><li><strong>Android Tool</strong><br>非常方便的在电脑上给手机截屏录屏的小工具。</li><li><strong>MindNode</strong><br>漂亮的思维导图软件。</li><li><strong>Surge</strong><br>科学上网</li><li><strong>Postman</strong><br>API测试利器</li></ul><h4 id="你最理想的工作环境是什么？"><a href="#你最理想的工作环境是什么？" class="headerlink" title="你最理想的工作环境是什么？"></a>你最理想的工作环境是什么？</h4><p>明亮的环境，宽阔的桌面，舒服的椅子。高层，靠窗，面朝大海。</p><h4 id="你平时获得工作灵感的方式有哪些？"><a href="#你平时获得工作灵感的方式有哪些？" class="headerlink" title="你平时获得工作灵感的方式有哪些？"></a>你平时获得工作灵感的方式有哪些？</h4><p>洗澡、睡觉前。这些时候思考得会多点。</p><h4 id="推荐一件生活中的利器给大家。"><a href="#推荐一件生活中的利器给大家。" class="headerlink" title="推荐一件生活中的利器给大家。"></a>推荐一件生活中的利器给大家。</h4><p>Keep健身软件，健康的身体才是一切的根本。</p><blockquote><p>本文参与了「利器社群计划」，发现更多创造者和他们的工具：<a href="http://liqi.io/community/" target="_blank" rel="noopener">http://liqi.io/community/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;介绍一下你自己和所做的工作。&quot;&gt;&lt;a href=&quot;#介绍一下你自己和所做的工作。&quot; class=&quot;headerlink&quot; title=&quot;介绍一下你自己和所做的工作。&quot;&gt;&lt;/a&gt;介绍一下你自己和所做的工作。&lt;/h4&gt;&lt;p&gt;我叫&lt;a href=&quot;http://www.chenlongfei.cn&quot;&gt;陈龙飞&lt;/a&gt;，是一名Android开发者。喜欢骑行，梦想着有机会骑行川藏，环一次青海湖和海南岛。业余健身爱好者，用崔健的话说“一周跑步三次加一次游泳”。酷爱美剧，《权力的游戏》《行尸走肉》期待更新中。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Jenkins持续集成之Android篇</title>
    <link href="http://www.chenlongfei.cn/2016/07/24/jenkins-android/"/>
    <id>http://www.chenlongfei.cn/2016/07/24/jenkins-android/</id>
    <published>2016-07-23T16:16:47.000Z</published>
    <updated>2018-10-15T10:31:22.401Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Jenkins是什么"><a href="#Jenkins是什么" class="headerlink" title="Jenkins是什么"></a>Jenkins是什么</h4><p>Jenkins是一个开源的持续集成工具，提供软件开发的持续集成服务。</p><h4 id="Jenkins使用场景"><a href="#Jenkins使用场景" class="headerlink" title="Jenkins使用场景"></a>Jenkins使用场景</h4><p>在移动端开发过程中，临近发版时，需要频繁进行集成操作，打包app提交给测试，测试反馈bug，开发修复bug后再重新打包给测试，如此反复操作消耗了大量时间。<br>而持续集成正是针对这类问题的最佳解决方案，使用持续集成可以自动化实现编译、发布、测试。</p><a id="more"></a><h4 id="Jenkins怎么用"><a href="#Jenkins怎么用" class="headerlink" title="Jenkins怎么用"></a>Jenkins怎么用</h4><p> <a href="https://jenkins.io" target="_blank" rel="noopener">Jenkins</a>提供了各种安装程序，这里以Docker为例。  </p><ul><li><p>下载Docker GUI工具<a href="https://kitematic.com" target="_blank" rel="noopener">kitematic</a></p></li><li><p>搜索Jenkins获取镜像，并选择create创建容器</p><p><img src="http://pic.luochenxun.com/af9eee84c108c5e87f1bc27088dd8ae4.png" alt=""></p></li><li><p>启动容器可以看到相关启动日志，这里需要复制Jenkins生成的安装时所需随机密码</p><p><img src="http://pic.luochenxun.com/images/2016-07-24_20:34:20.jpg" alt="2016-07-24_20:34:20.jpg"></p></li><li><p>查看服务器地址</p><p><img src="http://pic.luochenxun.com/images/2016-07-24_20:28:56.jpg" alt=""></p></li><li><p>浏览器中输入服务器地址，初次安装需要生成的随机密码</p><p><img src="http://pic.luochenxun.com/images/2016-07-24_20:31:10.jpg" alt=""></p></li><li><p>选择安装方式</p><p><img src="http://pic.luochenxun.com/images/2016-07-24_20:40:35.jpg" alt=""></p></li><li><p>创建用户并登录</p></li><li><p>首页选择新建，创建一个项目</p><p><img src="http://pic.luochenxun.com/images/2016-07-24_21:30:41.jpg" alt=""></p></li><li><p>源码管理，这里我们以git方式为例</p><p><img src="http://pic.luochenxun.com/images/2016-07-24_21:24:51.jpg" alt=""></p></li><li><p>设置每10分钟检查一次代码</p><p><img src="http://pic.luochenxun.com/images/2016-07-24_21:27:23.jpg" alt=""></p></li><li><p>选取构建方式</p><p><img src="http://pic.luochenxun.com/images/2016-07-24_21:28:02.jpg" alt=""></p></li><li><p>执行assembleRelease任务</p><p><img src="http://pic.luochenxun.com/images/2016-07-24_22:13:38.jpg" alt=""></p></li><li><p>这里可以执行一些命令，比如自动上传到内测托管平台，如”蒲公英” “FIR”</p><p><img src="http://pic.luochenxun.com/images/2016-07-24_21:28:46.jpg" alt=""></p></li><li><p>保存之后，执行自动化构建，可以看到相关日志</p><p><img src="http://pic.luochenxun.com/images/2016-07-24_22:04:47.jpg" alt=""></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Jenkins是什么&quot;&gt;&lt;a href=&quot;#Jenkins是什么&quot; class=&quot;headerlink&quot; title=&quot;Jenkins是什么&quot;&gt;&lt;/a&gt;Jenkins是什么&lt;/h4&gt;&lt;p&gt;Jenkins是一个开源的持续集成工具，提供软件开发的持续集成服务。&lt;/p&gt;
&lt;h4 id=&quot;Jenkins使用场景&quot;&gt;&lt;a href=&quot;#Jenkins使用场景&quot; class=&quot;headerlink&quot; title=&quot;Jenkins使用场景&quot;&gt;&lt;/a&gt;Jenkins使用场景&lt;/h4&gt;&lt;p&gt;在移动端开发过程中，临近发版时，需要频繁进行集成操作，打包app提交给测试，测试反馈bug，开发修复bug后再重新打包给测试，如此反复操作消耗了大量时间。&lt;br&gt;而持续集成正是针对这类问题的最佳解决方案，使用持续集成可以自动化实现编译、发布、测试。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android AOP实践</title>
    <link href="http://www.chenlongfei.cn/2016/07/09/android-aop/"/>
    <id>http://www.chenlongfei.cn/2016/07/09/android-aop/</id>
    <published>2016-07-09T15:33:41.000Z</published>
    <updated>2016-07-09T15:33:14.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="AOP简介"><a href="#AOP简介" class="headerlink" title="AOP简介"></a>AOP简介</h4><p><strong>面向切面编程（AOP，Aspect-oriented programming）</strong> 通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是OOP的延续，是软件开发中的一个热点，也是Spring框架中的一个重要内容，是函数式编程的一种衍生范型。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。<br><a id="more"></a></p><h4 id="AOP应用场景"><a href="#AOP应用场景" class="headerlink" title="AOP应用场景"></a>AOP应用场景</h4><p>假设有这样一个需求，需要统计所有的点击事件并进行上报。一般情况下会在所有的点击事件中调用事件上报的方法，这使得代码之间的耦合度非常之高，将来修改事件上报的方法，所有调用该方法的地方都得修改。<br>AOP的目标就是解决这些问题，把这些功能集中起来进行管理。比如上面所说的点击事件上报将使用AOP统一管理。</p><h4 id="普通例子（非AOP）"><a href="#普通例子（非AOP）" class="headerlink" title="普通例子（非AOP）"></a>普通例子（非AOP）</h4><p>每个页面点击事件中都需要调用事件上报的方法。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AOPActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Button firstBtn;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_aop);</span><br><span class="line"></span><br><span class="line">        firstBtn = (Button) findViewById(R.id.btn_first);</span><br><span class="line">        firstBtn.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.btn_first:</span><br><span class="line">                <span class="comment">//上报点击事件</span></span><br><span class="line">                EventManage.sendClickEvent();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="AspectJ"><a href="#AspectJ" class="headerlink" title="AspectJ"></a>AspectJ</h4><p>AspectJ是一套支持AOP的语言，完全兼容Java。<br>使用AspectJ的两种方法:</p><ul><li>完全使用AspectJ的语言</li><li>使用AspectJ注解</li></ul><h4 id="AspectJ语法"><a href="#AspectJ语法" class="headerlink" title="AspectJ语法"></a>AspectJ语法</h4><p><strong>Join Points</strong> 程序运行时的一些执行点。比如函数调用、函数执行等等。<br><strong>Pointcuts</strong> 一个程序会有很多个JPoints，不是每一个JPonints都是我们所需要的，而选择感兴趣的JPonints就是Pointcuts提供的功能。</p><p>Join Points类型与之对应的Pointcuts:   </p><table><thead><tr><th>Join point category</th><th>Pointcut syntax</th></tr></thead><tbody><tr><td>Method execution(函数执行)</td><td>execution(MethodSignature)</td></tr><tr><td>Method call(函数调用)</td><td>call(MethodSignature)</td></tr><tr><td>Constructor execution(构造函数执行)</td><td>execution(ConstructorSignature)</td></tr><tr><td>Constructor call(构造函数调用)</td><td>call(ConstructorSignature)</td></tr><tr><td>Class initialization(类初始化)</td><td>staticinitialization(TypeSignature)</td></tr><tr><td>Filed read access(获取变量)</td><td>get(FiledSignature)</td></tr><tr><td>Filed write access(设置变量)</td><td>set(FiledSignature)</td></tr><tr><td>Exception handler execution(异常处理)</td><td>handler(TypeSignature)</td></tr><tr><td>Object initialization(Object 在构造函数中做得工作)</td><td>initialization(ConstructorSignature)</td></tr><tr><td>Object pre-initialization</td><td>preinitialization(ConstructorSignature)</td></tr><tr><td>Advice execution</td><td>adviceexecution()</td></tr></tbody></table><p><strong>Advice</strong> 选择Join Points后要做的事情:</p><table><thead><tr><th>关键词</th><th>说明</th></tr></thead><tbody><tr><td>before()</td><td>Join Points执行之前需要做的事情</td></tr><tr><td>after()</td><td>Join Points执行之后需要做的事情</td></tr><tr><td>after():returning(返回值类型)   after():throwing(异常类型)</td><td>假设JPoint是一个函数调用的话，那么函数调用执行完有两种方式退出，一个是正常的return，另外一个是抛异常。注意，after()默认包括returning和throwing两种情况</td></tr><tr><td>返回值类型 around()</td><td>around替代原Join Points，如果要执行原JPoint的话，需要调用proceed</td></tr></tbody></table><h4 id="Android-AspectJ-Usage"><a href="#Android-AspectJ-Usage" class="headerlink" title="Android AspectJ Usage"></a>Android AspectJ Usage</h4><p>使用AspectJ Gradle插件<a href="https://github.com/HujiangTechnology/gradle_plugin_android_aspectjx" target="_blank" rel="noopener">gradle-android-plugin-aspectjx</a></p><h4 id="AOP实践（使用AspectJ注解）"><a href="#AOP实践（使用AspectJ注解）" class="headerlink" title="AOP实践（使用AspectJ注解）"></a>AOP实践（使用AspectJ注解）</h4><p>选择切入的目标函数:<br>访问权限（public/private/protect，以及static/final）属于可选项。如果不设置它们，则默认都会选择。<br>返回值类型就是普通的函数的返回值类型。如果不限定类型的话，就用<code>*</code>通配符表示。<br>包名.函数名用于查找匹配的函数。可以使用通配符，包括<code>*</code>和<code>..</code>以及<code>+</code>号。其中<code>*</code>号用于匹配除<code>.</code>号之外的任意字符，而<code>..</code>则表示任意子package，<code>+</code>号表示子类。  </p><p><code>@Pointcut(&quot;execution(* *.onClick(android.view.View)) &amp;&amp; args(view)&quot;)</code><br>表示Join Points类型为<strong>execution</strong>，目标函数为任意包下返回值为任意类型的名为<strong>onClick</strong>的函数，其中参数类型为<strong>View</strong></p><p><code>@Around(&quot;onClickPointcut(view)&quot;)</code><br>替换原Join Points<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UBCAspectJ</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Pointcut</span>(<span class="string">"execution(* *.onClick(android.view.View)) &amp;&amp; args(view)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClickPointcut</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut</span>(<span class="string">"execution(* *.onItemClick(android.widget.AdapterView&lt;?&gt;,android.view.View,int,long)) &amp;&amp; args(adapterView,view,position,id)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClickPointcut</span><span class="params">(AdapterView&lt;?&gt; adapterView, View view, <span class="keyword">int</span> position, <span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around</span>(<span class="string">"onClickPointcut(view)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(ProceedingJoinPoint joinPoint, View view)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="comment">//统一处理onClick事件</span></span><br><span class="line">        joinPoint.proceed(joinPoint.getArgs());</span><br><span class="line">        handlerClickEvent(joinPoint, <span class="keyword">null</span>, view, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around</span>(<span class="string">"onItemClickPointcut(adapterView,view,position,id)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(ProceedingJoinPoint joinPoint, AdapterView&lt;?&gt; adapterView, View view, <span class="keyword">int</span> position, <span class="keyword">long</span> id)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="comment">//统一处理onItemClick事件</span></span><br><span class="line">        handlerClickEvent(joinPoint, adapterView, view, position);</span><br><span class="line">        joinPoint.proceed(joinPoint.getArgs());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handlerClickEvent</span><span class="params">(ProceedingJoinPoint joinPoint, AdapterView&lt;?&gt; adapterView, View view, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//上报点击事件</span></span><br><span class="line">        EventManage.sendClickEvent();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>使用AOP我们就不用给所有点击事件添加上报点击事件的方法，而是统一使用AOP管理。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;AOP简介&quot;&gt;&lt;a href=&quot;#AOP简介&quot; class=&quot;headerlink&quot; title=&quot;AOP简介&quot;&gt;&lt;/a&gt;AOP简介&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;面向切面编程（AOP，Aspect-oriented programming）&lt;/strong&gt; 通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是OOP的延续，是软件开发中的一个热点，也是Spring框架中的一个重要内容，是函数式编程的一种衍生范型。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ReactNative开发环境搭建</title>
    <link href="http://www.chenlongfei.cn/2016/07/04/react-native-dev-env/"/>
    <id>http://www.chenlongfei.cn/2016/07/04/react-native-dev-env/</id>
    <published>2016-07-04T07:35:02.000Z</published>
    <updated>2016-07-05T02:59:39.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="环境需求"><a href="#环境需求" class="headerlink" title="环境需求"></a>环境需求</h4><ol><li>OS X是开发iOS应用所必须的</li><li><p><a href="http://brew.sh" target="_blank" rel="noopener">Homebrew</a>(软件包管理工具)</p><a id="more"></a><p>安装命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure></li><li><p><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></p><p>安装方法一:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><p>安装方法二:(推荐)</p><p>首先安装nvm(node.js版本管理)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nvm</span><br></pre></td></tr></table></figure><p>安装最新版本node.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//(nvm alias default node指定全局版本)</span><br><span class="line">nvm install node &amp;&amp; nvm alias default node</span><br></pre></td></tr></table></figure></li><li><p>watchman</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install watchman</span><br></pre></td></tr></table></figure></li><li><p>flow(js代码类型检查)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install flow</span><br></pre></td></tr></table></figure></li><li><p>安装React Native命令行工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//(-g指定为全局安装)</span><br><span class="line">$ npm install -g react-native-cli</span><br><span class="line">//初始化项目</span><br><span class="line">$ react-native init AwesomeProject`</span><br><span class="line">//译注：由于众所周知的网络原因，react-native命令行从npm官方源拖代码时会遇上麻烦。请将npm仓库源替换为国内镜像：</span><br><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line">npm config set disturl https://npm.taobao.org/dist</span><br></pre></td></tr></table></figure></li></ol><h4 id="Demo运行"><a href="#Demo运行" class="headerlink" title="Demo运行"></a>Demo运行</h4><h6 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h6><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd AwesomeProject</span><br></pre></td></tr></table></figure></li><li><p>用XCode打开<code>ios/AwesomeProject.xcodeproj</code>并点击Run按钮</p></li><li>使用你喜欢的文本编辑器打开<code>index.ios.js</code>并随便改上几行</li><li>在iOS Emulator中按下<code>⌘-R</code>就可以刷新APP并看到你的最新修改</li></ul><h6 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h6><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd AwesomeProject</span><br></pre></td></tr></table></figure></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ react-native run-android</span><br></pre></td></tr></table></figure></li><li><p>使用你喜欢的文本编辑器打开<code>index.android.js</code>并随便改上几行</p></li><li>按Menu键（通常是F2，在Genymotion模拟器中是⌘+M）然后选择 Reload JS 就可以看到你的最新修改</li><li>在终端下运行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat *:S ReactNative:V ReactNativeJS:V</span><br></pre></td></tr></table></figure></li></ul><p>可以看到你的应用的日志</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;环境需求&quot;&gt;&lt;a href=&quot;#环境需求&quot; class=&quot;headerlink&quot; title=&quot;环境需求&quot;&gt;&lt;/a&gt;环境需求&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;OS X是开发iOS应用所必须的&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://brew.sh&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Homebrew&lt;/a&gt;(软件包管理工具)&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>移动设备抓包利器之Tcpdump</title>
    <link href="http://www.chenlongfei.cn/2015/08/15/wireshark-ios-android/"/>
    <id>http://www.chenlongfei.cn/2015/08/15/wireshark-ios-android/</id>
    <published>2015-08-15T15:57:02.000Z</published>
    <updated>2018-10-15T10:31:22.401Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要讲解如何对iOS和Android进行抓包。<br><a id="more"></a></p><hr><p>工具:<br>        1.<a href="http://download.csdn.net/detail/clf421575839/8680443" target="_blank" rel="noopener">tcpdump</a><br>        2.<a href="https://www.wireshark.org/download.html" target="_blank" rel="noopener">Wireshark</a></p><hr><h3 id="Android平台"><a href="#Android平台" class="headerlink" title="Android平台:"></a>Android平台:</h3><p><strong>设备必须已经root</strong><br>1.使用adb 执行以下命令,获取su权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb shell</span><br><span class="line">su</span><br></pre></td></tr></table></figure><p>2.修改 /data/local目录权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 data/local</span><br></pre></td></tr></table></figure><p>3.将tcpdump文件push到/data/local目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb push /Users/chenlongfei/Downloads/tcpdump /data/local</span><br></pre></td></tr></table></figure><p>4.修改tcpdump文件权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 6755 /data/local/tcpdump</span><br></pre></td></tr></table></figure><p>5.执行抓包监听命令,并将pcap文件保存到sdcard目录中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/data/local/tcpdump -p -s 0 -w /sdcard/test.pcap</span><br></pre></td></tr></table></figure><p>6.使用control+z 停止抓包<br>7.从设备中获取抓包文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb pull /sdcard/test.pcap /Users/chenlongfei/Downloads</span><br></pre></td></tr></table></figure><p><img src="http://pic.luochenxun.com/b5decc10ed099c63f919260cd1fac1cb.png" alt=""></p><p>至此抓包就结束了，PC上使用Wireshark对文件进行分析。</p><h3 id="iOS平台"><a href="#iOS平台" class="headerlink" title="iOS平台:"></a>iOS平台:</h3><p><strong>设备已经越狱</strong><br>1.在Cydia中安装OpenSSH、tcpdump<br>2.查看设备IP<br>3.连接到设备</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh root@192.168.1.103</span><br><span class="line">password:alpine(默认密码)</span><br></pre></td></tr></table></figure><p>4.开始抓包       </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -p -s 0 -w /test.pcap</span><br></pre></td></tr></table></figure><p>5.使用pp助手导出pcap文件即可</p><p><img src="http://pic.luochenxun.com/737b885c459913febca047a66ad39bfe.png" alt=""></p><p><img src="http://pic.luochenxun.com/e425db4105541e14a9c86252ac0d2028.png" alt=""></p><hr><p>教程结束</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要讲解如何对iOS和Android进行抓包。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在PreferenceActivity中使用ToolBar</title>
    <link href="http://www.chenlongfei.cn/2015/08/07/preference-activity-toolbar-usage/"/>
    <id>http://www.chenlongfei.cn/2015/08/07/preference-activity-toolbar-usage/</id>
    <published>2015-08-07T09:31:46.000Z</published>
    <updated>2018-10-15T10:31:22.401Z</updated>
    
    <content type="html"><![CDATA[<p>关于PreferenceActivity、PreferenceFragment、ToolBar就不再做介绍了，本文主要讲解的是在PreferenceActivity、PreferenceFragment中添加ToolBar。<br><a id="more"></a></p><hr><p><strong>下面介绍不同版本相应的方法:</strong></p><h3 id="PreferenceActivity-ToolBar-限Android-5-0以上"><a href="#PreferenceActivity-ToolBar-限Android-5-0以上" class="headerlink" title="PreferenceActivity+ToolBar(限Android 5.0以上)"></a>PreferenceActivity+ToolBar(限Android 5.0以上)</h3><p>继承PreferenceActivity重写onCreate方法添加如下代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">      setStatusBar();</span><br><span class="line">      <span class="comment">//找到Activity根布局</span></span><br><span class="line">      ViewGroup rootView = (ViewGroup) findViewById(android.R.id.content);</span><br><span class="line">      <span class="comment">//获取根布局子View</span></span><br><span class="line">      View content = rootView.getChildAt(<span class="number">0</span>);</span><br><span class="line">      <span class="comment">//加载自定义布局文件</span></span><br><span class="line">      LinearLayout toolbarLayout = (LinearLayout)LayoutInflater.from(<span class="keyword">this</span>).inflate(R.layout.activity_toolbar, <span class="keyword">null</span>);</span><br><span class="line">       <span class="comment">//移除根布局所有子view</span></span><br><span class="line">      rootView.removeAllViews();</span><br><span class="line">      <span class="comment">//注意这里一要将前面移除的子View添加到我们自定义布局文件中，否则PreferenceActivity中的Header将不会显示</span></span><br><span class="line">      toolbarLayout.addView(content);</span><br><span class="line">      <span class="comment">//将包含Toolbar的自定义布局添加到根布局中</span></span><br><span class="line">      rootView.addView(toolbarLayout);</span><br><span class="line">      <span class="comment">//设置toolbar</span></span><br><span class="line">      Toolbar toolbar=(Toolbar)toolbarLayout.findViewById(R.id.toolbar);</span><br><span class="line">      toolbar.setTitle(<span class="string">"设置"</span>);</span><br><span class="line">      toolbar.setTitleTextColor(Color.WHITE);</span><br><span class="line">      Drawable d=getResources().getDrawable(R.drawable.abc_ic_ab_back_mtrl_am_alpha);</span><br><span class="line">      toolbar.setNavigationIcon(d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>activity_toolbar.xml内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:minHeight</span>=<span class="string">"?attr/actionBarSize"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.widget.Toolbar</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里给出一个更简单的方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">     <span class="comment">//直接调用setContentView方法</span></span><br><span class="line">     setContentView(R.layout.activity_toolbar);</span><br><span class="line">     Toolbar toolbar=(Toolbar)findViewById(R.id.toolbar);</span><br><span class="line">     toolbar.setTitle(<span class="string">"设置"</span>);</span><br><span class="line">     toolbar.setTitleTextColor(Color.WHITE);</span><br><span class="line">     Drawable d=getResources().getDrawable(R.drawable.abc_ic_ab_back_mtrl_am_alpha);</span><br><span class="line">     toolbar.setNavigationIcon(d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>activity_toolbar.xml内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:minHeight</span>=<span class="string">"?attr/actionBarSize"</span>&gt;</span><span class="tag">&lt;/<span class="name">android.widget.Toolbar</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">--!这里必须能添加一个id为@android:id</span>/<span class="attr">list</span>的<span class="attr">ListView</span>否则会报错<span class="attr">--</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@android:id/list"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span><span class="tag">&lt;/<span class="name">ListView</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="ActionBarActivity-PreferenceFragment-ToolBar-适用于Android-5-0以下"><a href="#ActionBarActivity-PreferenceFragment-ToolBar-适用于Android-5-0以下" class="headerlink" title="ActionBarActivity+PreferenceFragment+ToolBar(适用于Android 5.0以下)"></a>ActionBarActivity+PreferenceFragment+ToolBar(适用于Android 5.0以下)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SettingsActivity</span> <span class="keyword">extends</span> <span class="title">ActionBarActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Toolbar mToolbar;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_settings);</span><br><span class="line">        initViews();</span><br><span class="line">        setStatusBar();</span><br><span class="line">        setToolbar();</span><br><span class="line">        initFragment();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mToolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setToolbar</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mToolbar.setTitle(<span class="string">"设置"</span>);</span><br><span class="line">        mToolbar.setTitleTextColor(Color.WHITE);</span><br><span class="line">        Drawable d=getResources().getDrawable(R.drawable.abc_ic_ab_back_mtrl_am_alpha);</span><br><span class="line">        mToolbar.setNavigationIcon(d);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onOptionsItemSelected(item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initFragment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        getFragmentManager().beginTransaction().replace(R.id.content, <span class="keyword">new</span> SettingsFragment()).commit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SettingsFragment</span> <span class="keyword">extends</span> <span class="title">PreferenceFragment</span> <span class="keyword">implements</span> <span class="title">Preference</span>.<span class="title">OnPreferenceChangeListener</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">            addPreferencesFromResource(R.xml.settings_preference_fragment);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onPreferenceChange</span><span class="params">(Preference preference, Object newValue)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置状态栏颜色</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setStatusBar</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT == Build.VERSION_CODES.KITKAT) &#123;</span><br><span class="line">            Window window = getWindow();</span><br><span class="line">            window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);</span><br><span class="line">            ViewGroup rootView = (ViewGroup) window.getDecorView();</span><br><span class="line">            View statusBarBg;</span><br><span class="line">            FrameLayout.LayoutParams layoutParams;</span><br><span class="line">            <span class="keyword">if</span> (rootView.getChildCount() &gt; <span class="number">1</span> &amp;&amp; (statusBarBg = rootView.getChildAt(<span class="number">1</span>)) != <span class="keyword">null</span> &amp;&amp; statusBarBg.getId() == R.id.startus_bar_bg) &#123;</span><br><span class="line">                layoutParams = (FrameLayout.LayoutParams) statusBarBg.getLayoutParams();</span><br><span class="line">                layoutParams.height = Appearance.getStatusBarHeight();</span><br><span class="line">                layoutParams.gravity = Gravity.TOP;</span><br><span class="line">                statusBarBg.setBackgroundColor(getResources().getColor(R.color.green));</span><br><span class="line">                statusBarBg.setLayoutParams(layoutParams);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                layoutParams = <span class="keyword">new</span> FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT, Appearance.getStatusBarHeight());</span><br><span class="line">                layoutParams.gravity = Gravity.TOP;</span><br><span class="line">                statusBarBg = <span class="keyword">new</span> View(<span class="keyword">this</span>);</span><br><span class="line">                statusBarBg.setBackgroundColor(getResources().getColor(R.color.green));</span><br><span class="line">                statusBarBg.setId(R.id.startus_bar_bg);</span><br><span class="line">                rootView.addView(statusBarBg, layoutParams);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>布局文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:minHeight</span>=<span class="string">"?attr/actionBarSize"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:popupTheme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Light"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:theme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.ActionBar"</span>&gt;</span><span class="tag">&lt;/<span class="name">android.support.v7.widget.Toolbar</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Preference xml:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">PreferenceScreen</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Preference</span> <span class="attr">android:title</span>=<span class="string">"@string/settings_about"</span>&gt;</span><span class="tag">&lt;/<span class="name">Preference</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Preference</span> <span class="attr">android:title</span>=<span class="string">"@string/settings_feedback"</span>&gt;</span><span class="tag">&lt;/<span class="name">Preference</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Preference</span> <span class="attr">android:title</span>=<span class="string">"@string/settings_check_update"</span>&gt;</span><span class="tag">&lt;/<span class="name">Preference</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">PreferenceScreen</span>&gt;</span></span><br></pre></td></tr></table></figure><p>好了，收工。<br>效果图如下：</p><p><img src="http://pic.luochenxun.com/2459e4cd39306879258cd1bc480f691b.png" alt="preview"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于PreferenceActivity、PreferenceFragment、ToolBar就不再做介绍了，本文主要讲解的是在PreferenceActivity、PreferenceFragment中添加ToolBar。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>System.out.print(&quot;Hello World&quot;)</title>
    <link href="http://www.chenlongfei.cn/2015/08/01/hello-world/"/>
    <id>http://www.chenlongfei.cn/2015/08/01/hello-world/</id>
    <published>2015-08-01T13:40:45.000Z</published>
    <updated>2016-11-25T02:58:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>这几年断断续续写过不少博客，从最初的新浪博客、到wordpress个人博客，大多是写生活琐事，也都没有坚持下来。<br>近来hexo+github pages搭建博客的方式逐渐流行起来，使自己萌生了再次写博客的想法。人生苦短，总要为自己留下点什么，而文字也是一种比较好的方式。<br>最初写博客是为了心中那个文青梦，现在希望写博客的同时，能够提升自己写作能力，思考能力，顺便分享技术，有一个输入到产出的过程。<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这几年断断续续写过不少博客，从最初的新浪博客、到wordpress个人博客，大多是写生活琐事，也都没有坚持下来。&lt;br&gt;近来hexo+github pages搭建博客的方式逐渐流行起来，使自己萌生了再次写博客的想法。人生苦短，总要为自己留下点什么，而文字也是一种比较好的方式。&lt;br&gt;最初写博客是为了心中那个文青梦，现在希望写博客的同时，能够提升自己写作能力，思考能力，顺便分享技术，有一个输入到产出的过程。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
