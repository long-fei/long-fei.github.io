<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>陈龙飞</title>
  <subtitle>Android Dev</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.chenlongfei.cn/"/>
  <updated>2017-03-15T10:25:59.000Z</updated>
  <id>http://www.chenlongfei.cn/</id>
  
  <author>
    <name>Troy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>App耗电量分析与优化</title>
    <link href="http://www.chenlongfei.cn/2017/03/15/app-battery-stats/"/>
    <id>http://www.chenlongfei.cn/2017/03/15/app-battery-stats/</id>
    <published>2017-03-15T02:57:41.000Z</published>
    <updated>2017-03-15T10:25:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>对用户而言，一个APP的耗电量直接影响着用户的使用体验。从开发者角度来说，一款优秀的应用，应该兼具一流的用户体验与可靠的产品质量。<br>手机作为一个便携的移动设备，受限于电池容量及硬件性能的限制，使得应用的性能优化变得格外重要，而耗电量优化却是常常容易被常常忽略的。本文将着重总结应用的耗电量分析工具与优化方法。<br><a id="more"></a></p>
<h3 id="影响因素"><a href="#影响因素" class="headerlink" title="影响因素"></a>影响因素</h3><p><strong>硬件模块</strong><br>如GPS模块、WIFI模块、屏幕、基带芯片等。处于待机状态时，各模块耗电量极少。一旦唤醒屏幕，各模块便开始继续工作。<br><strong>移动数据</strong><br>典型的 3G 无线电网络有三种能量状态：</p>
<ol>
<li><strong>Full power</strong>：当无线连接被激活的时候，允许设备以最大的传输速率进行操作。</li>
<li><strong>Low power</strong>：一种中间状态，对电量的消耗差不多是 Full power 状态下的50%。</li>
<li><strong>Standby</strong>：最小的能量状态，没有被激活或者需求的网络连接。<br>每次创建一个新的网络连接，无线电波就切换到 full power 状态。在上面典型的 3G 无线电波状态机情况下，无线电波会在传输数据时保持在 full power 的状态（加上一个附加的5秒拖尾时间），再之后会经过12秒的 low power 能量状态。因此对于典型的 3G 设备，每一次数据传输的会话都会导致无线电波消耗大概20秒时间来提取电能。<br>频繁的网络导致无线电波迟迟无法进入休眠状态，导致电量消耗快速增长。<br><strong>WakeLock</strong><br>在Android系统中，为了节省电量资源，系统会通过休眠，关闭硬件等操作来降低功耗。例如在锁屏时，CPU会进入睡眠状态，后台任务停止运行，网络请求被中止。很多应用为了继续工作，使用PowerManager.WakeLock保持CPU运行，从而使CPU一直处于运行状态，大大增加了耗电量。</li>
</ol>
<h3 id="分析工具"><a href="#分析工具" class="headerlink" title="分析工具"></a>分析工具</h3><p><strong>Battery Historian</strong><br>Battery Historian是Google提供的开源的电量分析工具，目前仅支持Android 5.0及以上的设备。需要注意的是Battery Historian部分服务需要科学上网才能正常使用。</p>
<p>安装步骤参见官方文档：<a href="https://github.com/google/battery-historian" target="_blank" rel="external">Battery Historian</a></p>
<p>在统计数据之前需清空历史数据并开启详细日志：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell dumpsys batterystats --reset</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell dumpsys batterystats --enable full-wake-history</div></pre></td></tr></table></figure>
<p>获取电量数据<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#Android7.0+</span></div><div class="line">adb bugreport bugreport.zip</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#Android6.0-</span></div><div class="line">adb bugreport &gt; bugreport.txt</div></pre></td></tr></table></figure>
<p>上传数据并分析<br><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2017-03-15-083622.jpg" alt=""></p>
<p>横坐标代表时间范围，纵坐标参数说明，参考<a href="http://blog.csdn.net/itfootball/article/details/44084159" target="_blank" rel="external">Android性能专项测试之battery-historian</a>。<br>由下图可知，CPU一直处于运行状态，消耗了大量电量。移动数据请求频繁，无线电波持续工作，导致电量一直被消耗。<br><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2017-03-15-091139.jpg" alt=""><br>在App Selection中选择要分析的应用，在App Stats中Device estimated power use可得知APP耗电量为8.14%。<br><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2017-03-15-091304.jpg" alt=""></p>
<h3 id="优化过程"><a href="#优化过程" class="headerlink" title="优化过程"></a>优化过程</h3><p>经过排查，最终定位在数据上报，及push心跳上报过于频繁，并做以下优化。</p>
<ul>
<li>降低网络请求频率，集中处理网络请求，通过Job Scheduler来实现调度。</li>
<li>检查WakeLock唤醒锁，避免不必要唤醒操作。</li>
<li>将数据上报等非重要性工作，在WIFI下或接入电源时执行。</li>
</ul>
<h3 id="优化成果"><a href="#优化成果" class="headerlink" title="优化成果"></a>优化成果</h3><p>可见CPU运行不再频繁，App耗电量下降至2.62%。<br><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2017-03-15-092044.jpg" alt=""></p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2017-03-15-092140.jpg" alt=""></p>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="http://hukai.me/android-performance-battery/" target="_blank" rel="external">Android性能优化之电量篇</a><br><a href="https://hujiaweibujidao.github.io/blog/2017/01/24/how-to-know-your-applications-battery-stats/" target="_blank" rel="external">How to know your application’s battery stats</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对用户而言，一个APP的耗电量直接影响着用户的使用体验。从开发者角度来说，一款优秀的应用，应该兼具一流的用户体验与可靠的产品质量。&lt;br&gt;手机作为一个便携的移动设备，受限于电池容量及硬件性能的限制，使得应用的性能优化变得格外重要，而耗电量优化却是常常容易被常常忽略的。本文将着重总结应用的耗电量分析工具与优化方法。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Bye 2016</title>
    <link href="http://www.chenlongfei.cn/2017/01/01/bye-2016/"/>
    <id>http://www.chenlongfei.cn/2017/01/01/bye-2016/</id>
    <published>2016-12-31T16:00:00.000Z</published>
    <updated>2017-02-03T15:18:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>2016悄然过去，按照惯例又到了一年里做总结的时候，这也是自己第一次做年末总结。回首2016，时间匆匆且平平淡淡，没什么特别难忘的事，也没什么特别的变化。在深圳这个地方，你仿佛感觉不到四季的变化，以为还在过夏天，悄然已过去一年。<br><a id="more"></a></p>
<h3 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h3><p>去年的这个时候和一帮同事在海上世界跨年，挥别了2015，迎来了2016，一起抢新年红包。各自默默许下新年的愿望，又相继消失在人海里。也许是狂欢过后的落寞，依稀记得地铁上还给某人打了一个电话。</p>
<p>曾经热爱的骑行运动在这一年里也逐渐荒废。年初约了两好友骑过一次车，去了一些没有去过的地方，聊了一些没有聊过的话题，喜欢这种在路上的感觉，走走停停，去探索去发现，总能让人觉得身心愉悦。本打算趁国庆长假去环一次青海湖，重温环湖岁月，和好友再三商量之后还是决定放弃，不适合的天气加上没有充分作好准备迫使我们只能推迟计划。</p>
<p>春节回了趟老家，走亲访友，不亦乐乎。众多亲戚欢聚一堂，其乐融融。约上三五好友，扯天扯地，相聚甚欢，同窗的时光仿佛是在昨天。也只有在那座城市，我才会感觉到自由、感觉到亲切，温暖与幸福。童年、青春、爱情，一一层叠起来，堆彻成回忆的高度。<br>这年的除夕是在武汉亲戚家过的，两家子人，守在一起看春晚，热闹非凡，这样的场景还是第一次。在武汉约见了一些初中同学，感慨良多。时光匆匆，物是人非，各自的生活已是千差万别，对彼此的记忆也只停留在年少之时。</p>
<p>作为一个不怎么喝酒的人，这一年里喝过的酒远大于过去的总和。第一次喝醉酒，是公司两周年的庆典活动上，很难受又很兴奋。作为一个不怎么喝酒的人，2017我将继续保持不喝酒。</p>
<p>逐渐开始意识到健康的重要些，长期缺乏运动，身体质素大不如以前。大南山拓展，超越了自己体力的极限，背着登山包，翻山越岭，徒步几十公里，累到极点，回来后休息一周才恢复。年中的时候，下定决心办了一张健身卡。坚持了半年，体能提高了不少，当然也长了一点肌肉。</p>
<p>身边的朋友在这一年一一脱单，还见证了一个朋友求婚。喜欢过的人都相继结婚，唯有祝愿。</p>
<h3 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h3><p>一年来同时间段入职的同事都相继离职，让人深感惋惜。不断加入的新同事，也增添了许多新面孔。我所在的客户端团队虽少，工作上大家都彼此默契地配合，工作之余也能一起愉快地玩耍。月复一月的迭代着版本，看似重复的工作，却每次都有不同的挑战。值得骄傲的是，在空闲之时，也做了许多提升工作效率的事。</p>
<ul>
<li>格式化的Log的日志输出，提高接口联调效率。</li>
<li>重构了网络架构，提高了稳定性和可靠性，大大简化了之前复杂的流程，降低了使用成本。</li>
<li>搭建了Jenkins持续集成，使Android的打包流程自动化，规范了各版本打包流程，提高了发版效率。</li>
<li>接入了Tinker热修复，使应用具备快速修复线上版本缺陷的能力。</li>
</ul>
<h3 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h3><p>不再盲目的追求新技术，开始关注应用的架构。努力提高代码可读性、可维护性。逐步深入去研究感兴趣的技术以及开源项目。</p>
<ul>
<li>了解了一些热修复原理，并接入到实际项目中。</li>
<li>RxJava使异步操作变得简洁，与Retrofit结合简化网络操作的复杂性，RxJava与Retrofit已是首选的网络架构。</li>
<li>为了更好的理解Gradle脚本编写，Grooxy语言是必知必会。</li>
<li>尝试使用React Native，体验多平台开发。</li>
</ul>
<h3 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h3><ul>
<li>希望去更多更远的地方走一走，看一看。</li>
<li>提高自己的软技能，写作、沟通。</li>
<li>技术上持续提高，保持进步。</li>
<li>多思考，多读书。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2016悄然过去，按照惯例又到了一年里做总结的时候，这也是自己第一次做年末总结。回首2016，时间匆匆且平平淡淡，没什么特别难忘的事，也没什么特别的变化。在深圳这个地方，你仿佛感觉不到四季的变化，以为还在过夏天，悄然已过去一年。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android App炫酷引导页</title>
    <link href="http://www.chenlongfei.cn/2016/11/27/android-guide-page/"/>
    <id>http://www.chenlongfei.cn/2016/11/27/android-guide-page/</id>
    <published>2016-11-27T13:37:29.000Z</published>
    <updated>2016-11-28T06:36:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>在我们初次使用App或升级后首次使用App会有一个引导页，通常用来介绍新版本特性。大多数引导页以图文为主，而那些配以动画或视频的引导页总是让人眼前一亮。而作为开发者的我们，在弄明白原理后，总是迫切的想要去实现。本文将从实践出发，讲解具体的实现过程，最终实现一个完整的包含视频的引导页。<br><a id="more"></a></p>
<h3 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h3><p>在Android中常用<strong>VideoView</strong>实现简单的视频播放功能，另一种方法是使用<strong>MediaPlayer</strong> + <strong>SurfaceView</strong>来实现，本质上<strong>VideoView</strong>对它俩进行了封装，使开发者不用关心其细节，降低开发难度。</p>
<p>写到这里，相信大家心里已经有了实现思路，想要实现带视频播放功能的引导页无非就是在ViewPager中每个页面添加VideoView，滑动到相应页面播放则对应的视频。</p>
<p>那么教程到此就可以结束了！！！</p>
<p>但是这么做会有一个问题，每次打开引导页播放在视频前会先黑屏一下，并且ViewPager滑动时两个页面之间会有明显的黑缝隙。作为一个有追求的开发者这显然是不能接受的。</p>
<h3 id="TextureView"><a href="#TextureView" class="headerlink" title="TextureView"></a>TextureView</h3><p>TextureView又是个什么东东的呢？<strong><em>我们知道SurfaceView为了提高工作效率，它的工作方式是创建一个置于应用窗口之后的新窗口，SurfaceView的内容不在应用窗口上，所以不能使用变换（平移、缩放、旋转等）。也难以放在ListView或者ScrollView中，不能使用UI控件的一些特性比如View.setAlpha()。</em></strong><br>作为SurfaceView的兄弟，TextureView终于在Android 4.0来救场了。<br>TextureView并没有创建新的窗口，可以像使用普通View一样执行变换操作，使用TextureView务必<strong>开启硬件加速</strong>。</p>
<h3 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h3><blockquote>
<p>科学证明使用MediaPlayer与TextureView能确保达到最佳效果。</p>
</blockquote>
<p><strong>视频文件</strong><br>视频文件来源于闲鱼App<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//将视频文件放至在assets/guide目录中</div><div class="line">├── guide</div><div class="line">│   ├── guide_four.mp4</div><div class="line">│   ├── guide_one.mp4</div><div class="line">│   ├── guide_three.mp4</div><div class="line">│   └── guide_two.mp4</div></pre></td></tr></table></figure></p>
<p><strong>GuideActivity</strong><br>MediaPlayer的setOnPreparedListener()方法可以设置一个监听器，在视频预处理完成之后产生回调，这里我们可以将视频默认设置到第一帧，从而避免黑屏。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GuideActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> ViewPager viewPager = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">private</span> List&lt;ImageView&gt; indicators = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">4</span>);</div><div class="line">    <span class="keyword">private</span> List&lt;View&gt; views = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">4</span>);</div><div class="line">    <span class="keyword">private</span> List&lt;MediaPlayer&gt; mediaPlayers = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">4</span>);</div><div class="line"></div><div class="line">    <span class="keyword">private</span> TextureView textureViewOne;</div><div class="line">    <span class="keyword">private</span> TextureView textureViewTwo;</div><div class="line">    <span class="keyword">private</span> TextureView textureViewThree;</div><div class="line">    <span class="keyword">private</span> TextureView textureViewFour;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> MediaPlayer mediaPlayerOne;</div><div class="line">    <span class="keyword">private</span> MediaPlayer mediaPlayerTwo;</div><div class="line">    <span class="keyword">private</span> MediaPlayer mediaPlayerThree;</div><div class="line">    <span class="keyword">private</span> MediaPlayer mediaPlayerFour;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.guide);</div><div class="line">        <span class="keyword">int</span> flag = WindowManager.LayoutParams.FLAG_FULLSCREEN;</div><div class="line">        Window w = getWindow();</div><div class="line">        w.setFlags(flag, flag);</div><div class="line"></div><div class="line">        initVideos();</div><div class="line">        initViews();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initVideos</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            mediaPlayerOne = createMediaPlayer(<span class="string">"guide/guide_one.mp4"</span>);</div><div class="line">            mediaPlayerTwo = createMediaPlayer(<span class="string">"guide/guide_two.mp4"</span>);</div><div class="line">            mediaPlayerThree = createMediaPlayer(<span class="string">"guide/guide_three.mp4"</span>);</div><div class="line">            mediaPlayerFour = createMediaPlayer(<span class="string">"guide/guide_four.mp4"</span>);</div><div class="line"></div><div class="line">            mediaPlayers.add(mediaPlayerOne);</div><div class="line">            mediaPlayers.add(mediaPlayerTwo);</div><div class="line">            mediaPlayers.add(mediaPlayerThree);</div><div class="line">            mediaPlayers.add(mediaPlayerFour);</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            finish();</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> MediaPlayer <span class="title">createMediaPlayer</span><span class="params">(String filePath)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        MediaPlayer mediaPlayer = <span class="keyword">new</span> MediaPlayer();</div><div class="line">        mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);</div><div class="line">        AssetFileDescriptor fileDescriptor = getAssets().openFd(filePath);</div><div class="line">        mediaPlayer.setDataSource(fileDescriptor.getFileDescriptor(),</div><div class="line">                fileDescriptor.getStartOffset(), fileDescriptor.getLength());</div><div class="line">        <span class="keyword">return</span> mediaPlayer;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">final</span> ViewPager.OnPageChangeListener changeListener = <span class="keyword">new</span> ViewPager.OnPageChangeListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageSelected</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mediaPlayers.size(); i++) &#123;</div><div class="line">                MediaPlayer mediaPlayer = mediaPlayers.get(i);</div><div class="line">                ImageView indicate = indicators.get(i);</div><div class="line">            </div><div class="line">                <span class="keyword">if</span> (i == index) &#123;</div><div class="line">                    mediaPlayer.start();</div><div class="line">                    indicate.setBackgroundResource(R.drawable.page_now);</div><div class="line">                    <span class="keyword">continue</span>;</div><div class="line">                &#125;</div><div class="line">              </div><div class="line">                <span class="keyword">if</span> (mediaPlayer.isPlaying()) &#123;</div><div class="line">                    mediaPlayer.pause();</div><div class="line">                    mediaPlayer.seekTo(<span class="number">0</span>);</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                indicate.setBackgroundResource(R.drawable.page);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageScrolled</span><span class="params">(<span class="keyword">int</span> pos, <span class="keyword">float</span> positionOffset, <span class="keyword">int</span> pix)</span> </span>&#123;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageScrollStateChanged</span><span class="params">(<span class="keyword">int</span> arg0)</span> </span>&#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> PagerAdapter adapter = <span class="keyword">new</span> PagerAdapter() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</div><div class="line">            <span class="keyword">return</span> views.size();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isViewFromObject</span><span class="params">(View view, Object object)</span> </span>&#123;</div><div class="line">            <span class="keyword">return</span> view == object;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroyItem</span><span class="params">(ViewGroup container, <span class="keyword">int</span> position, Object object)</span> </span>&#123;</div><div class="line">            container.removeView(views.get(position));</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> Object <span class="title">instantiateItem</span><span class="params">(ViewGroup container, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">            View view = views.get(position);</div><div class="line">            container.addView(view);</div><div class="line">            <span class="keyword">return</span> view;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> </span>&#123;</div><div class="line">        LayoutInflater inflater = LayoutInflater.from(<span class="keyword">this</span>);</div><div class="line">        <span class="comment">//指示器</span></div><div class="line">        ImageView p1 = (ImageView) <span class="keyword">this</span>.findViewById(R.id.p1);</div><div class="line">        ImageView p2 = (ImageView) <span class="keyword">this</span>.findViewById(R.id.p2);</div><div class="line">        ImageView p3 = (ImageView) <span class="keyword">this</span>.findViewById(R.id.p3);</div><div class="line">        ImageView p4 = (ImageView) <span class="keyword">this</span>.findViewById(R.id.p4);</div><div class="line">        indicators.add(p1);</div><div class="line">        indicators.add(p2);</div><div class="line">        indicators.add(p3);</div><div class="line">        indicators.add(p4);</div><div class="line"></div><div class="line">        View viewOne = inflater.inflate(R.layout.guide_one, <span class="keyword">null</span>);</div><div class="line">        View viewTwo = inflater.inflate(R.layout.guide_two, <span class="keyword">null</span>);</div><div class="line">        View viewThree = inflater.inflate(R.layout.guide_three, <span class="keyword">null</span>);</div><div class="line">        View viewFour = inflater.inflate(R.layout.guide_four, <span class="keyword">null</span>);</div><div class="line">        views.add(viewOne);</div><div class="line">        views.add(viewTwo);</div><div class="line">        views.add(viewThree);</div><div class="line">        views.add(viewFour);</div><div class="line"></div><div class="line">        textureViewOne = (TextureView) viewOne.findViewById(R.id.texture_view);</div><div class="line">        textureViewTwo = (TextureView) viewTwo.findViewById(R.id.texture_view);</div><div class="line">        textureViewThree = (TextureView) viewThree.findViewById(R.id.texture_view);</div><div class="line">        textureViewFour = (TextureView) viewFour.findViewById(R.id.texture_view);</div><div class="line"></div><div class="line">        textureViewOne.setSurfaceTextureListener(<span class="keyword">new</span> TextureListener(mediaPlayerOne, <span class="number">1</span>));</div><div class="line">        textureViewTwo.setSurfaceTextureListener(<span class="keyword">new</span> TextureListener(mediaPlayerTwo, <span class="number">2</span>));</div><div class="line">        textureViewThree.setSurfaceTextureListener(<span class="keyword">new</span> TextureListener(mediaPlayerThree, <span class="number">3</span>));</div><div class="line">        textureViewFour.setSurfaceTextureListener(<span class="keyword">new</span> TextureListener(mediaPlayerFour, <span class="number">4</span>));</div><div class="line"></div><div class="line">        viewPager = (ViewPager) <span class="keyword">this</span>.findViewById(R.id.view_pager);</div><div class="line">        viewPager.setAdapter(adapter);</div><div class="line">        viewPager.setOffscreenPageLimit(views.size());</div><div class="line">        viewPager.addOnPageChangeListener(changeListener);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">TextureListener</span> <span class="keyword">implements</span> <span class="title">TextureView</span>.<span class="title">SurfaceTextureListener</span> </span>&#123;</div><div class="line">        <span class="keyword">private</span> MediaPlayer mediaPlayer;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">int</span> index;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">TextureListener</span><span class="params">(MediaPlayer mediaPlayer, <span class="keyword">int</span> index)</span> </span>&#123;</div><div class="line">            <span class="keyword">this</span>.mediaPlayer = mediaPlayer;</div><div class="line">            <span class="keyword">this</span>.index = index;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSurfaceTextureAvailable</span><span class="params">(SurfaceTexture surfaceTexture, <span class="keyword">int</span> width,</span></span></div><div class="line">                <span class="keyword">int</span> height) &#123;</div><div class="line">            Surface surface = <span class="keyword">new</span> Surface(surfaceTexture);</div><div class="line">            mediaPlayer.setSurface(surface);</div><div class="line">            mediaPlayer.prepareAsync();</div><div class="line">            mediaPlayer.setOnPreparedListener(<span class="keyword">new</span> MediaPlayer.OnPreparedListener() &#123;</div><div class="line">                <span class="meta">@Override</span></div><div class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPrepared</span><span class="params">(MediaPlayer mp)</span> </span>&#123;</div><div class="line">                    <span class="comment">//第一个页面视频加载完后自动播放</span></div><div class="line">                    <span class="keyword">if</span> (index == <span class="number">1</span>) &#123;</div><div class="line">                        mp.start();</div><div class="line">                    &#125; <span class="keyword">else</span> &#123;</div><div class="line">                        <span class="comment">//默认显示第一帧，避免黑屏</span></div><div class="line">                        mp.seekTo(<span class="number">0</span>);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSurfaceTextureSizeChanged</span><span class="params">(SurfaceTexture surface, <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span> </span>&#123;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onSurfaceTextureDestroyed</span><span class="params">(SurfaceTexture surface)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> (mediaPlayer != <span class="keyword">null</span>) &#123;</div><div class="line">                mediaPlayer.stop();</div><div class="line">                mediaPlayer.release();</div><div class="line">                mediaPlayer = <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSurfaceTextureUpdated</span><span class="params">(SurfaceTexture surface)</span> </span>&#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>guide.xml</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    &gt;</div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">android.support.v4.view.ViewPager</span></span></div><div class="line">      <span class="attr">android:id</span>=<span class="string">"@+id/view_pager"</span></div><div class="line">      <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">      <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">      &gt;</div><div class="line"></div><div class="line">  <span class="tag">&lt;/<span class="name">android.support.v4.view.ViewPager</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">      <span class="attr">android:id</span>=<span class="string">"@+id/indicate_layout"</span></div><div class="line">      <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">      <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">      <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span></div><div class="line">      <span class="attr">android:layout_centerHorizontal</span>=<span class="string">"true"</span></div><div class="line">      <span class="attr">android:layout_marginBottom</span>=<span class="string">"@dimen/guide_indicate_mar_bottom"</span></div><div class="line">      <span class="attr">android:layout_marginTop</span>=<span class="string">"@dimen/guide_indicate_mar_top"</span></div><div class="line">      <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">      <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></div><div class="line">      &gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/p1"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:background</span>=<span class="string">"@drawable/page_now"</span></div><div class="line">        <span class="attr">android:contentDescription</span>=<span class="string">"@string/app_name"</span></div><div class="line">        /&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/p2"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"8dp"</span></div><div class="line">        <span class="attr">android:background</span>=<span class="string">"@drawable/page"</span></div><div class="line">        <span class="attr">android:contentDescription</span>=<span class="string">"@string/app_name"</span></div><div class="line">        /&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/p3"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"8dp"</span></div><div class="line">        <span class="attr">android:background</span>=<span class="string">"@drawable/page"</span></div><div class="line">        <span class="attr">android:contentDescription</span>=<span class="string">"@string/app_name"</span></div><div class="line">        /&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/p4"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"8dp"</span></div><div class="line">        <span class="attr">android:background</span>=<span class="string">"@drawable/page"</span></div><div class="line">        <span class="attr">android:contentDescription</span>=<span class="string">"@string/app_name"</span></div><div class="line">        /&gt;</div><div class="line">  <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><strong>guide_one.xml、guide_two.xml、guide_three.xml、guide_four.xml</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    &gt;</div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">TextureView</span></span></div><div class="line">      <span class="attr">android:id</span>=<span class="string">"@+id/texture_view"</span></div><div class="line">      <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">      <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">      /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><strong>page.xml</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:shape</span>=<span class="string">"oval"</span>&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">size</span></span></div><div class="line">      <span class="attr">android:height</span>=<span class="string">"8dp"</span></div><div class="line">      <span class="attr">android:width</span>=<span class="string">"8dp"</span>/&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">stroke</span></span></div><div class="line">      <span class="attr">android:color</span>=<span class="string">"#c9c9c9"</span></div><div class="line">      <span class="attr">android:width</span>=<span class="string">"2px"</span>/&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><strong>page_now.xml</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:shape</span>=<span class="string">"oval"</span>&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">size</span></span></div><div class="line">      <span class="attr">android:height</span>=<span class="string">"8dp"</span></div><div class="line">      <span class="attr">android:width</span>=<span class="string">"8dp"</span>/&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#ff6600"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><strong>dimens.xml</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"guide_big_font_size"</span>&gt;</span>25.7dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"guide_normal_font_size"</span>&gt;</span>17.9dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"guide_indicate_mar_top"</span>&gt;</span>22dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"guide_indicate_mar_bottom"</span>&gt;</span>50dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"guide_indicate_text_bottom"</span>&gt;</span>180dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h3><p><strong>本教程效果</strong><br><img src="http://7xl2ut.com1.z0.glb.clouddn.com/image/2016-11-27-221020.gif" alt="闲鱼"><br><strong>闲鱼App效果</strong><br><img src="http://7xl2ut.com1.z0.glb.clouddn.com/image/2016-11-28-120110.gif" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在我们初次使用App或升级后首次使用App会有一个引导页，通常用来介绍新版本特性。大多数引导页以图文为主，而那些配以动画或视频的引导页总是让人眼前一亮。而作为开发者的我们，在弄明白原理后，总是迫切的想要去实现。本文将从实践出发，讲解具体的实现过程，最终实现一个完整的包含视频的引导页。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Gradle使用指南</title>
    <link href="http://www.chenlongfei.cn/2016/10/29/gradle-user-guide/"/>
    <id>http://www.chenlongfei.cn/2016/10/29/gradle-user-guide/</id>
    <published>2016-10-29T04:13:51.000Z</published>
    <updated>2016-11-27T09:07:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>在Java的世界里Ant，Maven，Gradle为三大常用的构建利器。在Gradle诞生之前构建工具一直都是Ant，之后进化到Maven。Ant、Maven主要使用XML配置编译规则，对程序员而言最方便的当然是以编程的方式来配置规则。而Gradle就这样被历史选中了，集Anit、Maven优点于一身，同时具备脚本语言的特性，相信你在使用之后一定会拍手惊呼道“太方便，太方便”。<br><a id="more"></a></p>
<h3 id="Groovy"><a href="#Groovy" class="headerlink" title="Groovy"></a>Groovy</h3><p>Groovy是一门动态语言，同Java一样运行在JVM上，Groovy的语法与Java很相似，两者可以混合编程，而同样的任务使用相比Java所需的代码更少。Gradle选择Groovy来作为构建语言，是因为它给Java开发人员提供了迄今为止最大的透明度。   </p>
<h5 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h5><p>详细的语法介绍参见<a href="http://www.groovy-lang.org/documentation.html" target="_blank" rel="external">官方文档</a>，本文只作简单介绍。</p>
<ul>
<li>注释同java相同，分单行注释、多行注释、文档注释。</li>
<li>Groovy中变量及类默认public。</li>
<li><p>Groovy支持动态类型，使用def定义变量，当然也可省略def，语句结尾的分号也能省略。</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//定义变量</span></div><div class="line"><span class="keyword">int</span> var=<span class="number">1</span></div><div class="line"><span class="keyword">def</span> var=<span class="string">'Hello World'</span></div><div class="line"><span class="keyword">def</span> <span class="keyword">int</span> var=<span class="number">2</span></div><div class="line"><span class="comment">//定义方法，可以不声明返回值类型，最后一行代码为方法返回值</span></div><div class="line"><span class="keyword">def</span> function()&#123;</div><div class="line">  string</div><div class="line">&#125;</div><div class="line"><span class="comment">//参数类型可以不指定</span></div><div class="line"><span class="keyword">def</span> function(arg1,arg2)&#123;</div><div class="line">&#125;</div><div class="line"><span class="comment">//指定返回值类型</span></div><div class="line">String function()&#123;</div><div class="line">  <span class="keyword">return</span> <span class="string">'string'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>String字符串</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//单引号</span></div><div class="line"><span class="keyword">def</span> value=<span class="string">'a single quoted string'</span></div><div class="line"><span class="keyword">def</span> name=<span class="string">'Troy'</span></div><div class="line"><span class="comment">//双引号会对$进行求值 </span></div><div class="line"><span class="keyword">def</span> greeting=<span class="string">"Hello $&#123;name&#125;"</span><span class="comment">//输出Hello Troy</span></div><div class="line"><span class="comment">//三引号,表示字符串换行</span></div><div class="line"><span class="keyword">def</span> multiline=<span class="string">'''</span></div><div class="line">line one</div><div class="line">line two</div><div class="line">line three</div><div class="line">'''</div></pre></td></tr></table></figure>
</li>
<li><p>集合</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//Lists</span></div><div class="line"><span class="keyword">def</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</div><div class="line"><span class="comment">//List中可以存放任意类型</span></div><div class="line"><span class="keyword">def</span> heterogeneous = [<span class="number">1</span>, <span class="string">"a"</span>, <span class="literal">true</span>] </div><div class="line"><span class="comment">//添加元素</span></div><div class="line">numbers.add(<span class="number">4</span>)</div><div class="line">numbers &lt;&lt; <span class="number">5</span></div><div class="line">numbers[<span class="number">1</span>] = <span class="number">3</span></div><div class="line"><span class="comment">//输出</span></div><div class="line">println numbers[<span class="number">1</span>]</div><div class="line"></div><div class="line"><span class="comment">//Maps</span></div><div class="line"><span class="comment">//map使用key value方式声明</span></div><div class="line"><span class="keyword">def</span> colors = [<span class="string">red:</span> <span class="string">'#FF0000'</span>, <span class="string">green:</span> <span class="string">'#00FF00'</span>, <span class="string">blue:</span> <span class="string">'#0000FF'</span>]</div><div class="line"><span class="comment">//添加元素</span></div><div class="line">colors.put(<span class="string">yellow:</span><span class="string">'#FFFF00'</span>)</div><div class="line">colors &lt;&lt; [<span class="string">yellow:</span><span class="string">'#FFFF00'</span>]</div><div class="line"><span class="comment">//输出red颜色</span></div><div class="line">println colors[<span class="string">'red'</span>]</div><div class="line"><span class="comment">//或者</span></div><div class="line">println colors.green</div></pre></td></tr></table></figure>
</li>
<li><p>闭包，闭包是一段可以执行的代码</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//闭包语法格式</span></div><div class="line">&#123; [closureParameters -&gt; ] statements &#125;</div><div class="line"><span class="comment">//使用花括号把代码括起来</span></div><div class="line">&#123; item++ &#125;</div><div class="line"><span class="comment">//-&gt;前面为参数默认为it,相当于java中this，-&gt;后面为代码</span></div><div class="line">&#123; -&gt; item++ &#125;</div><div class="line">&#123; it -&gt; println it &#125;</div><div class="line">&#123; String x, <span class="keyword">int</span> y -&gt;                                </div><div class="line">  println <span class="string">"hey $&#123;x&#125; the value is $&#123;y&#125;"</span></div><div class="line">&#125;</div><div class="line"><span class="comment">//使用闭包作为数据类型</span></div><div class="line"><span class="keyword">def</span> listener = &#123; e -&gt; println <span class="string">"Clicked on $e.source"</span> &#125;</div><div class="line"><span class="comment">//调用闭包</span></div><div class="line">listener.call(<span class="string">'call'</span>)</div><div class="line"><span class="comment">//或者</span></div><div class="line">listener(<span class="string">'call'</span>)</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Gradle"><a href="#Gradle" class="headerlink" title="Gradle"></a>Gradle</h3><p>Gradle可以说是一个框架，定义了流程和规则，而且具体的编译工作则由插件来完成。比如常见的Java插件、Android插件。每个插件中又定义了各种task。</p>
<h5 id="Gradle基本概念"><a href="#Gradle基本概念" class="headerlink" title="Gradle基本概念"></a>Gradle基本概念</h5><p><strong>projects (项目) </strong></p>
<p>我们的Android Application、Android Library、Java Library都是单个的Project，可以说每个待编译的工程都是一个Project。<br>以某项目为例，该项目总共有几个Project呢？答案是3个！<br>分别是<strong>app</strong>、<strong>scrollanimationlibrary</strong>、<strong>social_sdk_library_project</strong>。从目录结构我们可以看出每个Project对应一个build.gradle文件，该文件定义了Project的编译规则。根目录下build.gradle用于配置子Project，settings.gradle文件声明包括多少个子Project，整体上这就是一个MultiProject。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">├── app</div><div class="line">│   ├── build.gradle</div><div class="line">│   ├── libs</div><div class="line">│   ├── proguard-rules.pro</div><div class="line">│   ├── settings.gradle</div><div class="line">│   └── src</div><div class="line">├── build.gradle</div><div class="line">├── gradle</div><div class="line">│   └── wrapper</div><div class="line">├── gradle.properties</div><div class="line">├── gradlew</div><div class="line">├── gradlew.bat</div><div class="line">├── scrollanimationlibrary</div><div class="line">│   ├── build.gradle</div><div class="line">│   └── src</div><div class="line">├── settings.gradle</div><div class="line">└── social_sdk_library_project</div><div class="line">    ├── AndroidManifest.xml</div><div class="line">    ├── build.gradle</div><div class="line">    ├── gradle</div><div class="line">    ├── libs</div><div class="line">    ├── proguard-project.txt</div><div class="line">    ├── project.properties</div><div class="line">    └── res</div></pre></td></tr></table></figure></p>
<p>使用<code>projects</code>命令查看project<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">------------------------------------------------------------</div><div class="line">Root project</div><div class="line">------------------------------------------------------------</div><div class="line"></div><div class="line">Root project &apos;Coding-Android&apos;</div><div class="line">+--- Project &apos;:app&apos;</div><div class="line">+--- Project &apos;:scrollanimationlibrary&apos;</div><div class="line">\--- Project &apos;:social_sdk_library_project&apos;</div></pre></td></tr></table></figure></p>
<p><strong>task (任务）</strong></p>
<p>一个task代表更细化的构建，可能是编译一些 classes, 创建一个 JAR, 生成 javadoc, 或者生成某个目录的压缩文件。<br>查看Project包含的任务可以使用<code>task</code>命令，查看具体某个Project的任务使用<code>project-name:task</code>命令，如<code>app:task</code>，执行某个task使用<code>task-name</code>，如<code>assemble</code>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">Parallel execution with configuration on demand is an incubating feature.</div><div class="line">Incremental java compilation is an incubating feature.</div><div class="line">:app:tasks</div><div class="line"></div><div class="line">------------------------------------------------------------</div><div class="line">All tasks runnable from project :app</div><div class="line">------------------------------------------------------------</div><div class="line"></div><div class="line">Android tasks</div><div class="line">-------------</div><div class="line">androidDependencies - Displays the Android dependencies of the project.</div><div class="line">signingReport - Displays the signing info for each variant.</div><div class="line">sourceSets - Prints out all the source sets defined in this project.</div><div class="line"></div><div class="line">Build tasks</div><div class="line">-----------</div><div class="line">assemble - Assembles all variants of all applications and secondary packages.</div><div class="line">assembleAndroidTest - Assembles all the Test applications.</div><div class="line">assembleDebug - Assembles all Debug builds.</div><div class="line">assembleRelease - Assembles all Release builds.</div><div class="line">build - Assembles and tests this project.</div><div class="line">buildDependents - Assembles and tests this project and all projects that depend on it.</div><div class="line">buildNeeded - Assembles and tests this project and all projects it depends on.</div><div class="line">clean - Deletes the build directory.</div><div class="line">compileDebugAndroidTestSources</div><div class="line">compileDebugSources</div><div class="line">compileDebugUnitTestSources</div><div class="line">compileReleaseSources</div><div class="line">compileReleaseUnitTestSources</div><div class="line">mockableAndroidJar - Creates a version of android.jar that&apos;s suitable for unit tests.</div><div class="line">..............</div></pre></td></tr></table></figure>
<p>创建任务<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//普通写法</span></div><div class="line"><span class="keyword">task</span> hello &#123;</div><div class="line">  <span class="keyword">doLast</span>&#123;</div><div class="line">    <span class="comment">//运行阶段执行</span></div><div class="line">    <span class="keyword">println</span> <span class="string">'Hello world!'</span></div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//更简洁的写法</span></div><div class="line"><span class="keyword">task</span> hello &lt;&lt;&#123;</div><div class="line">  <span class="comment">//运行阶段执行</span></div><div class="line">  <span class="keyword">println</span> <span class="string">'Hello world!'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//另一个种写法</span></div><div class="line"><span class="keyword">task</span> hello &#123;</div><div class="line"><span class="comment">//配置阶段执行</span></div><div class="line">  <span class="keyword">println</span> <span class="string">'Hello world!'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h5 id="Gradle生命周期"><a href="#Gradle生命周期" class="headerlink" title="Gradle生命周期"></a>Gradle生命周期</h5><ul>
<li>初始化阶段，读取settings.gradle，决定了本次构建过程包含的子Project。</li>
<li>配置阶段，解析子Project的中build.gradle，创建所需的task。</li>
<li>运行阶段，执行相关task。</li>
</ul>
<h5 id="Gradle配置讲解"><a href="#Gradle配置讲解" class="headerlink" title="Gradle配置讲解"></a>Gradle配置讲解</h5><p>从API的角度来理解，Gradle有三种对象，每种对象对应不同的脚本文件。</p>
<ul>
<li>Gradle对象，对应着Gradle。如我们执行的某个命令<code>./gradlew task</code>。</li>
<li>Project对象，对应build.gradle。</li>
<li>Settings对象，对应settings.gradle。</li>
</ul>
<p><strong>settings.gradle</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//指定包含的子project</span></div><div class="line">include <span class="string">':app'</span>, <span class="string">':social_sdk_library_project'</span>, <span class="string">':scrollanimationlibrary'</span></div></pre></td></tr></table></figure></p>
<p><strong>MultiProject build.gradle</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//全局配置</span></div><div class="line">buildscript &#123; <span class="comment">//Script Block</span></div><div class="line">    repositories &#123; <span class="comment">//Script Block</span></div><div class="line">        <span class="comment">//依赖的仓库</span></div><div class="line">        jcenter()</div><div class="line">    &#125;</div><div class="line">    dependencies &#123; <span class="comment">//Script Block</span></div><div class="line">        <span class="comment">//依赖的插件对应的class path</span></div><div class="line">        classpath <span class="string">'com.android.tools.build:gradle:2.2.2'</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//配置所有子project</span></div><div class="line">allprojects &#123;</div><div class="line">    repositories &#123;</div><div class="line">        jcenter()</div><div class="line">        <span class="comment">//私有库地址</span></div><div class="line">        maven &#123; url <span class="string">"http://172.16.1.19:8081/repository/maven-releases/"</span> &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>Project build.gradle</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//Android 插件</span></div><div class="line">apply <span class="string">plugin:</span> <span class="string">'com.android.application'</span></div><div class="line"><span class="comment">//Android Plugin DSL Reference</span></div><div class="line"><span class="comment">//http://google.github.io/android-gradle-dsl/current/</span></div><div class="line">android &#123;</div><div class="line">    compileSdkVersion <span class="number">21</span></div><div class="line">    buildToolsVersion <span class="string">"23.0.2"</span></div><div class="line"></div><div class="line">    defaultConfig &#123;</div><div class="line">        applicationId <span class="string">"net.coding.program"</span></div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    buildTypes &#123;</div><div class="line">        release &#123;</div><div class="line">            minifyEnabled <span class="literal">false</span></div><div class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//依赖相关</span></div><div class="line">dependencies &#123;</div><div class="line">    compile fileTree(<span class="string">dir:</span> <span class="string">'libs'</span>, <span class="string">include:</span> [<span class="string">'*.jar'</span>])</div><div class="line">    compile <span class="string">'com.android.support:support-v4:21.0.+'</span></div><div class="line">    compile <span class="string">'com.android.support:appcompat-v7:21.0.+'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>指定.so库</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">android&#123;</div><div class="line">  sourceSets &#123;</div><div class="line">        main &#123;</div><div class="line">            jniLibs.srcDirs = [&apos;libs&apos;]</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>配置apk签名</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">android&#123;</div><div class="line">  signingConfigs &#123;</div><div class="line">        debug &#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        release &#123;</div><div class="line">            storeFile file(&quot;../demo.keystore&quot;)</div><div class="line">            storePassword &quot;123456&quot;</div><div class="line">            keyAlias &quot;demo&quot;</div><div class="line">            keyPassword &quot;123456&quot;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>构建不同类型的版本</strong><br>通过添加<code>applicationIdSuffix &quot;.debug&quot;</code>修改包名，可以使内测版与正式版同时安装在手机上。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line">    buildTypes &#123;</div><div class="line">        debug &#123;</div><div class="line">            minifyEnabled false</div><div class="line">            zipAlignEnabled false</div><div class="line">            shrinkResources false</div><div class="line">            signingConfig signingConfigs.debug</div><div class="line">            //修改包名，添加.debug后缀</div><div class="line">            applicationIdSuffix &quot;.debug&quot;</div><div class="line">            debuggable true</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        release &#123;</div><div class="line">            minifyEnabled true</div><div class="line">            zipAlignEnabled true</div><div class="line">            shrinkResources false</div><div class="line">            debuggable false</div><div class="line">            signingConfig signingConfigs.release</div><div class="line">            proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>多渠道打包</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//在AndroidManifest.xml里配置PlaceHolder</span></div><div class="line">&lt;meta-data</div><div class="line"><span class="symbol">    android:</span>name=<span class="string">"UMENG_CHANNEL"</span></div><div class="line"><span class="symbol">    android:</span>value=<span class="string">"channel_value"</span> /&gt;</div><div class="line">    </div><div class="line"><span class="comment">// 多渠道打包配置</span></div><div class="line">  productFlavors &#123;</div><div class="line">      yingyongbao &#123;</div><div class="line">          manifestPlaceholders = [<span class="string">channel_value:</span> <span class="string">"yingyongbao"</span>]</div><div class="line">      &#125;</div><div class="line">      <span class="string">"360"</span> &#123;</div><div class="line">          manifestPlaceholders = [<span class="string">channel_value:</span> <span class="string">"360"</span>]</div><div class="line">      &#125;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line"><span class="comment">//打包命令</span></div><div class="line">.<span class="regexp">/gradlew assembleYingyongbao /</span>/应用包渠道</div><div class="line">.<span class="regexp">/gradlew assembleRelease /</span>/全部渠道</div></pre></td></tr></table></figure></p>
<p><strong>引用其它gradle配置</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apply <span class="string">from:</span> <span class="string">'../tinker-patch.gradle'</span></div></pre></td></tr></table></figure></p>
<p><strong>扩展属性</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//root project build.gradle配置ext属性</span></div><div class="line">ext &#123;</div><div class="line">    compileSdkVersion = <span class="number">21</span></div><div class="line">    buildToolsVersion = <span class="string">"23.0.2"</span></div><div class="line">    minSdkVersion = <span class="number">21</span></div><div class="line">    targetSdkVersion = <span class="number">21</span></div><div class="line">    versionCode = <span class="number">100</span></div><div class="line">    versionName = <span class="string">"1.0.0"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//子project build.gradle使用ext属性</span></div><div class="line">android &#123;</div><div class="line">    compileSdkVersion rootProject.ext.compileSdkVersion</div><div class="line">    buildToolsVersion rootProject.ext.buildToolsVersion</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>BuildConfig</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//gradle 中定义BuildConfig字段</span></div><div class="line">android &#123;</div><div class="line">    defaultConfig &#123;</div><div class="line">      buildConfigField(<span class="string">"String"</span>, <span class="string">"PATCH_VERSION"</span>, <span class="string">"\"1\""</span>)</div><div class="line">      buildConfigField(<span class="string">"boolean"</span>, <span class="string">"DEBUG"</span>, <span class="string">"true"</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//在程序中获取</span></div><div class="line">String patchVersion=BuildConfig.PATCH_VERSION;</div><div class="line"><span class="keyword">boolean</span> debug=BuildConfig.DEBUG;</div></pre></td></tr></table></figure></p>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li><a href="http://blog.csdn.net/innost/article/details/48228651" target="_blank" rel="external">深入理解Android之Gradle</a></li>
<li><a href="https://docs.gradle.org/current/userguide/userguide.html" target="_blank" rel="external">Gradle User Guide</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在Java的世界里Ant，Maven，Gradle为三大常用的构建利器。在Gradle诞生之前构建工具一直都是Ant，之后进化到Maven。Ant、Maven主要使用XML配置编译规则，对程序员而言最方便的当然是以编程的方式来配置规则。而Gradle就这样被历史选中了，集Anit、Maven优点于一身，同时具备脚本语言的特性，相信你在使用之后一定会拍手惊呼道“太方便，太方便”。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android Wear表盘开发</title>
    <link href="http://www.chenlongfei.cn/2016/10/22/watch-faces/"/>
    <id>http://www.chenlongfei.cn/2016/10/22/watch-faces/</id>
    <published>2016-10-22T12:27:37.000Z</published>
    <updated>2016-10-27T11:08:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Android Wear是Android操作系统的一个分支版本，专为智能手表等可穿戴式电脑设备所设计，由Google主导开发。</p>
</blockquote>
<h4 id="瞎扯扯"><a href="#瞎扯扯" class="headerlink" title="瞎扯扯"></a>瞎扯扯</h4><p>我们身处一个最好的时代，也是最坏的时代，智能硬件的普及，极大改善了人们的生活体验，以前只有在科幻电影中才可能出现的场景，也逐渐变为现实进入人类的生活。<br>在MOTO 360刚推出之时，刷新了我对手表的认识，Android Wear使得手表有了更多的可实现的功能，使得手表成为手机功能的延伸，某些功能的操作甚至不再需要手机，比如消息的阅读与回复，查看天气，导航、打车等等。</p>
<a id="more"></a>
<h4 id="开发前准备"><a href="#开发前准备" class="headerlink" title="开发前准备"></a>开发前准备</h4><ul>
<li>Android Studio</li>
<li>Android Wear手表或Android Wear模拟器</li>
</ul>
<h4 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h4><p>Android Wear项目同时包含mobile、wear两部分，这里同时需要勾选Phone and Tablet、Wear，Minimum SDK这里都选API21。</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-10-15-22%3A44%3A23.jpg" alt=""></p>
<p>wear部分默认选Add No Activity</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-10-15-23%3A04%3A19.jpg" alt=""></p>
<p>由于我的Android Wear手表为圆形，这里就以圆形表盘为例</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-10-15-22%3A53%3A36.jpg" alt=""></p>
<h4 id="权限声明"><a href="#权限声明" class="headerlink" title="权限声明"></a>权限声明</h4><p>表盘需要<code>WAKE_LOCK</code>权限，在<strong>mobile</strong>和<strong>wear Module</strong>的manifest文件中声明权限。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">manifest</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span></span></div><div class="line">        <span class="attr">android:name</span>=<span class="string">"android.permission.WAKE_LOCK"</span> /&gt;</div><div class="line">    ...</div><div class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="继承CanvasWatchFaceService类并实现相关方法"><a href="#继承CanvasWatchFaceService类并实现相关方法" class="headerlink" title="继承CanvasWatchFaceService类并实现相关方法"></a>继承CanvasWatchFaceService类并实现相关方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWatchFaceService</span> <span class="keyword">extends</span> <span class="title">CanvasWatchFaceService</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> CanvasWatchFaceService.<span class="function">Engine <span class="title">onCreateEngine</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Engine();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Engine</span> <span class="keyword">extends</span> <span class="title">CanvasWatchFaceService</span>.<span class="title">Engine</span> </span>&#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(SurfaceHolder holder)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>.onCreate(holder);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPropertiesChanged</span><span class="params">(Bundle properties)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>.onPropertiesChanged(properties);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTimeTick</span><span class="params">()</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>.onTimeTick();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAmbientModeChanged</span><span class="params">(<span class="keyword">boolean</span> inAmbientMode)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>.onAmbientModeChanged(inAmbientMode);</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        <span class="comment">//绘制表盘</span></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas, Rect bounds)</span> </span>&#123;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onVisibilityChanged</span><span class="params">(<span class="keyword">boolean</span> visible)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>.onVisibilityChanged(visible);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="注册service"><a href="#注册service" class="headerlink" title="注册service"></a>注册service</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">service</span></span></div><div class="line">  <span class="attr">android:name</span>=<span class="string">".MyWatchFaceService"</span></div><div class="line">  <span class="attr">android:label</span>=<span class="string">"@string/my_watch_faces"</span></div><div class="line">  <span class="attr">android:permission</span>=<span class="string">"android.permission.BIND_WALLPAPER"</span>&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">meta-data</span></span></div><div class="line">      <span class="attr">android:name</span>=<span class="string">"android.service.wallpaper"</span></div><div class="line">      <span class="attr">android:resource</span>=<span class="string">"@xml/watch_face"</span> /&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">meta-data</span></span></div><div class="line">      <span class="attr">android:name</span>=<span class="string">"com.google.android.wearable.watchface.preview"</span></div><div class="line">      <span class="attr">android:resource</span>=<span class="string">"@drawable/preview_smartisan"</span> /&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">meta-data</span></span></div><div class="line">      <span class="attr">android:name</span>=<span class="string">"com.google.android.clockwork.home.preview_circular"</span></div><div class="line">      <span class="attr">android:resource</span>=<span class="string">"@drawable/preview_smartisan"</span> /&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">meta-data</span></span></div><div class="line">      <span class="attr">android:name</span>=<span class="string">"com.google.android.wearable.watchface.companionConfigurationAction"</span></div><div class="line">      <span class="attr">android:value</span>=<span class="string">"com.example.android.wearable.watchface.CONFIG_ANALOG"</span> /&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.service.wallpaper.WallpaperService"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"com.google.android.wearable.watchface.category.WATCH_FACE"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="实战-模仿锤子时钟"><a href="#实战-模仿锤子时钟" class="headerlink" title="实战-模仿锤子时钟"></a>实战-模仿锤子时钟</h4><p>详细代码见<a href="https://github.com/long-fei/smartisan_watchface" target="_blank" rel="external">smartisan_watchface</a></p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-10-22-1441606670894.jpg" alt=""></p>
<h4 id="调试表盘"><a href="#调试表盘" class="headerlink" title="调试表盘"></a>调试表盘</h4><ul>
<li>使用<code>assembleDebug</code>命令生成debug包</li>
<li>用<code>adb connect</code>命令连接手表进行调试</li>
<li>使用<code>adb instll</code>命令将表盘安装至手表</li>
</ul>
<h4 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h4><ul>
<li>使用<code>assembleRelease</code>命令生成release包</li>
<li>使用<code>adb instll</code>命令将表盘安装至手表</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Android Wear是Android操作系统的一个分支版本，专为智能手表等可穿戴式电脑设备所设计，由Google主导开发。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;瞎扯扯&quot;&gt;&lt;a href=&quot;#瞎扯扯&quot; class=&quot;headerlink&quot; title=&quot;瞎扯扯&quot;&gt;&lt;/a&gt;瞎扯扯&lt;/h4&gt;&lt;p&gt;我们身处一个最好的时代，也是最坏的时代，智能硬件的普及，极大改善了人们的生活体验，以前只有在科幻电影中才可能出现的场景，也逐渐变为现实进入人类的生活。&lt;br&gt;在MOTO 360刚推出之时，刷新了我对手表的认识，Android Wear使得手表有了更多的可实现的功能，使得手表成为手机功能的延伸，某些功能的操作甚至不再需要手机，比如消息的阅读与回复，查看天气，导航、打车等等。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Maven私有仓库搭建</title>
    <link href="http://www.chenlongfei.cn/2016/08/06/maven-private-repository/"/>
    <id>http://www.chenlongfei.cn/2016/08/06/maven-private-repository/</id>
    <published>2016-08-06T04:41:51.000Z</published>
    <updated>2016-08-12T10:27:17.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>在Android开发的世界中，依赖管理是每个开发人员不得不面对的问题，无论是外部的开源类库依赖，还是项目内部的模块间的依赖，都需要有效的管理。在Android中不仅可以依赖<code>module</code>、<code>so</code>、<code>jar</code>还可以依赖<code>aar</code>。既可引用远程仓库<code>jcenter()</code>、<code>mavenCentral()</code>、也可以引用私有仓库、本地仓库。使用Maven可以有效地解决依赖管理。<br><a id="more"></a></p>
<h4 id="Maven包"><a href="#Maven包" class="headerlink" title="Maven包"></a>Maven包</h4><ul>
<li><p>使用方式   </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">  compile &apos;cn.sharesdk.onekeyshare:onekeyshare:1.0.0&apos;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>包结构</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-08-12_16:22:28.jpg" alt=""></p>
</li>
<li><p>POM文件，包含maven包的相关信息</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.sharesdk.onekeyshare<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>onekeyshare<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>aar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Onekeyshare Aar Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">licenses</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">license</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>The Apache Software License, Version 2.0<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.apache.org/licenses/LICENSE-2.0.txt<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">distribution</span>&gt;</span>repo<span class="tag">&lt;/<span class="name">distribution</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">license</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">developers</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">developer</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>troy<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>troy<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">developer</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">developers</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="Maven-仓库"><a href="#Maven-仓库" class="headerlink" title="Maven 仓库"></a>Maven 仓库</h4><p>Maven仓库用于存放Maven包，可以是本地的，远程的、私有的、公开的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">repositories &#123;</div><div class="line">        jcenter()</div><div class="line">        maven &#123; url &quot;https://jitpack.io&quot; &#125;</div><div class="line">        //私有maven仓库</div><div class="line">        maven &#123; url &quot;http://172.16.1.19:8081/repository/maven-releases/&quot; &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<h4 id="使用Nexus搭建私有仓库"><a href="#使用Nexus搭建私有仓库" class="headerlink" title="使用Nexus搭建私有仓库"></a>使用Nexus搭建私有仓库</h4><ul>
<li><p>下载<a href="http://www.sonatype.com/download-oss-sonatype" target="_blank" rel="external">nexus</a>，选择<code>nexus-3.0.1-01-mac.tgz</code></p>
</li>
<li><p>解压文件，进入<code>nexus-3.0.1-01/bin</code>目录，输入<code>./nexus start</code>运行服务，nexus默认监听端口8081。</p>
</li>
<li><p>浏览器中访问<code>http://your ip:8081</code></p>
</li>
<li><p>nexus管理员主界面，默认帐号<code>admin</code>，密码<code>admin123</code></p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-08-12_16:45:57.jpg" alt=""></p>
</li>
<li><p>仓库类型<br>hosted，本地仓库，通常我们会部署自己的构件到这一类型的仓库。比如公司的第二方库。<br>proxy，代理仓库，它们被用来代理远程的公共仓库，如maven中央仓库。<br>group，仓库组，用来合并多个hosted/proxy仓库，当你的项目希望在多个repository使用资源时就不需要多次引用了，只需要引用一个group即可。</p>
</li>
</ul>
<h4 id="发布包到私有仓库"><a href="#发布包到私有仓库" class="headerlink" title="发布包到私有仓库"></a>发布包到私有仓库</h4><ul>
<li><p>使用方法参考<a href="https://github.com/chrisbanes/gradle-mvn-push" target="_blank" rel="external">chrisbanes/gradle-mvn-push </a>插件</p>
</li>
<li><p>在项目根目录新建<code>gradle.properties</code>文件</p>
</li>
<li><p>使用如下配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"># 项目名称</div><div class="line">PROJ_NAME=onekeyshare</div><div class="line">PROJ_ARTIFACTID=onekeyshare</div><div class="line">PROJ_POM_NAME=Onekeyshare Aar Repository</div><div class="line">POM_PACKAGING=aar</div><div class="line"></div><div class="line"># the following can move to ~/.gradle/gradle.properties</div><div class="line">NEXUS_USERNAME=admin</div><div class="line">NEXUS_PASSWORD=admin123</div><div class="line">RELEASE_REPOSITORY_URL=http://172.16.1.19:8081/repository/maven-releases/</div><div class="line">SNAPSHOT_REPOSITORY_URL=http://172.16.1.19:8081/repository/maven-snapshots/</div><div class="line"></div><div class="line"># 包信息</div><div class="line">PROJ_GROUP=cn.sharesdk.onekeyshare</div><div class="line">PROJ_VERSION=1.0.0</div><div class="line"></div><div class="line"># 项目的描述</div><div class="line">#PROJ_WEBSITEURL=</div><div class="line">#PROJ_ISSUETRACKERURL=</div><div class="line">#PROJ_VCSURL=</div><div class="line">#PROJ_DESCRIPTION=Simple and effective bug &amp; crash reporting tool for Android apps</div><div class="line"></div><div class="line"># Licence信息</div><div class="line">PROJ_LICENCE_NAME=The Apache Software License, Version 2.0</div><div class="line">PROJ_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt</div><div class="line">PROJ_LICENCE_DEST=repo</div><div class="line"></div><div class="line"># Developer 信息</div><div class="line">DEVELOPER_ID=troy</div><div class="line">DEVELOPER_NAME=troy</div><div class="line">DEVELOPER_EMAIL=chenlongfeiceo@gmail.com</div></pre></td></tr></table></figure>
</li>
<li><p>根目录下新建<code>gradle-mvn-push.gradle</code>文件</p>
</li>
<li><p>使用如下配置</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line">apply <span class="string">plugin:</span> <span class="string">'maven'</span></div><div class="line">apply <span class="string">plugin:</span> <span class="string">'signing'</span></div><div class="line"></div><div class="line"><span class="keyword">def</span> isReleaseBuild() &#123;</div><div class="line">  <span class="keyword">return</span> PROJ_VERSION.contains(<span class="string">"SNAPSHOT"</span>) == <span class="literal">false</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">def</span> getReleaseRepositoryUrl() &#123;</div><div class="line">  <span class="keyword">return</span> hasProperty(<span class="string">'RELEASE_REPOSITORY_URL'</span>) ? RELEASE_REPOSITORY_URL</div><div class="line">          : <span class="string">"https://oss.sonatype.org/service/local/staging/deploy/maven2/"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">def</span> getSnapshotRepositoryUrl() &#123;</div><div class="line">  <span class="keyword">return</span> hasProperty(<span class="string">'SNAPSHOT_REPOSITORY_URL'</span>) ? SNAPSHOT_REPOSITORY_URL</div><div class="line">          : <span class="string">"https://oss.sonatype.org/content/repositories/snapshots/"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">def</span> getRepositoryUsername() &#123;</div><div class="line">  <span class="keyword">return</span> hasProperty(<span class="string">'NEXUS_USERNAME'</span>) ? NEXUS_USERNAME</div><div class="line">          : <span class="string">""</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">def</span> getRepositoryPassword() &#123;</div><div class="line">  <span class="keyword">return</span> hasProperty(<span class="string">'NEXUS_PASSWORD'</span>) ? NEXUS_PASSWORD</div><div class="line">          : <span class="string">""</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">afterEvaluate &#123; project -&gt;</div><div class="line">  uploadArchives &#123;</div><div class="line">      repositories &#123;</div><div class="line">          mavenDeployer &#123;</div><div class="line">              beforeDeployment &#123; MavenDeployment deployment -&gt; signing.signPom(deployment) &#125;</div><div class="line"></div><div class="line">              pom.groupId = PROJ_GROUP</div><div class="line">              pom.artifactId = PROJ_ARTIFACTID</div><div class="line">              pom.version = PROJ_VERSION</div><div class="line"></div><div class="line">              repository(<span class="string">url:</span> getReleaseRepositoryUrl()) &#123;</div><div class="line">                  authentication(<span class="string">userName:</span> getRepositoryUsername(), <span class="string">password:</span> getRepositoryPassword())</div><div class="line">              &#125;</div><div class="line">              snapshotRepository(<span class="string">url:</span> getSnapshotRepositoryUrl()) &#123;</div><div class="line">                  authentication(<span class="string">userName:</span> getRepositoryUsername(), <span class="string">password:</span> getRepositoryPassword())</div><div class="line">              &#125;</div><div class="line"></div><div class="line">              pom.project &#123;</div><div class="line">                  name PROJ_POM_NAME</div><div class="line">                  packaging POM_PACKAGING</div><div class="line"><span class="comment">//                    description PROJ_DESCRIPTION</span></div><div class="line"><span class="comment">//                    url PROJ_WEBSITEURL</span></div><div class="line"></div><div class="line">                  scm &#123;</div><div class="line"><span class="comment">//                        url PROJ_VCSURL</span></div><div class="line">                      connection DEVELOPER_EMAIL</div><div class="line">                      developerConnection DEVELOPER_EMAIL</div><div class="line">                  &#125;</div><div class="line"></div><div class="line">                  licenses &#123;</div><div class="line">                      license &#123;</div><div class="line">                          name PROJ_LICENCE_NAME</div><div class="line">                          url PROJ_LICENCE_URL</div><div class="line">                          distribution PROJ_LICENCE_DEST</div><div class="line">                      &#125;</div><div class="line">                  &#125;</div><div class="line"></div><div class="line">                  developers &#123;</div><div class="line">                      developer &#123;</div><div class="line">                          id DEVELOPER_ID</div><div class="line">                          name DEVELOPER_NAME</div><div class="line">                      &#125;</div><div class="line">                  &#125;</div><div class="line">              &#125;</div><div class="line">          &#125;</div><div class="line">      &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  signing &#123;</div><div class="line">      required &#123; isReleaseBuild() &amp;&amp; gradle.taskGraph.hasTask(<span class="string">"uploadArchives"</span>) &#125;</div><div class="line">      sign configurations.archives</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  task androidJavadocs(<span class="string">type:</span> Javadoc) &#123;</div><div class="line">      source = android.sourceSets.main.java.srcDirs</div><div class="line">      classpath += project.files(android.getBootClasspath().join(File.pathSeparator))</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  task androidJavadocsJar(<span class="string">type:</span> Jar, <span class="string">dependsOn:</span> androidJavadocs) &#123;</div><div class="line">      classifier = <span class="string">'javadoc'</span></div><div class="line">      from androidJavadocs.destinationDir</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  task androidSourcesJar(<span class="string">type:</span> Jar) &#123;</div><div class="line">      classifier = <span class="string">'sources'</span></div><div class="line">      from android.sourceSets.main.java.sourceFiles</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  artifacts &#123;</div><div class="line">      archives androidSourcesJar</div><div class="line">      archives androidJavadocsJar</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>在<code>build.gradle</code>中使用插件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apply from: &apos;../gradle-mvn-push.gradle&apos;</div></pre></td></tr></table></figure>
</li>
<li><p>执行gradle task进行上传操作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ./gradlew clean build uploadArchives</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="查看已上传的maven包"><a href="#查看已上传的maven包" class="headerlink" title="查看已上传的maven包"></a>查看已上传的maven包</h4><p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-08-12_17:29:15.jpg" alt=""></p>
<h4 id="使用maven包"><a href="#使用maven包" class="headerlink" title="使用maven包"></a>使用maven包</h4><ul>
<li><p>声明私有仓库地址</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">maven &#123; url &quot;http://172.16.1.19:8081/repository/maven-releases/&quot; &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>使用maven包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> dependencies &#123;</div><div class="line">  compile &apos;cn.sharesdk.onekeyshare:onekeyshare:1.0.0&apos;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;在Android开发的世界中，依赖管理是每个开发人员不得不面对的问题，无论是外部的开源类库依赖，还是项目内部的模块间的依赖，都需要有效的管理。在Android中不仅可以依赖&lt;code&gt;module&lt;/code&gt;、&lt;code&gt;so&lt;/code&gt;、&lt;code&gt;jar&lt;/code&gt;还可以依赖&lt;code&gt;aar&lt;/code&gt;。既可引用远程仓库&lt;code&gt;jcenter()&lt;/code&gt;、&lt;code&gt;mavenCentral()&lt;/code&gt;、也可以引用私有仓库、本地仓库。使用Maven可以有效地解决依赖管理。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>我的利器</title>
    <link href="http://www.chenlongfei.cn/2016/07/29/liqi/"/>
    <id>http://www.chenlongfei.cn/2016/07/29/liqi/</id>
    <published>2016-07-29T13:55:08.000Z</published>
    <updated>2016-07-30T07:59:47.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="介绍一下你自己和所做的工作。"><a href="#介绍一下你自己和所做的工作。" class="headerlink" title="介绍一下你自己和所做的工作。"></a>介绍一下你自己和所做的工作。</h4><p>我叫<a href="http://www.chenlongfei.cn">陈龙飞</a>，是一名Android开发者。喜欢骑行，梦想着有机会骑行川藏，环一次青海湖和海南岛。业余健身爱好者，用崔健的话说“一周跑步三次加一次游泳”。酷爱美剧，《权力的游戏》《行尸走肉》期待更新中。<br><a id="more"></a></p>
<h4 id="你都在使用哪些硬件？"><a href="#你都在使用哪些硬件？" class="headerlink" title="你都在使用哪些硬件？"></a>你都在使用哪些硬件？</h4><ul>
<li><strong>MacBook Pro  13-inch</strong><br>漂亮的外观，精美的系统，持久的续航，方便携带，不用关机开盖即用。目前买过的最值的硬件，大大提高了工作和学习效率。</li>
<li><strong>Nexus4</strong><br>用来体验Android原生系统。</li>
<li><strong>小米4</strong><br>目前使用的测试机，MIUI系统前两年做得还是挺美的。</li>
<li><strong>iPhone 6</strong><br>当前正在使用的手机，无法忍受Android系统的各种卡顿。</li>
<li><strong>iPad</strong><br>平时用来阅读PDF，看看小说，偶尔被当作电脑的第二屏使用。</li>
<li><strong>Magic Mouse</strong><br>单纯的喜欢Magic Mouse设计。</li>
<li><strong>TicWatch</strong><br>出门问问众筹的一款Android手表，内置的手表系统是目前国内做得最出色的。</li>
</ul>
<h4 id="软件呢？"><a href="#软件呢？" class="headerlink" title="软件呢？"></a>软件呢？</h4><ul>
<li><strong>Android Studio</strong><br>从Eclipse切换到Android Studio是件幸福的事。</li>
<li><strong>iTerm</strong><br>iTerm+oh my zsh完美搭配。</li>
<li><strong>有道词典</strong><br>阅读文档时方便查单词</li>
<li><strong>Alfred</strong><br>效率神器</li>
<li><strong>Atom</strong><br>丰富的插件，更现代的编辑器，用来阅读代码，写博客。</li>
<li><strong>Dash</strong><br>离线文档管理，必备。</li>
<li><strong>Android Tool</strong><br>非常方便的在电脑上给手机截屏录屏的小工具。</li>
<li><strong>MindNode</strong><br>漂亮的思维导图软件。</li>
<li><strong>Surge</strong><br>科学上网</li>
<li><strong>Postman</strong><br>API测试利器</li>
</ul>
<h4 id="你最理想的工作环境是什么？"><a href="#你最理想的工作环境是什么？" class="headerlink" title="你最理想的工作环境是什么？"></a>你最理想的工作环境是什么？</h4><p>明亮的环境，宽阔的桌面，舒服的椅子。高层，靠窗，面朝大海。</p>
<h4 id="你平时获得工作灵感的方式有哪些？"><a href="#你平时获得工作灵感的方式有哪些？" class="headerlink" title="你平时获得工作灵感的方式有哪些？"></a>你平时获得工作灵感的方式有哪些？</h4><p>洗澡、睡觉前。这些时候思考得会多点。</p>
<h4 id="推荐一件生活中的利器给大家。"><a href="#推荐一件生活中的利器给大家。" class="headerlink" title="推荐一件生活中的利器给大家。"></a>推荐一件生活中的利器给大家。</h4><p>Keep健身软件，健康的身体才是一切的根本。</p>
<blockquote>
<p>本文参与了「利器社群计划」，发现更多创造者和他们的工具：<a href="http://liqi.io/community/" target="_blank" rel="external">http://liqi.io/community/</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;介绍一下你自己和所做的工作。&quot;&gt;&lt;a href=&quot;#介绍一下你自己和所做的工作。&quot; class=&quot;headerlink&quot; title=&quot;介绍一下你自己和所做的工作。&quot;&gt;&lt;/a&gt;介绍一下你自己和所做的工作。&lt;/h4&gt;&lt;p&gt;我叫&lt;a href=&quot;http://www.chenlongfei.cn&quot;&gt;陈龙飞&lt;/a&gt;，是一名Android开发者。喜欢骑行，梦想着有机会骑行川藏，环一次青海湖和海南岛。业余健身爱好者，用崔健的话说“一周跑步三次加一次游泳”。酷爱美剧，《权力的游戏》《行尸走肉》期待更新中。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Jenkins持续集成之Android篇</title>
    <link href="http://www.chenlongfei.cn/2016/07/24/jenkins-android/"/>
    <id>http://www.chenlongfei.cn/2016/07/24/jenkins-android/</id>
    <published>2016-07-23T16:16:47.000Z</published>
    <updated>2016-07-24T14:22:21.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Jenkins是什么"><a href="#Jenkins是什么" class="headerlink" title="Jenkins是什么"></a>Jenkins是什么</h4><p>Jenkins是一个开源的持续集成工具，提供软件开发的持续集成服务。</p>
<h4 id="Jenkins使用场景"><a href="#Jenkins使用场景" class="headerlink" title="Jenkins使用场景"></a>Jenkins使用场景</h4><p>在移动端开发过程中，临近发版时，需要频繁进行集成操作，打包app提交给测试，测试反馈bug，开发修复bug后再重新打包给测试，如此反复操作消耗了大量时间。<br>而持续集成正是针对这类问题的最佳解决方案，使用持续集成可以自动化实现编译、发布、测试。</p>
<a id="more"></a>
<h4 id="Jenkins怎么用"><a href="#Jenkins怎么用" class="headerlink" title="Jenkins怎么用"></a>Jenkins怎么用</h4><p> <a href="https://jenkins.io" target="_blank" rel="external">Jenkins</a>提供了各种安装程序，这里以Docker为例。  </p>
<ul>
<li><p>下载Docker GUI工具<a href="https://kitematic.com" target="_blank" rel="external">kitematic</a></p>
</li>
<li><p>搜索Jenkins获取镜像，并选择create创建容器</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/af9eee84c108c5e87f1bc27088dd8ae4.png" alt=""></p>
</li>
<li><p>启动容器可以看到相关启动日志，这里需要复制Jenkins生成的安装时所需随机密码</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-07-24_20:34:20.jpg" alt="2016-07-24_20:34:20.jpg"></p>
</li>
<li><p>查看服务器地址</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-07-24_20:28:56.jpg" alt=""></p>
</li>
<li><p>浏览器中输入服务器地址，初次安装需要生成的随机密码</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-07-24_20:31:10.jpg" alt=""></p>
</li>
<li><p>选择安装方式</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-07-24_20:40:35.jpg" alt=""></p>
</li>
<li><p>创建用户并登录</p>
</li>
<li><p>首页选择新建，创建一个项目</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-07-24_21:30:41.jpg" alt=""></p>
</li>
<li><p>源码管理，这里我们以git方式为例</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-07-24_21:24:51.jpg" alt=""></p>
</li>
<li><p>设置每10分钟检查一次代码</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-07-24_21:27:23.jpg" alt=""></p>
</li>
<li><p>选取构建方式</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-07-24_21:28:02.jpg" alt=""></p>
</li>
<li><p>执行assembleRelease任务</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-07-24_22:13:38.jpg" alt=""></p>
</li>
<li><p>这里可以执行一些命令，比如自动上传到内测托管平台，如”蒲公英” “FIR”</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-07-24_21:28:46.jpg" alt=""></p>
</li>
<li><p>保存之后，执行自动化构建，可以看到相关日志</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/images/2016-07-24_22:04:47.jpg" alt=""></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Jenkins是什么&quot;&gt;&lt;a href=&quot;#Jenkins是什么&quot; class=&quot;headerlink&quot; title=&quot;Jenkins是什么&quot;&gt;&lt;/a&gt;Jenkins是什么&lt;/h4&gt;&lt;p&gt;Jenkins是一个开源的持续集成工具，提供软件开发的持续集成服务。&lt;/p&gt;
&lt;h4 id=&quot;Jenkins使用场景&quot;&gt;&lt;a href=&quot;#Jenkins使用场景&quot; class=&quot;headerlink&quot; title=&quot;Jenkins使用场景&quot;&gt;&lt;/a&gt;Jenkins使用场景&lt;/h4&gt;&lt;p&gt;在移动端开发过程中，临近发版时，需要频繁进行集成操作，打包app提交给测试，测试反馈bug，开发修复bug后再重新打包给测试，如此反复操作消耗了大量时间。&lt;br&gt;而持续集成正是针对这类问题的最佳解决方案，使用持续集成可以自动化实现编译、发布、测试。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android AOP实践</title>
    <link href="http://www.chenlongfei.cn/2016/07/09/android-aop/"/>
    <id>http://www.chenlongfei.cn/2016/07/09/android-aop/</id>
    <published>2016-07-09T15:33:41.000Z</published>
    <updated>2016-07-09T15:33:14.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="AOP简介"><a href="#AOP简介" class="headerlink" title="AOP简介"></a>AOP简介</h4><p><strong>面向切面编程（AOP，Aspect-oriented programming）</strong> 通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是OOP的延续，是软件开发中的一个热点，也是Spring框架中的一个重要内容，是函数式编程的一种衍生范型。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。<br><a id="more"></a></p>
<h4 id="AOP应用场景"><a href="#AOP应用场景" class="headerlink" title="AOP应用场景"></a>AOP应用场景</h4><p>假设有这样一个需求，需要统计所有的点击事件并进行上报。一般情况下会在所有的点击事件中调用事件上报的方法，这使得代码之间的耦合度非常之高，将来修改事件上报的方法，所有调用该方法的地方都得修改。<br>AOP的目标就是解决这些问题，把这些功能集中起来进行管理。比如上面所说的点击事件上报将使用AOP统一管理。</p>
<h4 id="普通例子（非AOP）"><a href="#普通例子（非AOP）" class="headerlink" title="普通例子（非AOP）"></a>普通例子（非AOP）</h4><p>每个页面点击事件中都需要调用事件上报的方法。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AOPActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Button firstBtn;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_aop);</div><div class="line"></div><div class="line">        firstBtn = (Button) findViewById(R.id.btn_first);</div><div class="line">        firstBtn.setOnClickListener(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</div><div class="line">            <span class="keyword">case</span> R.id.btn_first:</div><div class="line">                <span class="comment">//上报点击事件</span></div><div class="line">                EventManage.sendClickEvent();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="AspectJ"><a href="#AspectJ" class="headerlink" title="AspectJ"></a>AspectJ</h4><p>AspectJ是一套支持AOP的语言，完全兼容Java。<br>使用AspectJ的两种方法:</p>
<ul>
<li>完全使用AspectJ的语言</li>
<li>使用AspectJ注解</li>
</ul>
<h4 id="AspectJ语法"><a href="#AspectJ语法" class="headerlink" title="AspectJ语法"></a>AspectJ语法</h4><p><strong>Join Points</strong> 程序运行时的一些执行点。比如函数调用、函数执行等等。<br><strong>Pointcuts</strong> 一个程序会有很多个JPoints，不是每一个JPonints都是我们所需要的，而选择感兴趣的JPonints就是Pointcuts提供的功能。</p>
<p>Join Points类型与之对应的Pointcuts:   </p>
<table>
<thead>
<tr>
<th>Join point category</th>
<th>Pointcut syntax</th>
</tr>
</thead>
<tbody>
<tr>
<td>Method execution(函数执行)</td>
<td>execution(MethodSignature)</td>
</tr>
<tr>
<td>Method call(函数调用)</td>
<td>call(MethodSignature)</td>
</tr>
<tr>
<td>Constructor execution(构造函数执行)</td>
<td>execution(ConstructorSignature)</td>
</tr>
<tr>
<td>Constructor call(构造函数调用)</td>
<td>call(ConstructorSignature)</td>
</tr>
<tr>
<td>Class initialization(类初始化)</td>
<td>staticinitialization(TypeSignature)</td>
</tr>
<tr>
<td>Filed read access(获取变量)</td>
<td>get(FiledSignature)</td>
</tr>
<tr>
<td>Filed write access(设置变量)</td>
<td>set(FiledSignature)</td>
</tr>
<tr>
<td>Exception handler execution(异常处理)</td>
<td>handler(TypeSignature)</td>
</tr>
<tr>
<td>Object initialization(Object 在构造函数中做得工作)</td>
<td>initialization(ConstructorSignature)</td>
</tr>
<tr>
<td>Object pre-initialization</td>
<td>preinitialization(ConstructorSignature)</td>
</tr>
<tr>
<td>Advice execution</td>
<td>adviceexecution()</td>
</tr>
</tbody>
</table>
<p><strong>Advice</strong> 选择Join Points后要做的事情:</p>
<table>
<thead>
<tr>
<th>关键词</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>before()</td>
<td>Join Points执行之前需要做的事情</td>
</tr>
<tr>
<td>after()</td>
<td>Join Points执行之后需要做的事情</td>
</tr>
<tr>
<td>after():returning(返回值类型)   after():throwing(异常类型)</td>
<td>假设JPoint是一个函数调用的话，那么函数调用执行完有两种方式退出，一个是正常的return，另外一个是抛异常。注意，after()默认包括returning和throwing两种情况</td>
</tr>
<tr>
<td>返回值类型 around()</td>
<td>around替代原Join Points，如果要执行原JPoint的话，需要调用proceed</td>
</tr>
</tbody>
</table>
<h4 id="Android-AspectJ-Usage"><a href="#Android-AspectJ-Usage" class="headerlink" title="Android AspectJ Usage"></a>Android AspectJ Usage</h4><p>使用AspectJ Gradle插件<a href="https://github.com/HujiangTechnology/gradle_plugin_android_aspectjx" target="_blank" rel="external">gradle-android-plugin-aspectjx</a></p>
<h4 id="AOP实践（使用AspectJ注解）"><a href="#AOP实践（使用AspectJ注解）" class="headerlink" title="AOP实践（使用AspectJ注解）"></a>AOP实践（使用AspectJ注解）</h4><p>选择切入的目标函数:<br>访问权限（public/private/protect，以及static/final）属于可选项。如果不设置它们，则默认都会选择。<br>返回值类型就是普通的函数的返回值类型。如果不限定类型的话，就用<code>*</code>通配符表示。<br>包名.函数名用于查找匹配的函数。可以使用通配符，包括<code>*</code>和<code>..</code>以及<code>+</code>号。其中<code>*</code>号用于匹配除<code>.</code>号之外的任意字符，而<code>..</code>则表示任意子package，<code>+</code>号表示子类。  </p>
<p><code>@Pointcut(&quot;execution(* *.onClick(android.view.View)) &amp;&amp; args(view)&quot;)</code><br>表示Join Points类型为<strong>execution</strong>，目标函数为任意包下返回值为任意类型的名为<strong>onClick</strong>的函数，其中参数类型为<strong>View</strong></p>
<p><code>@Around(&quot;onClickPointcut(view)&quot;)</code><br>替换原Join Points<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Aspect</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UBCAspectJ</span> </span>&#123;</div><div class="line">    <span class="meta">@Pointcut</span>(<span class="string">"execution(* *.onClick(android.view.View)) &amp;&amp; args(view)"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClickPointcut</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Pointcut</span>(<span class="string">"execution(* *.onItemClick(android.widget.AdapterView&lt;?&gt;,android.view.View,int,long)) &amp;&amp; args(adapterView,view,position,id)"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClickPointcut</span><span class="params">(AdapterView&lt;?&gt; adapterView, View view, <span class="keyword">int</span> position, <span class="keyword">long</span> id)</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Around</span>(<span class="string">"onClickPointcut(view)"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(ProceedingJoinPoint joinPoint, View view)</span> <span class="keyword">throws</span> Throwable </span>&#123;</div><div class="line">        <span class="comment">//统一处理onClick事件</span></div><div class="line">        joinPoint.proceed(joinPoint.getArgs());</div><div class="line">        handlerClickEvent(joinPoint, <span class="keyword">null</span>, view, <span class="number">0</span>);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Around</span>(<span class="string">"onItemClickPointcut(adapterView,view,position,id)"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(ProceedingJoinPoint joinPoint, AdapterView&lt;?&gt; adapterView, View view, <span class="keyword">int</span> position, <span class="keyword">long</span> id)</span> <span class="keyword">throws</span> Throwable </span>&#123;</div><div class="line">        <span class="comment">//统一处理onItemClick事件</span></div><div class="line">        handlerClickEvent(joinPoint, adapterView, view, position);</div><div class="line">        joinPoint.proceed(joinPoint.getArgs());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handlerClickEvent</span><span class="params">(ProceedingJoinPoint joinPoint, AdapterView&lt;?&gt; adapterView, View view, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        <span class="comment">//上报点击事件</span></div><div class="line">        EventManage.sendClickEvent();</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>使用AOP我们就不用给所有点击事件添加上报点击事件的方法，而是统一使用AOP管理。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;AOP简介&quot;&gt;&lt;a href=&quot;#AOP简介&quot; class=&quot;headerlink&quot; title=&quot;AOP简介&quot;&gt;&lt;/a&gt;AOP简介&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;面向切面编程（AOP，Aspect-oriented programming）&lt;/strong&gt; 通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是OOP的延续，是软件开发中的一个热点，也是Spring框架中的一个重要内容，是函数式编程的一种衍生范型。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ReactNative开发环境搭建</title>
    <link href="http://www.chenlongfei.cn/2016/07/04/react-native-dev-env/"/>
    <id>http://www.chenlongfei.cn/2016/07/04/react-native-dev-env/</id>
    <published>2016-07-04T07:35:02.000Z</published>
    <updated>2016-07-05T02:59:39.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="环境需求"><a href="#环境需求" class="headerlink" title="环境需求"></a>环境需求</h4><ol>
<li>OS X是开发iOS应用所必须的</li>
<li><p><a href="http://brew.sh" target="_blank" rel="external">Homebrew</a>(软件包管理工具)</p>
<a id="more"></a>
<p>安装命令:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</div></pre></td></tr></table></figure>
</li>
<li><p><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></p>
<p>安装方法一:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install node</div></pre></td></tr></table></figure>
<p>安装方法二:(推荐)</p>
<p>首先安装nvm(node.js版本管理)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install nvm</div></pre></td></tr></table></figure>
<p>安装最新版本node.js</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//(nvm alias default node指定全局版本)</div><div class="line">nvm install node &amp;&amp; nvm alias default node</div></pre></td></tr></table></figure>
</li>
<li><p>watchman</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install watchman</div></pre></td></tr></table></figure>
</li>
<li><p>flow(js代码类型检查)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install flow</div></pre></td></tr></table></figure>
</li>
<li><p>安装React Native命令行工具</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//(-g指定为全局安装)</div><div class="line">$ npm install -g react-native-cli</div><div class="line">//初始化项目</div><div class="line">$ react-native init AwesomeProject`</div><div class="line">//译注：由于众所周知的网络原因，react-native命令行从npm官方源拖代码时会遇上麻烦。请将npm仓库源替换为国内镜像：</div><div class="line">npm config set registry https://registry.npm.taobao.org</div><div class="line">npm config set disturl https://npm.taobao.org/dist</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="Demo运行"><a href="#Demo运行" class="headerlink" title="Demo运行"></a>Demo运行</h4><h6 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h6><ul>
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cd AwesomeProject</div></pre></td></tr></table></figure>
</li>
<li><p>用XCode打开<code>ios/AwesomeProject.xcodeproj</code>并点击Run按钮</p>
</li>
<li>使用你喜欢的文本编辑器打开<code>index.ios.js</code>并随便改上几行</li>
<li>在iOS Emulator中按下<code>⌘-R</code>就可以刷新APP并看到你的最新修改</li>
</ul>
<h6 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h6><ul>
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cd AwesomeProject</div></pre></td></tr></table></figure>
</li>
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ react-native run-android</div></pre></td></tr></table></figure>
</li>
<li><p>使用你喜欢的文本编辑器打开<code>index.android.js</code>并随便改上几行</p>
</li>
<li>按Menu键（通常是F2，在Genymotion模拟器中是⌘+M）然后选择 Reload JS 就可以看到你的最新修改</li>
<li>在终端下运行<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb logcat *:S ReactNative:V ReactNativeJS:V</div></pre></td></tr></table></figure>
</li>
</ul>
<p>可以看到你的应用的日志</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;环境需求&quot;&gt;&lt;a href=&quot;#环境需求&quot; class=&quot;headerlink&quot; title=&quot;环境需求&quot;&gt;&lt;/a&gt;环境需求&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;OS X是开发iOS应用所必须的&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://brew.sh&quot;&gt;Homebrew&lt;/a&gt;(软件包管理工具)&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>移动设备抓包利器之Tcpdump</title>
    <link href="http://www.chenlongfei.cn/2015/08/15/wireshark-ios-android/"/>
    <id>http://www.chenlongfei.cn/2015/08/15/wireshark-ios-android/</id>
    <published>2015-08-15T15:57:02.000Z</published>
    <updated>2016-11-06T02:19:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要讲解如何对iOS和Android进行抓包。<br><a id="more"></a></p>
<hr>
<p>工具:<br>        1.<a href="http://download.csdn.net/detail/clf421575839/8680443" target="_blank" rel="external">tcpdump</a><br>        2.<a href="https://www.wireshark.org/download.html" target="_blank" rel="external">Wireshark</a></p>
<hr>
<h3 id="Android平台"><a href="#Android平台" class="headerlink" title="Android平台:"></a>Android平台:</h3><p><strong>设备必须已经root</strong><br>1.使用adb 执行以下命令,获取su权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">adb shell</div><div class="line">su</div></pre></td></tr></table></figure>
<p>2.修改 /data/local目录权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 777 data/local</div></pre></td></tr></table></figure>
<p>3.将tcpdump文件push到/data/local目录下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb push /Users/chenlongfei/Downloads/tcpdump /data/local</div></pre></td></tr></table></figure>
<p>4.修改tcpdump文件权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 6755 /data/local/tcpdump</div></pre></td></tr></table></figure>
<p>5.执行抓包监听命令,并将pcap文件保存到sdcard目录中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/data/local/tcpdump -p -s 0 -w /sdcard/test.pcap</div></pre></td></tr></table></figure>
<p>6.使用control+z 停止抓包<br>7.从设备中获取抓包文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb pull /sdcard/test.pcap /Users/chenlongfei/Downloads</div></pre></td></tr></table></figure>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/b5decc10ed099c63f919260cd1fac1cb.png" alt=""></p>
<p>至此抓包就结束了，PC上使用Wireshark对文件进行分析。</p>
<h3 id="iOS平台"><a href="#iOS平台" class="headerlink" title="iOS平台:"></a>iOS平台:</h3><p><strong>设备已经越狱</strong><br>1.在Cydia中安装OpenSSH、tcpdump<br>2.查看设备IP<br>3.连接到设备</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ssh root@192.168.1.103</div><div class="line">password:alpine(默认密码)</div></pre></td></tr></table></figure>
<p>4.开始抓包       </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tcpdump -p -s 0 -w /test.pcap</div></pre></td></tr></table></figure>
<p>5.使用pp助手导出pcap文件即可</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/737b885c459913febca047a66ad39bfe.png" alt=""></p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/e425db4105541e14a9c86252ac0d2028.png" alt=""></p>
<hr>
<p>教程结束</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要讲解如何对iOS和Android进行抓包。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在PreferenceActivity中使用ToolBar</title>
    <link href="http://www.chenlongfei.cn/2015/08/07/preference-activity-toolbar-usage/"/>
    <id>http://www.chenlongfei.cn/2015/08/07/preference-activity-toolbar-usage/</id>
    <published>2015-08-07T09:31:46.000Z</published>
    <updated>2016-11-06T02:15:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>关于PreferenceActivity、PreferenceFragment、ToolBar就不再做介绍了，本文主要讲解的是在PreferenceActivity、PreferenceFragment中添加ToolBar。<br><a id="more"></a></p>
<hr>
<p><strong>下面介绍不同版本相应的方法:</strong></p>
<h3 id="PreferenceActivity-ToolBar-限Android-5-0以上"><a href="#PreferenceActivity-ToolBar-限Android-5-0以上" class="headerlink" title="PreferenceActivity+ToolBar(限Android 5.0以上)"></a>PreferenceActivity+ToolBar(限Android 5.0以上)</h3><p>继承PreferenceActivity重写onCreate方法添加如下代码:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">  <span class="meta">@Override</span></div><div class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">      <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">      setStatusBar();</div><div class="line">      <span class="comment">//找到Activity根布局</span></div><div class="line">      ViewGroup rootView = (ViewGroup) findViewById(android.R.id.content);</div><div class="line">      <span class="comment">//获取根布局子View</span></div><div class="line">      View content = rootView.getChildAt(<span class="number">0</span>);</div><div class="line">      <span class="comment">//加载自定义布局文件</span></div><div class="line">      LinearLayout toolbarLayout = (LinearLayout)LayoutInflater.from(<span class="keyword">this</span>).inflate(R.layout.activity_toolbar, <span class="keyword">null</span>);</div><div class="line">       <span class="comment">//移除根布局所有子view</span></div><div class="line">      rootView.removeAllViews();</div><div class="line">      <span class="comment">//注意这里一要将前面移除的子View添加到我们自定义布局文件中，否则PreferenceActivity中的Header将不会显示</span></div><div class="line">      toolbarLayout.addView(content);</div><div class="line">      <span class="comment">//将包含Toolbar的自定义布局添加到根布局中</span></div><div class="line">      rootView.addView(toolbarLayout);</div><div class="line">      <span class="comment">//设置toolbar</span></div><div class="line">      Toolbar toolbar=(Toolbar)toolbarLayout.findViewById(R.id.toolbar);</div><div class="line">      toolbar.setTitle(<span class="string">"设置"</span>);</div><div class="line">      toolbar.setTitleTextColor(Color.WHITE);</div><div class="line">      Drawable d=getResources().getDrawable(R.drawable.abc_ic_ab_back_mtrl_am_alpha);</div><div class="line">      toolbar.setNavigationIcon(d);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>activity_toolbar.xml内容：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">android.widget.Toolbar</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></div><div class="line">        <span class="attr">android:minHeight</span>=<span class="string">"?attr/actionBarSize"</span>&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">android.widget.Toolbar</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>这里给出一个更简单的方法:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">     <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">     <span class="comment">//直接调用setContentView方法</span></div><div class="line">     setContentView(R.layout.activity_toolbar);</div><div class="line">     Toolbar toolbar=(Toolbar)findViewById(R.id.toolbar);</div><div class="line">     toolbar.setTitle(<span class="string">"设置"</span>);</div><div class="line">     toolbar.setTitleTextColor(Color.WHITE);</div><div class="line">     Drawable d=getResources().getDrawable(R.drawable.abc_ic_ab_back_mtrl_am_alpha);</div><div class="line">     toolbar.setNavigationIcon(d);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>activity_toolbar.xml内容：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">android.widget.Toolbar</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></div><div class="line">        <span class="attr">android:minHeight</span>=<span class="string">"?attr/actionBarSize"</span>&gt;<span class="tag">&lt;/<span class="name">android.widget.Toolbar</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">--!这里必须能添加一个id为@android:id</span>/<span class="attr">list</span>的<span class="attr">ListView</span>否则会报错<span class="attr">--</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ListView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@android:id/list"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;<span class="tag">&lt;/<span class="name">ListView</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="ActionBarActivity-PreferenceFragment-ToolBar-适用于Android-5-0以下"><a href="#ActionBarActivity-PreferenceFragment-ToolBar-适用于Android-5-0以下" class="headerlink" title="ActionBarActivity+PreferenceFragment+ToolBar(适用于Android 5.0以下)"></a>ActionBarActivity+PreferenceFragment+ToolBar(适用于Android 5.0以下)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SettingsActivity</span> <span class="keyword">extends</span> <span class="title">ActionBarActivity</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Toolbar mToolbar;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_settings);</div><div class="line">        initViews();</div><div class="line">        setStatusBar();</div><div class="line">        setToolbar();</div><div class="line">        initFragment();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> </span>&#123;</div><div class="line">        mToolbar = (Toolbar) findViewById(R.id.toolbar);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setToolbar</span><span class="params">()</span> </span>&#123;</div><div class="line">        mToolbar.setTitle(<span class="string">"设置"</span>);</div><div class="line">        mToolbar.setTitleTextColor(Color.WHITE);</div><div class="line">        Drawable d=getResources().getDrawable(R.drawable.abc_ic_ab_back_mtrl_am_alpha);</div><div class="line">        mToolbar.setNavigationIcon(d);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onOptionsItemSelected(item);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initFragment</span><span class="params">()</span> </span>&#123;</div><div class="line">        getFragmentManager().beginTransaction().replace(R.id.content, <span class="keyword">new</span> SettingsFragment()).commit();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SettingsFragment</span> <span class="keyword">extends</span> <span class="title">PreferenceFragment</span> <span class="keyword">implements</span> <span class="title">Preference</span>.<span class="title">OnPreferenceChangeListener</span> </span>&#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">            addPreferencesFromResource(R.xml.settings_preference_fragment);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onPreferenceChange</span><span class="params">(Preference preference, Object newValue)</span> </span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//设置状态栏颜色</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setStatusBar</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT == Build.VERSION_CODES.KITKAT) &#123;</div><div class="line">            Window window = getWindow();</div><div class="line">            window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);</div><div class="line">            ViewGroup rootView = (ViewGroup) window.getDecorView();</div><div class="line">            View statusBarBg;</div><div class="line">            FrameLayout.LayoutParams layoutParams;</div><div class="line">            <span class="keyword">if</span> (rootView.getChildCount() &gt; <span class="number">1</span> &amp;&amp; (statusBarBg = rootView.getChildAt(<span class="number">1</span>)) != <span class="keyword">null</span> &amp;&amp; statusBarBg.getId() == R.id.startus_bar_bg) &#123;</div><div class="line">                layoutParams = (FrameLayout.LayoutParams) statusBarBg.getLayoutParams();</div><div class="line">                layoutParams.height = Appearance.getStatusBarHeight();</div><div class="line">                layoutParams.gravity = Gravity.TOP;</div><div class="line">                statusBarBg.setBackgroundColor(getResources().getColor(R.color.green));</div><div class="line">                statusBarBg.setLayoutParams(layoutParams);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                layoutParams = <span class="keyword">new</span> FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT, Appearance.getStatusBarHeight());</div><div class="line">                layoutParams.gravity = Gravity.TOP;</div><div class="line">                statusBarBg = <span class="keyword">new</span> View(<span class="keyword">this</span>);</div><div class="line">                statusBarBg.setBackgroundColor(getResources().getColor(R.color.green));</div><div class="line">                statusBarBg.setId(R.id.startus_bar_bg);</div><div class="line">                rootView.addView(statusBarBg, layoutParams);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>布局文件：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></div><div class="line">        <span class="attr">android:minHeight</span>=<span class="string">"?attr/actionBarSize"</span></div><div class="line">        <span class="attr">app:popupTheme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Light"</span></div><div class="line">        <span class="attr">app:theme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.ActionBar"</span>&gt;<span class="tag">&lt;/<span class="name">android.support.v7.widget.Toolbar</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/content"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;<span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Preference xml:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">PreferenceScreen</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Preference</span> <span class="attr">android:title</span>=<span class="string">"@string/settings_about"</span>&gt;</span><span class="tag">&lt;/<span class="name">Preference</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Preference</span> <span class="attr">android:title</span>=<span class="string">"@string/settings_feedback"</span>&gt;</span><span class="tag">&lt;/<span class="name">Preference</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Preference</span> <span class="attr">android:title</span>=<span class="string">"@string/settings_check_update"</span>&gt;</span><span class="tag">&lt;/<span class="name">Preference</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">PreferenceScreen</span>&gt;</span></div></pre></td></tr></table></figure>
<p>好了，收工。<br>效果图如下：</p>
<p><img src="http://7xl2ut.com1.z0.glb.clouddn.com/2459e4cd39306879258cd1bc480f691b.png" alt="preview"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于PreferenceActivity、PreferenceFragment、ToolBar就不再做介绍了，本文主要讲解的是在PreferenceActivity、PreferenceFragment中添加ToolBar。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>System.out.print(&quot;Hello World&quot;)</title>
    <link href="http://www.chenlongfei.cn/2015/08/01/hello-world/"/>
    <id>http://www.chenlongfei.cn/2015/08/01/hello-world/</id>
    <published>2015-08-01T13:40:45.000Z</published>
    <updated>2016-11-25T02:58:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>这几年断断续续写过不少博客，从最初的新浪博客、到wordpress个人博客，大多是写生活琐事，也都没有坚持下来。<br>近来hexo+github pages搭建博客的方式逐渐流行起来，使自己萌生了再次写博客的想法。人生苦短，总要为自己留下点什么，而文字也是一种比较好的方式。<br>最初写博客是为了心中那个文青梦，现在希望写博客的同时，能够提升自己写作能力，思考能力，顺便分享技术，有一个输入到产出的过程。<br><a id="more"></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这几年断断续续写过不少博客，从最初的新浪博客、到wordpress个人博客，大多是写生活琐事，也都没有坚持下来。&lt;br&gt;近来hexo+github pages搭建博客的方式逐渐流行起来，使自己萌生了再次写博客的想法。人生苦短，总要为自己留下点什么，而文字也是一种比较好的方式。&lt;br&gt;最初写博客是为了心中那个文青梦，现在希望写博客的同时，能够提升自己写作能力，思考能力，顺便分享技术，有一个输入到产出的过程。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
